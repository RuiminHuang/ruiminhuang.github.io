<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FuyaLuo移植记录</title>
      <link href="/2025/06/27/fuyaluo-yi-zhi-ji-lu/"/>
      <url>/2025/06/27/fuyaluo-yi-zhi-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="维度准换总结"><a href="#维度准换总结" class="headerlink" title="维度准换总结"></a>维度准换总结</h2><ul><li><p>PIL与OpenCV读出的图片的numpy维度顺序都是： HWC（非单通道）， HW（单通道）</p></li><li><p>OpenCV的RGB维度顺序是：BGR； PIL的RGB维度顺序是：RGB</p></li><li><p>Pytorch Dalaloader出来之后， Numpy都会转Tensor， 得到Tensor的维度顺序是： BCHW（非单通道），BHW（单通道）</p></li><li><p>PyTorch中ToTensor的操作： 除以255，并进行维度调整</p></li><li><p>PyTorch中ToTensor维度调整： HWC-&gt;CHW, HW-&gt;CHW</p></li><li><p>Pytorch中ToTensor要求输入的数据类型： PIL图像对象或Numpy数组</p></li><li><p>ToTensor与不ToTensor的区别：</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 对于Edge的处理</span>img_B_edge <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_B_edge_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token comment">#PIL HW 0~255</span>img_B_edge <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>img_B_edge<span class="token punctuation">)</span> <span class="token comment">#Tensor CHW 0~1</span>output of dataloader <span class="token comment">#Tensor BCHW 0~1</span><span class="token comment"># 对于Mask的处理</span>img_B_mask <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_B_mask_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token comment">#PIL HW 0~255</span>img_B_mask <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img_B_mask<span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>int64<span class="token punctuation">)</span> <span class="token comment">#Numpy HW 0~255</span>output of dataloader <span class="token comment">#Tensor BHW 0~255</span><span class="token comment"># 对于RGB图像的处理</span>img_B <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_B_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span> <span class="token comment">#PIL HWC 0~255</span>img_B <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>img_B<span class="token punctuation">)</span> <span class="token comment">#Tensor CHW 0~1</span>output of dataloader <span class="token comment">#Tensor BCHW 0~1</span><span class="token comment"># 对于灰度图像的处理</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span> <span class="token comment">#PIL HW 0~255</span>img <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span> <span class="token comment">#Tensor CHW 0~1</span>output of dataloader <span class="token comment">#Tensor BCHW 0~1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>所以：之前就只有BCHW的区别和BHW的区别</p></blockquote><h2 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h2><ul><li><p>已经解决</p></li><li><p>更正：不存在了，因为是.convert(‘L’)操作，到numpy时只有单通道。</p></li><li><p>numpy时： hw</p></li><li><p>dataloader时: bhw</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">对于：img_A_edge和img_B_edge官方的：直接除以255我的：直接ToTensor区别：我的维度为chw，别人的为hwc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>已经解决</p></li><li><p>确实默认是固定住，也已经固定住</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">按照目前这种形式，每次加载图片的顺序，都需要固定住<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>等待解决</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">IR_pos_h <span class="token operator">=</span> np.random.randint<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">32</span><span class="token punctuation">)</span>IR_pos_w <span class="token operator">=</span> np.random.randint<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">104</span><span class="token punctuation">)</span>当中的具体数值也需要注意注意：这是红外的训练过程，为什么这样裁剪，应当看训练过程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>等待解决</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">随机缩放裁剪的情况，可能需要固定住<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新建论文专用Github仓库步骤</title>
      <link href="/2025/05/25/xin-jian-lun-wen-zhuan-yong-github-cang-ku-bu-zou/"/>
      <url>/2025/05/25/xin-jian-lun-wen-zhuan-yong-github-cang-ku-bu-zou/</url>
      
        <content type="html"><![CDATA[<h2 id="一、在Github上新建仓库"><a href="#一、在Github上新建仓库" class="headerlink" title="一、在Github上新建仓库"></a>一、在Github上新建仓库</h2><p>新建页面如下图所示：</p><p><img src="http://pic.huangruimin.tech/20250524174905.png"></p><p>其中仓库名称将直接关系到链接，删除仓库后只要仓库名称一直，那么链接就是一致的。</p><p>其中描述的地方这样说，注意这个描述也是会直接放到README.md文件里面去的。</p><blockquote><p>The official implementation of the paper “Dynamic Feature Selection: A Novel Network with Feature Enhancement and Dynamic Attention for Infrared Small Target Detection” in PyTorch.</p></blockquote><p>其中一定要选Public，选择Private的话，那就只有自己能看到这个仓库了。</p><p>其中要勾选Add a README file。</p><p>其中.gitignore表示哪些文件是要忽略跟踪的，选中Python模板表示要忽略pycache等相关文件的跟踪。</p><p>其中Apache License 2.0表示这个仓库后续需要申请专利，如果是MIT License就表示这个仓库后续不需要申请专利。</p><h2 id="二、配置ssh公钥，并将ssh公钥粘贴至Github"><a href="#二、配置ssh公钥，并将ssh公钥粘贴至Github" class="headerlink" title="二、配置ssh公钥，并将ssh公钥粘贴至Github"></a>二、配置ssh公钥，并将ssh公钥粘贴至Github</h2><p>这一步请直接参考廖雪峰的教程-&gt;远程仓库，其链接为：<a href="https://liaoxuefeng.com/books/git/remote/index.html">链接</a></p><p>在添加好公钥之后，执行以下两个步骤，才能在后续提交更改</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">"huang_ruimin@whu.edu.cn"</span><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">"huang_ruimin"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以下内容作为备忘，具体为添加公钥的步骤，以防链接失效：</p><ul><li><p>生成公钥的命令为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"huang_ruimin@whu.edu.cn"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加公钥的步骤为：</p></li></ul><p><img src="http://pic.huangruimin.tech/20250524181227.png"></p><ul><li><p>具体添加的方法为：</p><blockquote><p>在Key文本框里粘贴id_rsa.pub文件的内容。</p></blockquote></li><li><p>快速查看id_rsa.pub内容的方法为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span>   ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在Linux系统上，其ssh公钥的保存路径为：</p><blockquote><p>~/.ssh/</p></blockquote></li></ul><h2 id="三、将仓库下载到服务器"><a href="#三、将仓库下载到服务器" class="headerlink" title="三、将仓库下载到服务器"></a>三、将仓库下载到服务器</h2><p>注意要使用git命令进行下载，而不能直接点download</p><p><img src="http://pic.huangruimin.tech/20250524180319.png"></p><p>在服务器终端下载的命令为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone git@github.com:RuiminHuang/DSTransNet.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下载后，可以发现，包含了.git的隐藏文件：</p><p><img src="http://pic.huangruimin.tech/20250524182027.png"></p><h2 id="四、开始修改（参考案例：修改README文件）"><a href="#四、开始修改（参考案例：修改README文件）" class="headerlink" title="四、开始修改（参考案例：修改README文件）"></a>四、开始修改（参考案例：修改README文件）</h2><pre class="line-numbers language-none"><code class="language-none"># DSTransNet[![Static Badge](https://img.shields.io/badge/building-pass-green?style=flat-square)](https://github.com/RuiminHuang/DSTransNet)[![Static Badge](https://img.shields.io/badge/language-Python-blue?style=flat-square)](https://www.python.org/)[![Static Badge](https://img.shields.io/badge/framework-PyTorch-blue?style=flat-square)](https://pytorch.org/)[![Static Badge](https://img.shields.io/badge/license-Apache2.0-blue?style=flat-square)](./LICENSE)The official implementation of the paper "Dynamic Feature Selection: A Novel Network with Feature Enhancement and Dynamic Attention for Infrared Small Target Detection" in PyTorch.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之后在Github上显示的效果为：</p><p><img src="http://pic.huangruimin.tech/20250524182435.png"></p><p>而在READM.md中显示了小图片，是因为使用了静态徽章。关于静态徽章得到说明，请参考链接：<a href="https://shields.io/badges/static-badge">链接</a></p><h2 id="五、提交"><a href="#五、提交" class="headerlink" title="五、提交"></a>五、提交</h2><p>注意理解以下命令：</p><ul><li><p>检查修改状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加特定文件跟踪</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>文件名<span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加所有文件跟踪</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除某个文件跟踪</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> test.txt<span class="token function">git</span> <span class="token function">rm</span> test.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>提交修改到本地仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"提交描述"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看GitHub中的分支名称以及地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20250524183655.png"></p></li></ul><blockquote><p>这一步相当于，已经做好了以下操作，这也是采用clone方式建立仓库的好处</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:RuiminHuang/DSTransNet.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>查看GitHub中的分支名称</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-r</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20250524183816.png"></p></li><li><p>查看本地中的分支名称</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20250524184015.png"></p></li><li><p>提交的时候需理解：</p></li></ul><blockquote><p>Github(remote)仓库名称为：origin</p></blockquote><blockquote><p>本地仓库下的分支名称为：main</p></blockquote><blockquote><p>origin是仓库名称，main是分支名称</p></blockquote><blockquote><p>origin仓库下面一般会有多个分支，要确保本地提交的分支origin仓库也有</p></blockquote><p><img src="http://pic.huangruimin.tech/20250524185901.png"></p><ul><li><p>理解之后，最后提交的命令为：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="六、提交命令小结"><a href="#六、提交命令小结" class="headerlink" title="六、提交命令小结"></a>六、提交命令小结</h2><p>直接背诵以下命令，可提高效率</p><ul><li><p>增加/修改文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"fix some bug"</span><span class="token function">git</span> status<span class="token function">git</span> push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> test.txt<span class="token function">git</span> <span class="token function">rm</span> test.txt<span class="token function">git</span> status<span class="token function">git</span> push origin main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Overleaf私有</title>
      <link href="/2025/04/18/overleaf-si-you/"/>
      <url>/2025/04/18/overleaf-si-you/</url>
      
        <content type="html"><![CDATA[<h2 id="一、操作参考链接"><a href="#一、操作参考链接" class="headerlink" title="一、操作参考链接"></a>一、操作参考链接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">https://zhuanlan.zhihu.com/p/29053435112https://blog.csdn.net/weixin_54430466/article/details/145708733https://zhuanlan.zhihu.com/p/6093317488https://github.com/overleaf/toolkit/blob/master/doc/quick-start-guide.md<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、后期插件更新维护链接"><a href="#二、后期插件更新维护链接" class="headerlink" title="二、后期插件更新维护链接"></a>二、后期插件更新维护链接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> bin/up <span class="token parameter variable">-d</span><span class="token function">sudo</span> bin/shelltlmgr option repository http://mirrors.cloud.tencent.com/CTAN/systems/texlive/tlnettlmgr option show repositorytlmgr update <span class="token parameter variable">--self</span> <span class="token parameter variable">--all</span> tlmgr <span class="token function">install</span> scheme-fulltlmgr info scheme-fulltlmgr path <span class="token function">add</span>tlmgr <span class="token function">install</span> ctextlmgr info ctextlmgr path <span class="token function">add</span>tlmgr <span class="token function">install</span> thmtoolstlmgr info thmtoolstlmgr path <span class="token function">add</span><span class="token builtin class-name">exit</span><span class="token function">cat</span> config/version<span class="token function">sudo</span> <span class="token function">docker</span> commit sharelatex sharelatex/sharelatex:5.4.0-with-texlive-full<span class="token builtin class-name">cd</span> config<span class="token function">sudo</span> <span class="token function">vim</span> version<span class="token number">5.4</span>.0-with-texlive-full<span class="token function">sudo</span> bin/stop<span class="token function">sudo</span> bin/up <span class="token parameter variable">-d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、后期跨版本更新维护链接"><a href="#三、后期跨版本更新维护链接" class="headerlink" title="三、后期跨版本更新维护链接"></a>三、后期跨版本更新维护链接</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> bin/up <span class="token parameter variable">-d</span><span class="token function">sudo</span> bin/shelltlmgr option repository http://mirrors.cloud.tencent.com/CTAN/systems/texlive/tlnettlmgr option show repositorytlmgr update <span class="token parameter variable">--self</span> <span class="token parameter variable">--all</span> <span class="token builtin class-name">cd</span> ~<span class="token function">wget</span> http://mirrors.cloud.tencent.com/CTAN/systems/texlive/tlnet/update-tlmgr-latest.sh<span class="token function">chmod</span> +x update-tlmgr-latest.sh./update update-tlmgr-latest.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PPT设计制作快捷键</title>
      <link href="/2025/02/13/ppt-she-ji-zhi-zuo-kuai-jie-jian/"/>
      <url>/2025/02/13/ppt-she-ji-zhi-zuo-kuai-jie-jian/</url>
      
        <content type="html"><![CDATA[<p><img src="http://pic.huangruimin.tech/20250213203951.png"></p><p><img src="http://pic.huangruimin.tech/20250213194336.png"></p><p><img src="http://pic.huangruimin.tech/20250213194445.png"></p><p><img src="http://pic.huangruimin.tech/20250213194538.png"></p><p><img src="http://pic.huangruimin.tech/20250213194752.png"></p><p><img src="http://pic.huangruimin.tech/20250213194923.png"></p><p><img src="http://pic.huangruimin.tech/20250213194936.png"></p><p><img src="http://pic.huangruimin.tech/20250213195008.png"></p><p><img src="http://pic.huangruimin.tech/20250213195046.png"></p><p><img src="http://pic.huangruimin.tech/20250213195142.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>20250118_中午1点会议</title>
      <link href="/2025/01/25/20250118-zhong-wu-1-dian-hui-yi/"/>
      <url>/2025/01/25/20250118-zhong-wu-1-dian-hui-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、开场白"><a href="#一、开场白" class="headerlink" title="一、开场白"></a>一、开场白</h2><p>先作一个开场白，</p><p>第一：先说一下我们团队在2024年取得的成绩：我们这个团队获批了湖北省国防创新团队，给大家一个概念：我们这个团队在2018年获得了湖北省创新团队，2022年获得了教育部创新团队，去年获得了湖北省创新团队，横向比较一下，整个电信学院，如果没有分开的话，还是原来的老电信学院，那么，迄今为止，获得湖北省创新团队的，就3家，我们是其中之一；既获得了湖北省创新团队，又获得了教育部创新团队的有2家，另外一个是现在的副校长，郭温校长的团队。那么，3个省部级创新团队都拿到了。调查了一下，全省就我们一家。所以，我们这个团队，或者说是这个平台，应该是湖北省最好的，之一。</p><p>第二：那么，去年呢，我们团队，获批了两项国家自然科学基金，国家自然科学基金呢，代表着一个学术的认可，我们电信学院去年成绩还不错，总共拿了20多个项目，那么有一半是空间物理的，具体到我们这个信息与通信呢，一共是只有4个，我们团队是占了二分之一，是吧？</p><p>第三：我们梅老师，去年获批了国家重点研发计划，战略性科学创新合作项目，这是重点项目，这个在历史上，或者是在本世纪以来，这是电信学院第2个这样的项目。</p><p>第四：团队的成果，2024年的获批了湖北省实验室量点，这个全省评了10个，我们是其中之一。去年，梅晓光老师主持了成果，或批了湖北省自然科学二等奖，大家也可以去查一查，过去10年，科技奖，因为是这样的，科技奖分为省政府的和教育部的，这两个是正规奖，学会的奖呢，这个层次要低一些，政府将，这个才是最正规的。过去10年，我们团队科技奖的数量，一等奖的数量，和二等奖的数量，都占了学院的一半，同时，团队也有很大的历史突破，就是马佳义老师的通讯作者的论文呀，这个在学术上跨了一个台阶，可以看学院的新闻，我没有计算过，团队有2个老师和2个博士生，进入了全球顶尖的高被引科学家的这样一个序列。我感觉也好像占了全学院的二分之一。</p><p>那么另一个，我们在国防上做的贡献，你可以说这个偏置杯，我们获得了优秀论文奖，或批了国防的一些项目。</p><p>总之呢，这个成绩应该是很不错的。在这里呢，大家也能听，也能体会到，我们这个团队是最不爱对外宣传的。高年级的学生应该能感受到，相比较于学院的其它队伍，我们是最不爱对外宣传的。为什么不爱对外宣传呢？除了个性上的特点以外，还一个原因呢，是因为我们团队是以国防特色为中心，国防特色比较重。</p><h2 id="二、开场白-树立信心"><a href="#二、开场白-树立信心" class="headerlink" title="二、开场白-树立信心"></a>二、开场白-树立信心</h2><p>今天强调这个成果，有几个目的。</p><p>第一：是树立信心。我们说的这个呢，大家可能不是特别关心，但是，记住有一点，只有一个好的平台和高的平台，那么这个平台越好，最后衍生的这样一个效益就好，举个例子，我们团队获得的国家奖学金的人数，应该是全学院最多的，对吧，硕士生今天没来，博士生谁拿了国家奖学金的可以站起来一下，站起来，站起来。</p><blockquote><p>马泳：五个，就五个吧，马佳义？</p></blockquote><blockquote><p>马佳义：国家奖学金学院分为了很多种！</p></blockquote><blockquote><p>马泳：最高的，就看最高的嘛！</p></blockquote><blockquote><p>马佳义：最高的不是国家奖学金！</p></blockquote><blockquote><p>马泳：是什么呀？</p></blockquote><blockquote><p>马佳义：国家奖学金可以排第几呀？</p></blockquote><blockquote><p>马泳：国家奖学金还不是最高的呀？</p></blockquote><blockquote><p>马佳义：最高的是那个雷军卓越奖学金，20万，然后学术创新特等奖，8万块，学术创新一等奖，5万块。</p></blockquote><blockquote><p>马泳：马佳义老师就是只看钱吗，哈哈哈哈。</p></blockquote><p>我只拿国家奖学金这个指标说呀，一个优秀的平台，才能产生这种点缀效应，有句话说：“大河有水小河满，大河没水小河干”，是吧。而且呢，我觉得也要跟大家说一下，我们取得的这个成绩呀，是一个累计的过程，是一个传承的过程，是吧！就是说，一代代的老师和学生共同努力的结果，那么呢，当这个平台发展到一定的高度后，实际上呢？为后来者奠定了一个好的学习环境，是吧，所以说呢，从这个角度上来讲，是大家的努力，也是希望大家能够站在更高的平台。</p><h2 id="三、引出根据地的概念"><a href="#三、引出根据地的概念" class="headerlink" title="三、引出根据地的概念"></a>三、引出根据地的概念</h2><p>我们说团队的概念是什么，团队的概念有很多种，其中有一个内涵，我想跟大家交流一下。</p><p>其中有一个内涵叫根据地，根据地是非常重要，我们伟大的领袖，革命之所以成功，非常注重根据地的建设，没有一个稳定的根据地，谈不上个人事业的发展，我想提醒大家一点，作为你个人的根据地，其实大概就3个，第一是家庭；第二，就是你的高中，本科，研究生同学，或者是说，你所在的母校；第三个根据地，对于博士生，硕士生来说，就是他曾经工作，学习过的这样一个研究团队。</p><p>没有根据地，或者说根据地不好，说白了，就是你没有一个根。你没有一个根，这个根不深，对未来的发展，都会产生一些影响。</p><p>我刚才说的话，可能有点深奥，说俗一点呢，在军队里面比较认什么呢，比较认老乡，那么，在社会里面呢，就认校友，是吧，出去之后，大家可以自然而然地亲密一点，交流上要好一点，是吧，对不对。但是，校友其实更广泛一点，自古以来的历史就是使然的，对吧，在中国古代里面，同党姓氏。更具体一点呢，就是大家都在这个专业，所以说呢，不管以后你遇到什么机缘，实际上都不会离这个专业太远，甚至一部分还在从事这个专业，这么说吧，至少有三分之一的人从事这个专业，是吧，三分之一应该离这个专业非常近，是不是，所以，你们未来的圈子，都会和这样一个专业紧密联系，是吧。因此，如果说，这样一个平台，能让你得到骄傲，能够给你自信。所以今天来给大家讲一下2024年的成绩并不是一种夸耀。</p><p>无论是谁，无论以后你参加怎样的工作，你都是团队的一份子，是吧，也就是说呢，如果你与团队和谐，你自然而然地，也会和社会和谐，是吧，就是讲的修生齐家治国平天下。我们可以把齐家定义为你在不同根据地里面的发展，是吧。所以说，今天呢，今天的开场白讲一下，让大家能够理解我们的团队。</p><p>下面，马佳义，你来先说一下。</p><blockquote><p>马佳义：大家就学习交流</p></blockquote><blockquote><p>马泳：谁先发言的有奖哦</p></blockquote><p>好，从高年级开始，高年级就是21和22吧，21和22的站起来一下。</p><h2 id="四、同学1提问，关于就业"><a href="#四、同学1提问，关于就业" class="headerlink" title="四、同学1提问，关于就业"></a>四、同学1提问，关于就业</h2><blockquote><p>马泳，所有同学都关心就业，唯独老师，在就业方面，只能是指导。因为就业，实在太动态了。</p></blockquote><blockquote><p>研究所的工作前景，很依赖于政策的导向。</p></blockquote><blockquote><p>90年代的工作是包分配，包分配相当于，当年要分配到军工单位，但军工单位都是在山沟沟里面。</p></blockquote><blockquote><p>我从03年开始带硕士，已经20多年了，我当老师这么多年，很少学生找到老师，说要介绍工作，尤其是现在学生自我意识很强。</p></blockquote><blockquote><p>2000年以后，我们是想尽办法逃离一切带数字的厂。</p></blockquote><blockquote><p>但是现在，大家疯狂地要进这些带数字的厂。</p></blockquote><blockquote><p>如果说当年没有逃离带数字的厂，那么熬到现在，都是厂长和副厂长了。</p></blockquote><blockquote><p>所以说，我们这代学生很感慨。</p></blockquote><blockquote><p>当年毕业的时候，成绩最好的，各种原因吧，交了巨额培养费，去了外企的，回过头来看，现在还不如那些学习成绩差的。</p></blockquote><blockquote><p>所以就业情况太动态了，说不清。</p></blockquote><blockquote><p>以及比如说，有些进了中兴，待遇很不错吧，但没想到，过几年后，中兴垮了。所以这个很难说。</p></blockquote><blockquote><p>就业呢，大家看趋势，看不了很细的。</p></blockquote><blockquote><p>现在看得最热的，在未来都不一定好。因为否极泰来。</p></blockquote><blockquote><p>比如字节美团，在未来也不一定好。</p></blockquote><blockquote><p>大家可能没感受，90年代的中期，是军工单位最差的历史时期。</p></blockquote><blockquote><p>所以大家有点智慧的话，就不要追求现在最热的。</p></blockquote><h2 id="五、回忆记录"><a href="#五、回忆记录" class="headerlink" title="五、回忆记录"></a>五、回忆记录</h2><blockquote><p>马佳义：搞大模型不一定好，因为目前引用量大的成果，反而是那些不需要那么大算力的研究。</p></blockquote><blockquote><p>马泳：都到武汉大学的博士了，学习的不是具体的科学技术，应该是解决问题的思路了。</p></blockquote><blockquote><p>梅晓光：我们所，技术上不如中兴，但是国家相信你，把财政转移支付给你，就让你去干，你可以外包给中兴。</p></blockquote><blockquote><p>马泳：黄珺，信号与信息处理的核心是什么呀？黄珺…马泳：我认为核心只有一项，那就是去除噪声。</p></blockquote><blockquote><p>黄珺：现在没必要这么焦虑，很多时候都是因为自媒体炒作，比如王星到缅北被诈骗的事情。</p></blockquote><blockquote><p>张凯宁：现在焦虑主要是因为两方面的原因：第一是没有达到自己的期望，第二是身边的人的进度。</p></blockquote><blockquote><p>黄珺：在研究所工作，就只有一条建议，那就是踏实工作。</p></blockquote><blockquote><p>龚美琪：虽然还有2年毕业，但已经开始焦虑了，在考虑要不要读博后的事情。</p></blockquote><blockquote><p>武康乐：要不要先去企业工作一段时间后再回学术界，马佳义：不要，很多从工业界回学术界的，都是走了很多弯路，xxx是因为在腾讯AI Lab，是要发文章的，发企业能够盈利的文章。</p></blockquote><blockquote><p>马佳义：xxx给我看纳税人的图，前几年的收入都是200w，但是到了高校之后，一年只有12w。</p></blockquote><blockquote><p>马泳：在研究所的工作，很依赖于政策的导向。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>写作素材</title>
      <link href="/2025/01/20/xie-zuo-su-cai/"/>
      <url>/2025/01/20/xie-zuo-su-cai/</url>
      
        <content type="html"><![CDATA[<h2 id="一、研究背景"><a href="#一、研究背景" class="headerlink" title="一、研究背景"></a>一、研究背景</h2><h3 id="1-1-第一段"><a href="#1-1-第一段" class="headerlink" title="1.1 第一段"></a>1.1 第一段</h3><p>红外成像技术凭借其在无需可见光条件下的长距离成像能力，在夜间或视线受限环境中的多个领域显得尤为重要。<br>通过表示目标的热分布情况，红外成像为无人系统监控、海上目标搜寻及救援等应用提供了关键信息。<br>然而，在此类应用中，被观测目标常处于远距离，导致其在成像过程中表现为小尺寸目标，使得红外小目标检测对于解读这类图像至关重要。</p><h3 id="1-2-第二段"><a href="#1-2-第二段" class="headerlink" title="1.2 第二段"></a>1.2 第二段</h3><p>红外小目标探测（SISTD）是一项关键任务，它将弱小目标与天空、海洋和城市结构等复杂背景分离开来。它在各个领域发挥着至关重要的作用，包括国防安全、海上监视和精确制导。然而，它带来了特殊的挑战。如图1（a）和（b）中的红色框所示，小目标只占像素的一小部分，它们的低信杂比（SCR）导致它们容易与复杂背景混合。此外，如图1（c）和（d）所示，小目标缺乏纹理信息，渲染专注于此信息的传统目标检测方法变得不太可行。同时，如图1所示，目标的形状和大小在不同的场景和背景下变化很大（5-50像素），可能会导致漏检、误报、定位不准确等。因此，SISTD带来了一个具有挑战性的问题。为了应对这些挑战，有必要设计一种方法，特别是学习形状特征，以促进红外小目标的准确检测。</p><h3 id="1-3-第三段"><a href="#1-3-第三段" class="headerlink" title="1.3 第三段"></a>1.3 第三段</h3><p>红外小目标探测（IRSTD）因其强大的抗干扰性能、在复杂环境中的有效性以及在没有可见光的情况下进行远程探测的能力，在民用和军事工业中引起了广泛的兴趣。<br>它的应用包括国防{deng2016small}、海上救援{wu2023mtu，hu2024smpi}和遥感{sun2020infrared}。<br>在这些应用中，目标被远距离成像，导致它们在捕获的图像中表现为小物体。<br>因此，红外小目标检测在准确解释和从这些图像中提取有价值的见解方面起着关键作用。</p><h3 id="1-4-第四段"><a href="#1-4-第四段" class="headerlink" title="1.4 第四段"></a>1.4 第四段</h3><p>红外小目标检测（ISTD）是红外搜索与跟踪系统中的关键技术，在遥感监视、精确制导等领域具有重要意义。<br>传统的成像方法经常受到雾雨天气条件的影响，使得小目标检测具有挑战性。<br>然而，红外成像以其独特的成像机理，即使在恶劣的条件下也能捕捉到更多的目标信息。<br>因此，单帧红外小目标检测（SIRST）成为了近年来小目标检测的研究热点。</p><p>然而，由于红外探测器成像距离长，目标通常占据较小的区域，提供的纹理和形状信息不足。<br>同时，目标通常具有低信噪比（SNR）和低对比度，因此很容易淹没在杂乱背景中。<br>因此，SIRST目前仍然是具有挑战性的问题。</p><h3 id="1-5-第五段-BAFE"><a href="#1-5-第五段-BAFE" class="headerlink" title="1.5 第五段 (BAFE)"></a>1.5 第五段 (BAFE)</h3><p>红外成像已成为各个领域的重要工具，尤其是在没有可见光的情况下需要远距离成像的场景，如夜间行动或能见度有限的环境[1]。<br>通过捕捉物体的热分布，红外成像可为无人系统监控[2]、海上目标搜索[3]和救援任务[4]等应用提供关键信息。<br>然而，在这些应用中，感兴趣的目标通常距离很远，因此在捕捉到的图像中显示为极小的物体。<br>因此，红外小目标检测在准确解读这些图像并从中提取有价值的信息方面发挥着关键作用，从而能够开发出能够在具有挑战性的条件下有效运行的强大而高效的系统。</p><h3 id="4-6-第六段-（这是我写的旧版）"><a href="#4-6-第六段-（这是我写的旧版）" class="headerlink" title="4.6 第六段 （这是我写的旧版）"></a>4.6 第六段 （这是我写的旧版）</h3><p>红外成像是一种捕获发射的热辐射的技术，它具有出色的检测能力，可以在任何光照条件下穿透雾霾或烟雾等视觉障碍物检测目标。<br>基于红外成像的红外小目标检测 (IRSTD) 在军事和民用应用中发挥着至关重要的作用，包括精确制导、边境安全、遥感监视和海上搜救。<br>在这些应用中，目标距离较远，导致其在成像过程中表现得很小，这使得 IRSTD 在从这些图像中提取有价值信息方面发挥着关键作用。</p><blockquote><p>\IEEEPARstart{I}{nfrared} imaging, a technology that captures emitted thermal radiation, offers exceptional detection capabilities for detecting targets through visual obstructions, such as haze or smoke, independent of light conditions. Infrared small target detection (IRSTD), based on infrared imaging, plays a vital role in military and civilian applications, including precision guidance, border security, remote sensing surveillance, and maritime search and rescue. In these applications, the target is distant, causing it to behave as small during imaging, making IRSTD a key role in extracting valuable information from these images</p></blockquote><h3 id="4-7-第七段-Serank"><a href="#4-7-第七段-Serank" class="headerlink" title="4.7 第七段 (Serank)"></a>4.7 第七段 (Serank)</h3><p>红外成像是一种捕捉发射辐射的非侵入式热感应技术，它具有无与伦比的能力，可以不受光线条件的影响，透过雾霾和烟雾等视觉障碍辨别远处的目标[1]。<br>这项技术在军事和民用领域都至关重要，包括监视、边境安全和搜救任务。<br>因此，准确探测远程小型红外目标对这些应用至关重要[2]。</p><h3 id="4-8-第八段"><a href="#4-8-第八段" class="headerlink" title="4.8 第八段"></a>4.8 第八段</h3><p>红外小目标探测（IRSTD）因其强大的抗干扰性能、在复杂环境中的有效性以及在没有可见光的情况下进行远程探测的能力，在民用和军事工业中引起了广泛的兴趣。<br>它的应用包括：无人系统监控、海上目标搜救、遥感监视和精确制导<br>然而，在这些应用中，感兴趣的目标通常距离很远，因此在捕捉到的图像中显示为极小的物体。<br>因此，红外小目标检测在准确解释和从这些图像中提取有价值的见解方面起着关键作用。</p><h3 id="4-9-第九段"><a href="#4-9-第九段" class="headerlink" title="4.9 第九段"></a>4.9 第九段</h3><p>红外成像是一种捕获热辐射进行成像的技术，其成像不受光照条件的影响，且可穿透雾霾和烟雾等视觉障碍。</p><p>它的应用包括：无人系统监控、海上目标搜救、遥感监视和精确制导。</p><p>然而，在这些应用中，感兴趣的目标通常距离很远，因此在捕捉到的图像中显示为极小的物体。</p><p>因此，精确的红外小目标检测对这些应用至关重要。</p><blockquote><p>红外成像技术是一种基于热辐射捕获的成像方法，其成像过程不受光照条件限制，并具有穿透雾霾、烟雾等视觉障碍的特性。该技术在无人系统监控、海上目标搜救、遥感监测以及精确制导等领域具有广泛的应用价值。然而，在实际应用场景中，目标物体往往距离成像设备较远，导致其在成像结果中呈现为极小尺寸的目标特征。因此，实现精确的红外小目标检测对于提升上述应用系统的性能具有重要的理论意义和实用价值。</p></blockquote><blockquote><p>Infrared imaging, a technique that captures thermal radiation to generate images, is capable of operating independently of lighting conditions and penetrating visual obstructions such as haze and smoke. This technology has found extensive applications in unmanned system monitoring, maritime search and rescue, remote sensing surveillance, and precision guidance systems. However, in practical scenarios, targets of interest are often situated at considerable distances, resulting in their representation as minuscule objects within the captured imagery. Consequently, the accurate detection of infrared small targets is of paramount importance for enhancing the efficacy of these systems, offering both theoretical advancements and practical benefits.</p></blockquote><h3 id="4-10-完整："><a href="#4-10-完整：" class="headerlink" title="4.10 完整："></a>4.10 完整：</h3><blockquote><p>Infrared imaging, a technique that captures thermal radiation to generate images, is capable of operating independently of lighting conditions and penetrating visual obstructions such as haze and smoke. This technology has found extensive applications in unmanned system monitoring, maritime search and rescue, remote sensing surveillance, and precision guidance systems. However, in practical scenarios, targets of interest are often situated at considerable distances, resulting in their representation as minuscule objects within the captured imagery. Consequently, the accurate detection of infrared small targets is of paramount importance for enhancing the efficacy of these systems, offering both theoretical advancements and practical benefits.</p></blockquote><blockquote><p>Although remote targets can be effectively detected using infrared imaging, several common challenges hinder the precise detection of small targets, which may result in missed detection, false alarm (FA), inaccurate localization, etc.</p></blockquote><blockquote><ol><li>Small and Dim: Due to the long imaging distance, IR targets are small and typically exhibit a low signal-to-clutter ratio (SCR), rendering them prone to being overwhelmed by substantial noise and background clutter.</li><li>Scarcity of Intrinsic Target Features: IR small targets appear inconspicuous in the image, lacking sufficiently prominent features to differentiate them from visually similar false alarms when relying solely on localized target information.</li><li>Similar Background Distractions: Infrared images are often plagued by numerous background interferences, resembling the targets of interest. These disturbances, such as noise points and hot spots, also manifest as small spots, making it nearly impossible to distinguish them from actual targets based solely on localized visual comparison.</li></ol></blockquote><h2 id="二、红外小目标的特点"><a href="#二、红外小目标的特点" class="headerlink" title="二、红外小目标的特点"></a>二、红外小目标的特点</h2><h3 id="2-1-第一段"><a href="#2-1-第一段" class="headerlink" title="2.1 第一段"></a>2.1 第一段</h3><ul><li>Serank</li></ul><ol><li>缺乏显著特征:小目标往往缺乏足够的显著特征，仅使用局部目标信息很难将其与视觉上相似的假警报区分开来。</li><li>低信杂比:红外小目标在杂波背景下对比度较低，其信杂比较小，使得识别难度较大，存在较大的检测障碍。</li></ol><h3 id="2-2-第二段"><a href="#2-2-第二段" class="headerlink" title="2.2 第二段"></a>2.2 第二段</h3><ul><li>SCTransNet</li></ul><ol><li>弱小:由于远程成像，红外目标很小，通常表现出较低的信杂比，使其容易沉浸在重噪声和背景杂波中。</li><li>无特征:热图像缺乏目标的颜色和纹理信息，相机对焦不精确会导致目标模糊。这些因素对IRSTD特征提取技术的设计提出了特殊的挑战。</li><li>形状不确定:红外目标的尺度和形状在不同场景下变化很大，这给检测问题带来了很大的挑战。</li></ol><h3 id="2-3-第三段"><a href="#2-3-第三段" class="headerlink" title="2.3 第三段"></a>2.3 第三段</h3><ul><li>DNANet</li></ul><ol><li>小： 由于成像距离较远，红外目标一般较小，在图像中从一个像素到几十个像素不等。</li><li>微小： 红外目标的信噪比（SCR）通常较低，容易淹没在严重的噪声和杂波背景中。</li><li>无形状： 红外小目标的形状特征有限。</li><li>易变： 不同场景下红外目标的大小和形状变化很大。</li></ol><h3 id="2-4-第四段"><a href="#2-4-第四段" class="headerlink" title="2.4 第四段"></a>2.4 第四段</h3><ul><li>BAFE</li></ul><ol><li>内在目标特征稀缺：最大的挑战源于内在目标特征的匮乏。与拥有丰富视觉线索（如外观、纹理和结构）的一般物体不同，红外小目标尺寸极小，在图像中只是不起眼的斑点。这种“视觉贫乏”使得基于目标特定特征的识别和定位方法在很大程度上无效。</li><li>大量相似的背景干扰物：红外图像经常受到大量背景干扰物的困扰，这些干扰物与感兴趣的目标非常相似。这些干扰物（如噪声点和热点）也表现为斑点，因此几乎不可能根据局部视觉比较将它们与真正的目标区分开来。</li></ol><h2 id="三、国内外研究现状"><a href="#三、国内外研究现状" class="headerlink" title="三、国内外研究现状"></a>三、国内外研究现状</h2><h3 id="3-1-第一段"><a href="#3-1-第一段" class="headerlink" title="3.1 第一段"></a>3.1 第一段</h3><p>素材1：传统的单红外小目标检测（SISTD）方法可以分为三类，包括基于滤波器的方法、基于人类视觉系统（HVS）的方法以及基于低秩矩阵（LRM）的方法。基于滤波器的方法[9]–[12]采用专门设计的滤波器从背景中提取小目标。虽然它们在滤除平滑背景杂波方面效果显著，但在遇到不同强度的噪声和背景干扰时，其性能会显著下降。基于人类视觉系统的方法[6], [7], [13]–[15]依赖于目标与背景之间的局部明暗对比差异，使其特别适合检测相对亮度较高的小目标。然而，在背景存在强亮噪声的情况下，它们可能会导致较高的虚警率。基于低秩矩阵的方法[16]–[20]将红外图像视为低秩稀疏矩阵，并引入低秩矩阵重构来分离目标与背景。由于目标的强度相对于背景的强度并不显著，这些方法在检测各种形状的目标时表现不佳。总体而言，在处理复杂场景时，传统方法严重依赖手动特征，这使得它们难以应对复杂场景。</p><h3 id="3-2-第二段"><a href="#3-2-第二段" class="headerlink" title="3.2 第二段"></a>3.2 第二段</h3><p>素材2：传统的红外小目标检测（IRSTD）方法可以分为三大类：背景抑制方法、基于人类视觉系统（HVS）的方法以及基于低秩矩阵（LRM）的方法。背景抑制方法[8–18]通过专门设计的滤波器将红外小目标从背景中分离出来。基于人类视觉系统的方法[19–26]通过识别背景中的局部明暗差异来检测小目标。基于低秩矩阵的方法[27–30]通过将红外图像分解和重构为稀疏矩阵来分离小目标与背景。然而，传统方法的有效性有限，且缺乏从数据集中学习或动态适应不同环境条件的能力。</p><h3 id="3-3-第三段"><a href="#3-3-第三段" class="headerlink" title="3.3 第三段"></a>3.3 第三段</h3><p>素材3：目前，红外小目标检测（IRSTD）方法可以分为基于模型的方法和基于数据的方法。<br>基于模型的方法<br>基于模型的方法主要包括以下三种方法：<br>基于滤波器的方法：例如Tophat滤波器，通过增强目标在复杂背景中的可见性，同时抑制背景噪声。<br>基于人类视觉系统（HVS）的方法：例如局部对比度测量（LCM）和多块对比度测量（MPCM），利用人类视觉感知机制来增强局部信息。<br>基于低秩矩阵分解和重构的方法：例如红外小块图像模型（IPI）和重加权红外小块张量（RIPT），通过低秩矩阵分解来分离小目标和背景。<br>然而，这些基于模型的方法通常需要手动设置参数，且在复杂场景下适应性较差。</p><h3 id="3-4-第四段"><a href="#3-4-第四段" class="headerlink" title="3.4 第四段"></a>3.4 第四段</h3><p>素材4：传统的红外小目标检测（IRSTD）方法可以分为三大类：基于背景抑制（BS-based）、基于人类视觉系统（HVS-based）和基于低秩矩阵（LRM-based）的方法。基于背景抑制的方法[^liu2023image^]使用专门设计的滤波器来提取小红外目标。基于人类视觉系统的方法[^liu2023image^]通过增强目标的局部信息来识别小目标。基于低秩矩阵的方法[^liu2023image^]通过将红外图像分解并重构为稀疏矩阵来检测小目标。然而，这些传统方法在从数据集中学习或根据不同的环境条件动态调整参数方面的能力有限，导致它们在复杂场景下的性能表现欠佳。</p><h3 id="3-5-第五段"><a href="#3-5-第五段" class="headerlink" title="3.5 第五段"></a>3.5 第五段</h3><p>要解决这一问题，就必须从整体角度出发，整合多尺度视觉分析，以区分真假目标[4]。为此，研究领域出现了大量深度学习策略，这些策略优先考虑融合多级上下文信息[5]，旨在弥合详细目标特征与更广泛场景上下文之间的差距。最近的发展包括非对称语境调制技术，这种技术可以丰富语义理解，并在更深的网络层保留细节[6]。此外，还有一些策略利用密集的互连结构来保持目标的完整性，从而促进跨尺度的稳健特征交互[7]。</p><h3 id="3-6-第六段"><a href="#3-6-第六段" class="headerlink" title="3.6 第六段"></a>3.6 第六段</h3><p>得益于这些编码器、解码器和长距离 SK 的框架，非对称上下文调制（ACM）网络 [14] 初步证明了跨层特征融合在保留红外目标特征方面的有效性。这是通过使用非对称的自上而下和自下而上结构双向聚合高层语义信息和低层细节来实现的。随后，特征融合策略在 IRSTD 任务中被广泛采用[18]、[19]、[20]、[21]。最近有几种方法通过改进 SK，促进了有益特征向解码器组件的转移 [22], [23]。受嵌套结构[24]的启发，DNA-Net[15]开发了一个密集嵌套的交互模块，以促进高层和低层特征之间的渐进交互，并自适应地增强特征。此外，还有一些方法侧重于开发更有效的编码器和解码器[25]、[26]。例如，UIU-Net [16] 在 U-Net 中嵌入更小的 U-Net，以学习目标的局部对比度信息，并执行交互式交叉注意（IC-A）进行特征融合。</p><p>尽管取得了令人满意的结果，但上述基于卷积神经网络（CNN）的方法缺乏对目标的综合属性进行编码的能力，从而丢失了目标的鉴别特征。为解决这一问题，MTU-Net [17] 采用了多级视觉变换器（ViT）-CNN 混合编码器，利用所有编码特征之间的空间相关性进行上下文信息聚合。然而，简单的空间 ViT-CNN 混合模块不足以理解图像的全局语义，因此误报率较高。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>各类型卷积小结</title>
      <link href="/2024/12/28/ge-lei-xing-juan-ji-xiao-jie/"/>
      <url>/2024/12/28/ge-lei-xing-juan-ji-xiao-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="一、分组卷积"><a href="#一、分组卷积" class="headerlink" title="一、分组卷积"></a>一、分组卷积</h2><ul><li>输入channel为12，输出channel为12的情况</li></ul><table><thead><tr><th>输入shape</th><th>输出channel</th><th>分组数</th><th>输入各组shape</th><th>输入组数</th><th>卷积各组shape</th><th>卷积组数</th><th>输出shape</th><th>总结</th></tr></thead><tbody><tr><td>[1 12 48 48 ]</td><td>12</td><td>1</td><td>[1 12 48 48]</td><td>1</td><td>[12 12 3 3 ]</td><td>1</td><td>[1 12 x x]</td><td>每组输入12channel，输出12channel</td></tr><tr><td>[1 12 48 48 ]</td><td>12</td><td>6</td><td>[1 2 48 48]</td><td>6</td><td>[2 2 3 3 ]</td><td>6</td><td>[1 12 x x]</td><td>每组输入2channel，输出2channel</td></tr><tr><td>[1 12 48 48 ]</td><td>12</td><td>12</td><td>[1 1 48 48]</td><td>12</td><td>[1 1 3 3 ]</td><td>12</td><td>[1 12 x x]</td><td>每组输入1channel，输出1channel,即深度卷积</td></tr></tbody></table><ul><li>输入channel为12，输出channel我36的情况</li></ul><table><thead><tr><th>输入shape</th><th>输出channel</th><th>分组数</th><th>输入各组shape</th><th>输入组数</th><th>卷积各组shape</th><th>卷积组数</th><th>输出shape</th><th>总结</th></tr></thead><tbody><tr><td>[1 12 48 48 ]</td><td>36</td><td>1</td><td>[1 12 48 48]</td><td>1</td><td>[36 12 3 3 ]</td><td>1</td><td>[1 12 x x]</td><td>每组输入12channel，输出36channel</td></tr><tr><td>[1 12 48 48 ]</td><td>36</td><td>6</td><td>[1 2 48 48]</td><td>6</td><td>[6 2 3 3 ]</td><td>6</td><td>[1 36 x x]</td><td>每组输入2channel，输出6channel</td></tr><tr><td>[1 12 48 48 ]</td><td>36</td><td>12</td><td>[1 1 48 48]</td><td>12</td><td>[3 1 3 3 ]</td><td>12</td><td>[1 36 x x]</td><td>每组输入1channel，输出3channel,即深度卷积</td></tr></tbody></table><ul><li>结论，分组卷积将输入的channel进行分组，同时将输出的channel进行分组</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试记录</title>
      <link href="/2024/12/17/ce-shi-ji-lu/"/>
      <url>/2024/12/17/ce-shi-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、基本测试命令"><a href="#一、基本测试命令" class="headerlink" title="一、基本测试命令"></a>一、基本测试命令</h2><ul><li>tensorboard数据可视化命令，且确保能大量传输数据，即最多显示10w张图片</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tensorboard <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8009</span> <span class="token parameter variable">--samples_per_plugin</span><span class="token operator">=</span>images<span class="token operator">=</span><span class="token number">100000</span> <span class="token parameter variable">--logdir</span><span class="token operator">=</span>./logs/dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>后台运行</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> python train_SC_TransNet.py <span class="token operator">&gt;</span>output0.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>2&gt;&amp;1: 其中的2表示错误输出，1表示正常输出，&amp;1表示引用正常输出，&gt;表示重定向符号<br>&amp;: 表示后台运行</p></blockquote><h2 id="二、基本测试记录"><a href="#二、基本测试记录" class="headerlink" title="二、基本测试记录"></a>二、基本测试记录</h2><h3 id="SwinUnet训练结果"><a href="#SwinUnet训练结果" class="headerlink" title="SwinUnet训练结果"></a>SwinUnet训练结果</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/data1/hrm/Experiment/ACM_Practice/logs/Swin_UNet/train<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>NUAA数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217100528</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>NUDT数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217100649</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>IRSTD_1k数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217100718</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="SCTransNet预训练模型测试结果"><a href="#SCTransNet预训练模型测试结果" class="headerlink" title="SCTransNet预训练模型测试结果"></a>SCTransNet预训练模型测试结果</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/data1/hrm/Experiment/ACM_Practice/logs/SC_TransNet/test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>NUAA数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217154807</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>NUDT数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217154832</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>IRSTD_1k数据集</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">20241217154901</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="SeRankDet在本地机器上的复现结果"><a href="#SeRankDet在本地机器上的复现结果" class="headerlink" title="SeRankDet在本地机器上的复现结果"></a>SeRankDet在本地机器上的复现结果</h3><ul><li>NUDT数据集</li></ul><p><img src="http://pic.huangruimin.tech/20241223164753.png"></p><blockquote><p>官方配置</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>/12/23  <span class="token number">11</span>:59:12  Epoch: <span class="token punctuation">[</span><span class="token number">1500</span>/1500<span class="token punctuation">]</span>  Loss: <span class="token number">1.6850</span>  mIoU: <span class="token number">0.8783</span>  nIoU: <span class="token number">0.8756</span>  F1-score: <span class="token number">0.9352</span>  Best_mIoU: <span class="token number">0.8891</span>  Best_nIoU: <span class="token number">0.8876</span>  Best_F1-score: <span class="token number">0.9413</span>Best_mIoU: <span class="token number">0.8891</span>  Best_nIoU: <span class="token number">0.8876</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>我的配置</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>-12-21 04:19:30,343 - INFO - Epoch: <span class="token number">1495</span>, val_loss: <span class="token number">1.5984</span>, mIoU: <span class="token number">0.8861</span>, best_mIoU: <span class="token number">0.9025</span>, nIoU: <span class="token number">0.8992</span>, best_nIoU: <span class="token number">0.9110</span>best_mIoU: <span class="token number">0.9025</span> best_nIoU: <span class="token number">0.9110</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>总结, 自己的配置其实还更好, 以后用自己的配置就行</p></blockquote><ul><li>IRSTD_1k数据集</li></ul><p><img src="http://pic.huangruimin.tech/20241223164733.png"></p><blockquote><p>官方配置</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>/12/23  <span class="token number">11</span>:31:35  Epoch: <span class="token punctuation">[</span><span class="token number">500</span>/500<span class="token punctuation">]</span>  Loss: <span class="token number">2.3253</span>  mIoU: <span class="token number">0.6719</span>  nIoU: <span class="token number">0.6693</span>  F1-score: <span class="token number">0.8034</span>  Best_mIoU: <span class="token number">0.7069</span>  Best_nIoU: <span class="token number">0.6771</span>  Best_F1-score: <span class="token number">0.8279</span>Best_mIoU: <span class="token number">0.7069</span> Best_nIoU: <span class="token number">0.6771</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>我的配置</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>-12-21 09:32:03,551 - INFO - Epoch: <span class="token number">495</span>, val_loss: <span class="token number">2.3806</span>, mIoU: <span class="token number">0.6607</span>, best_mIoU: <span class="token number">0.6889</span>, nIoU: <span class="token number">0.6750</span>, best_nIoU: <span class="token number">0.6892</span>best_mIoU: <span class="token number">0.6889</span> best_nIoU: <span class="token number">0.6892</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>总结, 用自己的配置, 虽然mIoU差一点, 但nIoU好一点, 以后用自己的配置就行</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新版测试工程构建记录</title>
      <link href="/2024/11/15/xin-ban-ce-shi-gong-cheng-gou-jian-ji-lu/"/>
      <url>/2024/11/15/xin-ban-ce-shi-gong-cheng-gou-jian-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、数据集读取部分"><a href="#一、数据集读取部分" class="headerlink" title="一、数据集读取部分"></a>一、数据集读取部分</h2><h3 id="1-NUAA-SIRST"><a href="#1-NUAA-SIRST" class="headerlink" title="1.NUAA_SIRST"></a>1.NUAA_SIRST</h3><ul><li>参数的问题：</li></ul><blockquote><p>这个受到Arg的影响</p></blockquote><p>self.crop_size = args.crop_size<br>self.base_size = args.base_size</p><blockquote><p>这个不受到Arg的影响</p></blockquote><p>self.mode = mode</p><ul><li>官方直接提供了训练集和测试集的分割</li></ul><h3 id="2-IRDST"><a href="#2-IRDST" class="headerlink" title="2.IRDST"></a>2.IRDST</h3><ul><li>image用的是单通道的</li><li>mask用的是二值的</li></ul><blockquote><p>现在先用3通道的读取进来，先快速迭代，不纠结</p></blockquote><ul><li>第三方训练集和测试集的分割</li></ul><h3 id="3-NUDT-SIRST"><a href="#3-NUDT-SIRST" class="headerlink" title="3. NUDT_SIRST"></a>3. NUDT_SIRST</h3><ul><li><p>这个最后没有ToTensor了，直接就转numpy/255</p></li><li><p>第三方训练集和测试集的分割</p></li></ul><h3 id="4-IRSTD-1k"><a href="#4-IRSTD-1k" class="headerlink" title="4. IRSTD_1k"></a>4. IRSTD_1k</h3><ul><li><p>这个多添加了Compose的数据增强模式</p></li><li><p>官方直接提供了训练集和测试集的分割</p></li></ul><h3 id="5-NUDT-SIRST-Sea"><a href="#5-NUDT-SIRST-Sea" class="headerlink" title="5. NUDT-SIRST-Sea"></a>5. NUDT-SIRST-Sea</h3><ul><li><p>这个多添加了CRRP的数据增强模式，但随机数种子必须得想办法固定</p></li><li><p>粘贴的时候，不能粘贴到太右下角了</p></li><li><p>训练时指定尺寸为1024*1024</p></li><li><p>官方直接提供了训练集和测试集的分割</p></li></ul><h3 id="6-SIRST3"><a href="#6-SIRST3" class="headerlink" title="6. SIRST3"></a>6. SIRST3</h3><ul><li><p>全部都缩放到了255*255</p></li><li><p>这个是把NUAA-SIRST, NUDT-SIRST, IRSTD-1k的数据集都整合到一个数据集了</p></li><li><p>官方直接提供了训练集和测试集的分割</p></li></ul><h3 id="7-SIRSTv2"><a href="#7-SIRSTv2" class="headerlink" title="7. SIRSTv2"></a>7. SIRSTv2</h3><ul><li>官方直接提供了训练接合测试集的分割</li></ul><h3 id="8-NUST-SIRST"><a href="#8-NUST-SIRST" class="headerlink" title="8. NUST-SIRST"></a>8. NUST-SIRST</h3><ul><li>有以下图片是损坏的</li><li>官方直接提供了训练集和测试集的分割</li></ul><h3 id="9-SIRST-Aug"><a href="#9-SIRST-Aug" class="headerlink" title="9. SIRST-Aug"></a>9. SIRST-Aug</h3><ul><li>全部统一到256x256的分辨率了</li><li>不用单独再进行图像增强</li><li>官方直接提供了训练集和测试集的分割</li></ul><h2 id="二、数据处理部分"><a href="#二、数据处理部分" class="headerlink" title="二、数据处理部分"></a>二、数据处理部分</h2><ul><li>各个数据集中，mean和std分别是以下情况：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">(</span>Research<span class="token punctuation">)</span> hrm@02:/data1/hrm/Experiment/ACM_Practice/data$ python cal_mean_std.py <span class="token number">100</span>%<span class="token operator">|</span>███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">10000</span>/10000 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00, <span class="token number">1238</span>.75it/s<span class="token punctuation">]</span>cal_NUST_SIRSTmean: <span class="token punctuation">[</span><span class="token number">0.41022339</span> <span class="token number">0.41022339</span> <span class="token number">0.41022339</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.10534038</span> <span class="token number">0.10534038</span> <span class="token number">0.10534038</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">341</span>/341 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">584</span>.14it/s<span class="token punctuation">]</span>cal_NUAA_SIRSTmean: <span class="token punctuation">[</span><span class="token number">0.44208519</span> <span class="token number">0.44158229</span> <span class="token number">0.44273354</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.11077873</span> <span class="token number">0.11070194</span> <span class="token number">0.11091114</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">800</span>/800 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00, <span class="token number">128</span>.36it/s<span class="token punctuation">]</span>cal_IRSTD_1kmean: <span class="token punctuation">[</span><span class="token number">0.34256154</span> <span class="token number">0.34256152</span> <span class="token number">0.34256152</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.1573148</span>  <span class="token number">0.15731486</span> <span class="token number">0.15731486</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">8525</span>/8525 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>00:00, <span class="token number">671</span>.56it/s<span class="token punctuation">]</span>SIRST_Augmean: <span class="token punctuation">[</span><span class="token number">0.29023109</span> <span class="token number">0.29023109</span> <span class="token number">0.29023109</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.19364614</span> <span class="token number">0.19364614</span> <span class="token number">0.19364614</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">768</span>/768 <span class="token punctuation">[</span>00:1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">75</span>.21it/s<span class="token punctuation">]</span>cal_SIRST_V2mean: <span class="token punctuation">[</span><span class="token number">0.39918842</span> <span class="token number">0.39905016</span> <span class="token number">0.39971</span>   <span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.15290678</span> <span class="token number">0.15289166</span> <span class="token number">0.15295853</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">663</span>/663 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">1</span>&lt;</span>00:00, <span class="token number">436</span>.60it/s<span class="token punctuation">]</span>cal_NUDT_SIRSTmean: <span class="token punctuation">[</span><span class="token number">0.42359084</span> <span class="token number">0.423618</span>   <span class="token number">0.42373287</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.13024786</span> <span class="token number">0.13025371</span> <span class="token number">0.13025806</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">1676</span>/1676 <span class="token punctuation">[</span>00:0<span class="token operator"><span class="token file-descriptor important">8</span>&lt;</span>00:00, <span class="token number">207</span>.24it/s<span class="token punctuation">]</span>cal_SIRST3mean: <span class="token punctuation">[</span><span class="token number">0.38625646</span> <span class="token number">0.3862149</span>  <span class="token number">0.38645584</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.14125108</span> <span class="token number">0.14123742</span> <span class="token number">0.14127061</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">4961</span>/4961 <span class="token punctuation">[</span>01:5<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>00:00, <span class="token number">42</span>.61it/s<span class="token punctuation">]</span>cal_NUDT_SIRST_Seamean: <span class="token punctuation">[</span><span class="token number">0.15856523</span> <span class="token number">0.15856523</span> <span class="token number">0.15856523</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.07371927</span> <span class="token number">0.07371927</span> <span class="token number">0.07371927</span><span class="token punctuation">]</span><span class="token number">100</span>%<span class="token operator">|</span>████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████<span class="token operator">|</span> <span class="token number">32523</span>/32523 <span class="token punctuation">[</span>04:4<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>00:00, <span class="token number">115</span>.92it/s<span class="token punctuation">]</span>cal_IRDSTmean: <span class="token punctuation">[</span><span class="token number">0.39834052</span> <span class="token number">0.39834052</span> <span class="token number">0.39834052</span><span class="token punctuation">]</span>std: <span class="token punctuation">[</span><span class="token number">0.22157959</span> <span class="token number">0.22157959</span> <span class="token number">0.22157959</span><span class="token punctuation">]</span><span class="token punctuation">(</span>Research<span class="token punctuation">)</span> hrm@02:/data1/hrm/Experiment/ACM_Practice/data$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>现有的数据预处理存在很多不合理，比如随机偏移，往往会把很多目标偏移没了</li></ul><p><img src="http://pic.huangruimin.tech/20241116130918.png"></p><ul><li>以及很多图片中，压根就不存在小目标的标签</li></ul><p><img src="http://pic.huangruimin.tech/20241116170758.png"><br><img src="http://pic.huangruimin.tech/20241116170912.png"></p><h2 id="三、数据可视化"><a href="#三、数据可视化" class="headerlink" title="三、数据可视化"></a>三、数据可视化</h2><ul><li>tensorboard数据可视化命令，且确保能大量传输数据，即最多显示10w张图片</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tensorboard <span class="token parameter variable">--logdir</span><span class="token operator">=</span>./logs/dev <span class="token parameter variable">--samples_per_plugin</span><span class="token operator">=</span>images<span class="token operator">=</span><span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>后台运行</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">nohup</span> python train_SC_TransNet.py <span class="token operator">&gt;</span> output0.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>看准端口，然后采用MobaXterm内网穿透</li></ul><p><img src="http://pic.huangruimin.tech/20241118100448.png"></p><p><img src="http://pic.huangruimin.tech/20241118100524.png"></p><h2 id="四、剩下来的任务"><a href="#四、剩下来的任务" class="headerlink" title="四、剩下来的任务"></a>四、剩下来的任务</h2><ul><li><p>均值方差的计算：已完成</p></li><li><p>数据增强的方法：已完成</p></li><li><p>loss：已完成</p></li><li><p>metric：已完成</p></li><li><p>不同threshold下的F1参数，以及metric整体测试一下：已完成</p></li><li><p>设置随机数种子：已完成</p></li><li><p>权重初始化：已完成</p></li><li><p>学习率的变化: 已完成</p></li><li><p>优化器：已完成</p></li><li><p>添加模型：已完成</p></li><li><p>编写训练和测试代码：已完成</p></li><li><p>三件套：build_scheduler, build_optimizer, weight_init：已完成</p></li></ul><h2 id="五、实际训练的情况"><a href="#五、实际训练的情况" class="headerlink" title="五、实际训练的情况"></a>五、实际训练的情况</h2><ul><li><p>固定随机数种子为3407时的情况</p><blockquote><p>best_mIoU: 0.5967，best_nIoU: 0.6467<br>此情况下性能下降太多</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>-11-24 <span class="token number">23</span>:47:49,237 - INFO - Epoch: <span class="token number">290</span>, train_loss: <span class="token number">0.4583</span>, lr: <span class="token number">0.002336</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:48:09,150 - INFO - Epoch: <span class="token number">290</span>, val_loss: <span class="token number">0.4062</span>, mIoU: <span class="token number">0.5864</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6358</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:49:31,126 - INFO - Epoch: <span class="token number">291</span>, train_loss: <span class="token number">0.4480</span>, lr: <span class="token number">0.002125</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:50:33,046 - INFO - Epoch: <span class="token number">291</span>, val_loss: <span class="token number">0.4058</span>, mIoU: <span class="token number">0.5823</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6324</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:52:09,696 - INFO - Epoch: <span class="token number">292</span>, train_loss: <span class="token number">0.4473</span>, lr: <span class="token number">0.001911</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:52:32,062 - INFO - Epoch: <span class="token number">292</span>, val_loss: <span class="token number">0.4072</span>, mIoU: <span class="token number">0.5853</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6339</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:53:56,329 - INFO - Epoch: <span class="token number">293</span>, train_loss: <span class="token number">0.4406</span>, lr: <span class="token number">0.001695</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:54:17,606 - INFO - Epoch: <span class="token number">293</span>, val_loss: <span class="token number">0.4028</span>, mIoU: <span class="token number">0.5876</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6354</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:55:44,023 - INFO - Epoch: <span class="token number">294</span>, train_loss: <span class="token number">0.4490</span>, lr: <span class="token number">0.001475</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:56:04,794 - INFO - Epoch: <span class="token number">294</span>, val_loss: <span class="token number">0.4025</span>, mIoU: <span class="token number">0.5863</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6363</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:57:30,883 - INFO - Epoch: <span class="token number">295</span>, train_loss: <span class="token number">0.4435</span>, lr: <span class="token number">0.001252</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:57:53,070 - INFO - Epoch: <span class="token number">295</span>, val_loss: <span class="token number">0.4052</span>, mIoU: <span class="token number">0.5884</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6352</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:59:18,563 - INFO - Epoch: <span class="token number">296</span>, train_loss: <span class="token number">0.4526</span>, lr: <span class="token number">0.001025</span><span class="token number">2024</span>-11-24 <span class="token number">23</span>:59:41,157 - INFO - Epoch: <span class="token number">296</span>, val_loss: <span class="token number">0.4040</span>, mIoU: <span class="token number">0.5872</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6366</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-25 00:01:08,590 - INFO - Epoch: <span class="token number">297</span>, train_loss: <span class="token number">0.4492</span>, lr: <span class="token number">0.000791</span><span class="token number">2024</span>-11-25 00:01:33,203 - INFO - Epoch: <span class="token number">297</span>, val_loss: <span class="token number">0.4019</span>, mIoU: <span class="token number">0.5894</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6373</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-25 00:02:59,370 - INFO - Epoch: <span class="token number">298</span>, train_loss: <span class="token number">0.4502</span>, lr: <span class="token number">0.000550</span><span class="token number">2024</span>-11-25 00:03:21,111 - INFO - Epoch: <span class="token number">298</span>, val_loss: <span class="token number">0.4036</span>, mIoU: <span class="token number">0.5884</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6352</span>, best_nIoU: <span class="token number">0.6467</span><span class="token number">2024</span>-11-25 00:04:48,072 - INFO - Epoch: <span class="token number">299</span>, train_loss: <span class="token number">0.4612</span>, lr: <span class="token number">0.000295</span><span class="token number">2024</span>-11-25 00:05:10,318 - INFO - Epoch: <span class="token number">299</span>, val_loss: <span class="token number">0.4034</span>, mIoU: <span class="token number">0.5874</span>, best_mIoU: <span class="token number">0.5967</span>, nIoU: <span class="token number">0.6359</span>, best_nIoU: <span class="token number">0.6467</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>不固定随机数种子时的情况</p><blockquote><p>best_mIoU: 0.7007，best_nIoU: 0.7110<br>此情况和ACM作者的情况基本接近:<br><img src="http://pic.huangruimin.tech/20241125090412.png"></p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>-11-25 08:11:32,924 - INFO - Epoch: <span class="token number">290</span>, train_loss: <span class="token number">0.3187</span>, lr: <span class="token number">0.002336</span><span class="token number">2024</span>-11-25 08:11:43,965 - INFO - Epoch: <span class="token number">290</span>, val_loss: <span class="token number">0.2922</span>, mIoU: <span class="token number">0.6824</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7041</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:12:25,941 - INFO - Epoch: <span class="token number">291</span>, train_loss: <span class="token number">0.3242</span>, lr: <span class="token number">0.002125</span><span class="token number">2024</span>-11-25 08:12:36,901 - INFO - Epoch: <span class="token number">291</span>, val_loss: <span class="token number">0.2871</span>, mIoU: <span class="token number">0.6933</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7090</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:13:18,937 - INFO - Epoch: <span class="token number">292</span>, train_loss: <span class="token number">0.3153</span>, lr: <span class="token number">0.001911</span><span class="token number">2024</span>-11-25 08:13:29,852 - INFO - Epoch: <span class="token number">292</span>, val_loss: <span class="token number">0.2908</span>, mIoU: <span class="token number">0.6865</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7067</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:14:11,835 - INFO - Epoch: <span class="token number">293</span>, train_loss: <span class="token number">0.3192</span>, lr: <span class="token number">0.001695</span><span class="token number">2024</span>-11-25 08:14:22,907 - INFO - Epoch: <span class="token number">293</span>, val_loss: <span class="token number">0.2920</span>, mIoU: <span class="token number">0.6812</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7069</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:15:04,815 - INFO - Epoch: <span class="token number">294</span>, train_loss: <span class="token number">0.3246</span>, lr: <span class="token number">0.001475</span><span class="token number">2024</span>-11-25 08:15:15,711 - INFO - Epoch: <span class="token number">294</span>, val_loss: <span class="token number">0.2890</span>, mIoU: <span class="token number">0.6888</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7074</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:15:57,783 - INFO - Epoch: <span class="token number">295</span>, train_loss: <span class="token number">0.3087</span>, lr: <span class="token number">0.001252</span><span class="token number">2024</span>-11-25 08:16:08,638 - INFO - Epoch: <span class="token number">295</span>, val_loss: <span class="token number">0.2882</span>, mIoU: <span class="token number">0.6868</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7080</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:16:50,680 - INFO - Epoch: <span class="token number">296</span>, train_loss: <span class="token number">0.3164</span>, lr: <span class="token number">0.001025</span><span class="token number">2024</span>-11-25 08:17:01,592 - INFO - Epoch: <span class="token number">296</span>, val_loss: <span class="token number">0.2903</span>, mIoU: <span class="token number">0.6879</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7072</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:17:43,572 - INFO - Epoch: <span class="token number">297</span>, train_loss: <span class="token number">0.3228</span>, lr: <span class="token number">0.000791</span><span class="token number">2024</span>-11-25 08:17:54,435 - INFO - Epoch: <span class="token number">297</span>, val_loss: <span class="token number">0.2872</span>, mIoU: <span class="token number">0.6928</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7099</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:18:36,557 - INFO - Epoch: <span class="token number">298</span>, train_loss: <span class="token number">0.3073</span>, lr: <span class="token number">0.000550</span><span class="token number">2024</span>-11-25 08:18:47,343 - INFO - Epoch: <span class="token number">298</span>, val_loss: <span class="token number">0.2879</span>, mIoU: <span class="token number">0.6958</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7096</span>, best_nIoU: <span class="token number">0.7110</span><span class="token number">2024</span>-11-25 08:19:29,246 - INFO - Epoch: <span class="token number">299</span>, train_loss: <span class="token number">0.3104</span>, lr: <span class="token number">0.000295</span><span class="token number">2024</span>-11-25 08:19:40,133 - INFO - Epoch: <span class="token number">299</span>, val_loss: <span class="token number">0.2927</span>, mIoU: <span class="token number">0.6850</span>, best_mIoU: <span class="token number">0.7007</span>, nIoU: <span class="token number">0.7058</span>, best_nIoU: <span class="token number">0.7110</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>官方原版+我们的数据集增强的情况</p><blockquote><p>best_mIoU: 0.6146，best_nIoU: 0.6676<br><img src="http://pic.huangruimin.tech/20241125092418.png"><br><img src="http://pic.huangruimin.tech/20241125092528.png"></p></blockquote></li></ul><h2 id="六、增加对照组"><a href="#六、增加对照组" class="headerlink" title="六、增加对照组"></a>六、增加对照组</h2><h3 id="6-0-tensorboard数据可视化命令"><a href="#6-0-tensorboard数据可视化命令" class="headerlink" title="6.0 tensorboard数据可视化命令"></a>6.0 tensorboard数据可视化命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">tensorboard <span class="token parameter variable">--logdir</span><span class="token operator">=</span>/data1/hrm/Experiment/ACM_Practice/logs/dev/train/20241124234923 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">8009</span> <span class="token parameter variable">--samples_per_plugin</span><span class="token operator">=</span>images<span class="token operator">=</span><span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="6-1-采用我们的代码的训练结果"><a href="#6-1-采用我们的代码的训练结果" class="headerlink" title="6.1 采用我们的代码的训练结果"></a>6.1 采用我们的代码的训练结果</h3><p><img src="http://pic.huangruimin.tech/20241126164731.png"><br><img src="http://pic.huangruimin.tech/20241126164742.png"><br><img src="http://pic.huangruimin.tech/20241126164756.png"><br><img src="http://pic.huangruimin.tech/20241126164811.png"></p><ul><li>1.我们的代码取消随机数种子：显卡0</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">2024</span>-11-26 05:18:16,925 - INFO - Epoch: <span class="token number">286</span>, train_loss: <span class="token number">0.3092</span>, lr: <span class="token number">0.003162</span><span class="token number">2024</span>-11-26 05:18:27,894 - INFO - Epoch: <span class="token number">286</span>, val_loss: <span class="token number">0.2809</span>, mIoU: <span class="token number">0.7000</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7164</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:19:10,232 - INFO - Epoch: <span class="token number">287</span>, train_loss: <span class="token number">0.3002</span>, lr: <span class="token number">0.002958</span><span class="token number">2024</span>-11-26 05:19:21,131 - INFO - Epoch: <span class="token number">287</span>, val_loss: <span class="token number">0.2820</span>, mIoU: <span class="token number">0.7025</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7176</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:20:03,380 - INFO - Epoch: <span class="token number">288</span>, train_loss: <span class="token number">0.3070</span>, lr: <span class="token number">0.002752</span><span class="token number">2024</span>-11-26 05:20:14,364 - INFO - Epoch: <span class="token number">288</span>, val_loss: <span class="token number">0.2824</span>, mIoU: <span class="token number">0.7020</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7165</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:20:56,500 - INFO - Epoch: <span class="token number">289</span>, train_loss: <span class="token number">0.2986</span>, lr: <span class="token number">0.002545</span><span class="token number">2024</span>-11-26 05:21:07,459 - INFO - Epoch: <span class="token number">289</span>, val_loss: <span class="token number">0.2805</span>, mIoU: <span class="token number">0.7042</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7177</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:21:49,838 - INFO - Epoch: <span class="token number">290</span>, train_loss: <span class="token number">0.3029</span>, lr: <span class="token number">0.002336</span><span class="token number">2024</span>-11-26 05:22:00,835 - INFO - Epoch: <span class="token number">290</span>, val_loss: <span class="token number">0.2800</span>, mIoU: <span class="token number">0.7076</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7164</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:22:42,877 - INFO - Epoch: <span class="token number">291</span>, train_loss: <span class="token number">0.3085</span>, lr: <span class="token number">0.002125</span><span class="token number">2024</span>-11-26 05:22:53,740 - INFO - Epoch: <span class="token number">291</span>, val_loss: <span class="token number">0.2805</span>, mIoU: <span class="token number">0.7097</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7178</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:23:36,021 - INFO - Epoch: <span class="token number">292</span>, train_loss: <span class="token number">0.2979</span>, lr: <span class="token number">0.001911</span><span class="token number">2024</span>-11-26 05:23:46,916 - INFO - Epoch: <span class="token number">292</span>, val_loss: <span class="token number">0.2802</span>, mIoU: <span class="token number">0.7062</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7177</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:24:29,086 - INFO - Epoch: <span class="token number">293</span>, train_loss: <span class="token number">0.3088</span>, lr: <span class="token number">0.001695</span><span class="token number">2024</span>-11-26 05:24:40,030 - INFO - Epoch: <span class="token number">293</span>, val_loss: <span class="token number">0.2810</span>, mIoU: <span class="token number">0.7010</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7153</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:25:22,422 - INFO - Epoch: <span class="token number">294</span>, train_loss: <span class="token number">0.3092</span>, lr: <span class="token number">0.001475</span><span class="token number">2024</span>-11-26 05:25:33,408 - INFO - Epoch: <span class="token number">294</span>, val_loss: <span class="token number">0.2803</span>, mIoU: <span class="token number">0.7049</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7168</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:26:15,388 - INFO - Epoch: <span class="token number">295</span>, train_loss: <span class="token number">0.2911</span>, lr: <span class="token number">0.001252</span><span class="token number">2024</span>-11-26 05:26:26,382 - INFO - Epoch: <span class="token number">295</span>, val_loss: <span class="token number">0.2809</span>, mIoU: <span class="token number">0.7065</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7170</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:27:08,503 - INFO - Epoch: <span class="token number">296</span>, train_loss: <span class="token number">0.3127</span>, lr: <span class="token number">0.001025</span><span class="token number">2024</span>-11-26 05:27:19,502 - INFO - Epoch: <span class="token number">296</span>, val_loss: <span class="token number">0.2811</span>, mIoU: <span class="token number">0.7054</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7165</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:28:01,661 - INFO - Epoch: <span class="token number">297</span>, train_loss: <span class="token number">0.3100</span>, lr: <span class="token number">0.000791</span><span class="token number">2024</span>-11-26 05:28:12,661 - INFO - Epoch: <span class="token number">297</span>, val_loss: <span class="token number">0.2785</span>, mIoU: <span class="token number">0.7079</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7174</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:28:54,903 - INFO - Epoch: <span class="token number">298</span>, train_loss: <span class="token number">0.3006</span>, lr: <span class="token number">0.000550</span><span class="token number">2024</span>-11-26 05:29:05,789 - INFO - Epoch: <span class="token number">298</span>, val_loss: <span class="token number">0.2819</span>, mIoU: <span class="token number">0.7044</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7168</span>, best_nIoU: <span class="token number">0.7214</span><span class="token number">2024</span>-11-26 05:29:47,968 - INFO - Epoch: <span class="token number">299</span>, train_loss: <span class="token number">0.3035</span>, lr: <span class="token number">0.000295</span><span class="token number">2024</span>-11-26 05:29:58,897 - INFO - Epoch: <span class="token number">299</span>, val_loss: <span class="token number">0.2805</span>, mIoU: <span class="token number">0.7058</span>, best_mIoU: <span class="token number">0.7120</span>, nIoU: <span class="token number">0.7167</span>, best_nIoU: <span class="token number">0.7214</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>2.官方代码用官方的数据增强：显卡1</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Best IoU: <span class="token number">0.65325</span>, best nIoU: <span class="token number">0.67298</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>3.官方的代码用我们的数据增强：显卡2</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Best IoU: <span class="token number">0.68095</span>, best nIoU: <span class="token number">0.71277</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>结论：我们自己的代码没问题，并且，用我们自己的数据增强，效果会更好 </p></blockquote><h3 id="6-2-验证固定随机数种子后，是否能够使得训练效果可复现"><a href="#6-2-验证固定随机数种子后，是否能够使得训练效果可复现" class="headerlink" title="6.2 验证固定随机数种子后，是否能够使得训练效果可复现"></a>6.2 验证固定随机数种子后，是否能够使得训练效果可复现</h3><p><img src="http://pic.huangruimin.tech/20241127201409.png"><br><img src="http://pic.huangruimin.tech/20241127201459.png"></p><blockquote><p>实际证明，这是不可复现的</p></blockquote><h3 id="6-3-查看GPU状态的命令"><a href="#6-3-查看GPU状态的命令" class="headerlink" title="6.3 查看GPU状态的命令"></a>6.3 查看GPU状态的命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">watch</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> nvidia-smi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20241127202040.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> <span class="token parameter variable">-f</span> <span class="token parameter variable">-p</span> <span class="token number">2570815</span> <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20241127202213.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gpustat <span class="token parameter variable">-i</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20241127201953.png"></p><h3 id="6-4-ViT"><a href="#6-4-ViT" class="headerlink" title="6.4 ViT"></a>6.4 ViT</h3><p><img src="http://pic.huangruimin.tech/ViT.gif"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Grad-CAM用于图像分割</title>
      <link href="/2024/11/11/grad-cam-yong-yu-tu-xiang-fen-ge/"/>
      <url>/2024/11/11/grad-cam-yong-yu-tu-xiang-fen-ge/</url>
      
        <content type="html"><![CDATA[<h2 id="一、target的设计"><a href="#一、target的设计" class="headerlink" title="一、target的设计"></a>一、target的设计</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SemanticSegmentationTarget</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> category<span class="token punctuation">,</span> mask<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>category <span class="token operator">=</span> category        self<span class="token punctuation">.</span>mask <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>        <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>mask <span class="token operator">=</span> self<span class="token punctuation">.</span>mask<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 这里被别的地方回调，并且这个地方不考虑batch_size维度</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_output<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># model_output[self.category, :, : ]会直接降低为二维</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>model_output<span class="token punctuation">[</span>self<span class="token punctuation">.</span>category<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span> <span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>mask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>targets <span class="token operator">=</span> <span class="token punctuation">[</span>SemanticSegmentationTarget<span class="token punctuation">(</span>car_category<span class="token punctuation">,</span> car_mask_float<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 这里只考虑了1个batch_Size</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、代码示例"><a href="#二、代码示例" class="headerlink" title="二、代码示例"></a>二、代码示例</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> warningswarnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span>warnings<span class="token punctuation">.</span>simplefilter<span class="token punctuation">(</span><span class="token string">'ignore'</span><span class="token punctuation">)</span><span class="token keyword">from</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>segmentation <span class="token keyword">import</span> deeplabv3_resnet50<span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> requests<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> pytorch_grad_cam<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>image <span class="token keyword">import</span> show_cam_on_image<span class="token punctuation">,</span> preprocess_image<span class="token keyword">import</span> cv2image_url <span class="token operator">=</span> <span class="token string">"https://farm1.staticflickr.com/6/9606553_ccc7518589_z.jpg"</span>image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>image_url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">)</span>rgb_img <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span>image<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span>input_tensor <span class="token operator">=</span> preprocess_image<span class="token punctuation">(</span>rgb_img<span class="token punctuation">,</span>                                mean<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.485</span><span class="token punctuation">,</span> <span class="token number">0.456</span><span class="token punctuation">,</span> <span class="token number">0.406</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                std<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.229</span><span class="token punctuation">,</span> <span class="token number">0.224</span><span class="token punctuation">,</span> <span class="token number">0.225</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># Taken from the torchvision tutorial</span><span class="token comment"># https://pytorch.org/vision/stable/auto_examples/plot_visualization_utils.html</span>model <span class="token operator">=</span> deeplabv3_resnet50<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> progress<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>model <span class="token operator">=</span> model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    model <span class="token operator">=</span> model<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>    input_tensor <span class="token operator">=</span> input_tensor<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 这是3个通道</span><span class="token keyword">print</span><span class="token punctuation">(</span>input_tensor<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>output <span class="token operator">=</span> model<span class="token punctuation">(</span>input_tensor<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">,</span> output<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 发现模型输出的是字典</span><span class="token comment"># print("------------------------------------------------------------------")</span><span class="token keyword">class</span> <span class="token class-name">SegmentationModelOutputWrapper</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token builtin">super</span><span class="token punctuation">(</span>SegmentationModelOutputWrapper<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> model            <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"out"</span><span class="token punctuation">]</span>    model <span class="token operator">=</span> SegmentationModelOutputWrapper<span class="token punctuation">(</span>model<span class="token punctuation">)</span>output <span class="token operator">=</span> model<span class="token punctuation">(</span>input_tensor<span class="token punctuation">)</span><span class="token comment"># 分成了7个类别</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># 封装一下，这样就只输出分割专用的矩阵了</span><span class="token comment"># print("------------------------------------------------------------------")</span><span class="token comment"># 这里在channel通道进行softmax</span>normalized_masks <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>output<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span>sem_classes <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'__background__'</span><span class="token punctuation">,</span> <span class="token string">'aeroplane'</span><span class="token punctuation">,</span> <span class="token string">'bicycle'</span><span class="token punctuation">,</span> <span class="token string">'bird'</span><span class="token punctuation">,</span> <span class="token string">'boat'</span><span class="token punctuation">,</span> <span class="token string">'bottle'</span><span class="token punctuation">,</span> <span class="token string">'bus'</span><span class="token punctuation">,</span>    <span class="token string">'car'</span><span class="token punctuation">,</span> <span class="token string">'cat'</span><span class="token punctuation">,</span> <span class="token string">'chair'</span><span class="token punctuation">,</span> <span class="token string">'cow'</span><span class="token punctuation">,</span> <span class="token string">'diningtable'</span><span class="token punctuation">,</span> <span class="token string">'dog'</span><span class="token punctuation">,</span> <span class="token string">'horse'</span><span class="token punctuation">,</span> <span class="token string">'motorbike'</span><span class="token punctuation">,</span>    <span class="token string">'person'</span><span class="token punctuation">,</span> <span class="token string">'pottedplant'</span><span class="token punctuation">,</span> <span class="token string">'sheep'</span><span class="token punctuation">,</span> <span class="token string">'sofa'</span><span class="token punctuation">,</span> <span class="token string">'train'</span><span class="token punctuation">,</span> <span class="token string">'tvmonitor'</span><span class="token punctuation">]</span><span class="token comment"># 组成dictionary</span>sem_class_to_idx <span class="token operator">=</span> <span class="token punctuation">{</span>cls<span class="token punctuation">:</span> idx <span class="token keyword">for</span> <span class="token punctuation">(</span>idx<span class="token punctuation">,</span> cls<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>sem_classes<span class="token punctuation">)</span><span class="token punctuation">}</span>car_category <span class="token operator">=</span> sem_class_to_idx<span class="token punctuation">[</span><span class="token string">"car"</span><span class="token punctuation">]</span><span class="token comment"># 之前搞得很复杂，然而这里一行代码就搞定了</span>car_mask <span class="token operator">=</span> normalized_masks<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># int8数据类型的mask</span>car_mask_uint8 <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span>car_mask <span class="token operator">==</span> car_category<span class="token punctuation">)</span><span class="token comment"># float数据类型的mask</span>car_mask_float <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span>car_mask <span class="token operator">==</span> car_category<span class="token punctuation">)</span><span class="token comment"># 在最后一个channel轴重复3次，然后在水平方向上和原始的image进行堆叠</span>both_images <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> np<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span>car_mask_uint8<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>both_images<span class="token punctuation">)</span>both_images <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>both_images<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"both_images_seg.jpg"</span><span class="token punctuation">,</span> both_images<span class="token punctuation">)</span><span class="token comment"># print("------------------------------------------------------------------")</span><span class="token keyword">from</span> pytorch_grad_cam <span class="token keyword">import</span> GradCAM<span class="token keyword">class</span> <span class="token class-name">SemanticSegmentationTarget</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> category<span class="token punctuation">,</span> mask<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>category <span class="token operator">=</span> category        self<span class="token punctuation">.</span>mask <span class="token operator">=</span> torch<span class="token punctuation">.</span>from_numpy<span class="token punctuation">(</span>mask<span class="token punctuation">)</span>        <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>mask <span class="token operator">=</span> self<span class="token punctuation">.</span>mask<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># 这里被别的地方回调，并且这个地方不考虑batch_size维度</span>    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model_output<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># model_output[self.category, :, : ]会直接降低为二维</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>model_output<span class="token punctuation">[</span>self<span class="token punctuation">.</span>category<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span> <span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>mask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    target_layers <span class="token operator">=</span> <span class="token punctuation">[</span>model<span class="token punctuation">.</span>model<span class="token punctuation">.</span>backbone<span class="token punctuation">.</span>layer4<span class="token punctuation">]</span><span class="token comment"># 这里只考虑了1个layer</span><span class="token comment"># 输入category(int)，float数据类型的mask，这里是输入回调函数以方便被调用的</span>targets <span class="token operator">=</span> <span class="token punctuation">[</span>SemanticSegmentationTarget<span class="token punctuation">(</span>car_category<span class="token punctuation">,</span> car_mask_float<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 这里只考虑了1个batch_Size</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>targets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">with</span> GradCAM<span class="token punctuation">(</span>model<span class="token operator">=</span>model<span class="token punctuation">,</span> target_layers<span class="token operator">=</span>target_layers<span class="token punctuation">)</span> <span class="token keyword">as</span> cam<span class="token punctuation">:</span>    grayscale_cam <span class="token operator">=</span> cam<span class="token punctuation">(</span>input_tensor<span class="token operator">=</span>input_tensor<span class="token punctuation">,</span> targets<span class="token operator">=</span>targets<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># 后面是从batch_Size中取出来</span>    cam_image <span class="token operator">=</span> show_cam_on_image<span class="token punctuation">(</span>rgb_img<span class="token punctuation">,</span> grayscale_cam<span class="token punctuation">,</span> use_rgb<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cam_image<span class="token punctuation">)</span>cam_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cam_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"cam_image_seg.jpg"</span><span class="token punctuation">,</span> cam_image<span class="token punctuation">)</span><span class="token comment"># print("------------------------------------------------------------------")</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>总结：</li><li>Layer：多个Layer会聚合成为1个</li><li>BatchSize：多个BatchSize会有多个BatchSize的输出</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Grad-CAM的原理及实践</title>
      <link href="/2024/11/11/grad-cam-de-yuan-li-ji-shi-jian/"/>
      <url>/2024/11/11/grad-cam-de-yuan-li-ji-shi-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="1-深层的特征图，具有更好的语义信息，其热力图效果也更好"><a href="#1-深层的特征图，具有更好的语义信息，其热力图效果也更好" class="headerlink" title="1. 深层的特征图，具有更好的语义信息，其热力图效果也更好"></a>1. 深层的特征图，具有更好的语义信息，其热力图效果也更好</h2><p><img src="http://pic.huangruimin.tech/20241111094517.png"></p><h2 id="2-基本示意图"><a href="#2-基本示意图" class="headerlink" title="2. 基本示意图"></a>2. 基本示意图</h2><p><img src="http://pic.huangruimin.tech/20241111094626.png"></p><ul><li><p>其中A是前向推理得到的</p><blockquote><p>前向传播计算2个节点</p></blockquote></li><li><p>A’是反向传播得到的</p><blockquote><p>反向传播计算1个节点</p></blockquote></li></ul><p>*注意，实际计算时：batch_size维度会保留；但是不同的layer会取平均进行聚合，最后导致layer维度消失</p><h2 id="3-计算细节"><a href="#3-计算细节" class="headerlink" title="3. 计算细节"></a>3. 计算细节</h2><p><img src="http://pic.huangruimin.tech/20241111094837.png"></p><h2 id="4-举例"><a href="#4-举例" class="headerlink" title="4. 举例"></a>4. 举例</h2><p><img src="http://pic.huangruimin.tech/20241111094942.png"><br><img src="http://pic.huangruimin.tech/20241111095004.png"><br><img src="http://pic.huangruimin.tech/20241111095038.png"></p><h2 id="5-后处理"><a href="#5-后处理" class="headerlink" title="5. 后处理"></a>5. 后处理</h2><p><img src="http://pic.huangruimin.tech/20241111095338.png"><br><img src="http://pic.huangruimin.tech/20241111095238.png"></p><h2 id="6-基本用法：用于图像分类"><a href="#6-基本用法：用于图像分类" class="headerlink" title="6. 基本用法：用于图像分类"></a>6. 基本用法：用于图像分类</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> argparse<span class="token keyword">import</span> os<span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> torch<span class="token keyword">from</span> torchvision <span class="token keyword">import</span> models<span class="token keyword">from</span> pytorch_grad_cam <span class="token keyword">import</span> <span class="token punctuation">(</span>    GradCAM<span class="token punctuation">,</span> HiResCAM<span class="token punctuation">,</span> ScoreCAM<span class="token punctuation">,</span> GradCAMPlusPlus<span class="token punctuation">,</span>    AblationCAM<span class="token punctuation">,</span> XGradCAM<span class="token punctuation">,</span> EigenCAM<span class="token punctuation">,</span> EigenGradCAM<span class="token punctuation">,</span>    LayerCAM<span class="token punctuation">,</span> FullGrad<span class="token punctuation">,</span> GradCAMElementWise<span class="token punctuation">,</span> KPCA_CAM<span class="token punctuation">)</span><span class="token keyword">from</span> pytorch_grad_cam <span class="token keyword">import</span> GuidedBackpropReLUModel<span class="token keyword">from</span> pytorch_grad_cam<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>image <span class="token keyword">import</span> <span class="token punctuation">(</span>    show_cam_on_image<span class="token punctuation">,</span> deprocess_image<span class="token punctuation">,</span> preprocess_image<span class="token punctuation">)</span><span class="token keyword">from</span> pytorch_grad_cam<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>model_targets <span class="token keyword">import</span> ClassifierOutputTarget<span class="token keyword">def</span> <span class="token function">get_args</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--device'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">'cpu'</span><span class="token punctuation">,</span>                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Torch device to use'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>        <span class="token string">'--image-path'</span><span class="token punctuation">,</span>        <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>        default<span class="token operator">=</span><span class="token string">'both.png'</span><span class="token punctuation">,</span>        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Input image path'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--aug-smooth'</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">'store_true'</span><span class="token punctuation">,</span>                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Apply test time augmentation to smooth the CAM'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>        <span class="token string">'--eigen-smooth'</span><span class="token punctuation">,</span>        action<span class="token operator">=</span><span class="token string">'store_true'</span><span class="token punctuation">,</span>        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Reduce noise by taking the first principle component'</span>        <span class="token string">'of cam_weights*activations'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--method'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">'gradcam'</span><span class="token punctuation">,</span>                        choices<span class="token operator">=</span><span class="token punctuation">[</span>                            <span class="token string">'gradcam'</span><span class="token punctuation">,</span> <span class="token string">'hirescam'</span><span class="token punctuation">,</span> <span class="token string">'gradcam++'</span><span class="token punctuation">,</span>                            <span class="token string">'scorecam'</span><span class="token punctuation">,</span> <span class="token string">'xgradcam'</span><span class="token punctuation">,</span> <span class="token string">'ablationcam'</span><span class="token punctuation">,</span>                            <span class="token string">'eigencam'</span><span class="token punctuation">,</span> <span class="token string">'eigengradcam'</span><span class="token punctuation">,</span> <span class="token string">'layercam'</span><span class="token punctuation">,</span>                            <span class="token string">'fullgrad'</span><span class="token punctuation">,</span> <span class="token string">'gradcamelementwise'</span><span class="token punctuation">,</span> <span class="token string">'kpcacam'</span>                        <span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'CAM method'</span><span class="token punctuation">)</span>    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">'--output-dir'</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">'output'</span><span class="token punctuation">,</span>                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">'Output directory to save the images'</span><span class="token punctuation">)</span>    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> args<span class="token punctuation">.</span>device<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Using device "</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>device<span class="token punctuation">}</span></span><span class="token string">" for acceleration'</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Using CPU for computation'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> args<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">""" python cam.py -image-path &lt;path_to_image&gt;    Example usage of loading an image and computing:        1. CAM        2. Guided Back Propagation        3. Combining both    """</span>    args <span class="token operator">=</span> get_args<span class="token punctuation">(</span><span class="token punctuation">)</span>    methods <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"gradcam"</span><span class="token punctuation">:</span> GradCAM<span class="token punctuation">,</span>        <span class="token string">"hirescam"</span><span class="token punctuation">:</span> HiResCAM<span class="token punctuation">,</span>        <span class="token string">"scorecam"</span><span class="token punctuation">:</span> ScoreCAM<span class="token punctuation">,</span>        <span class="token string">"gradcam++"</span><span class="token punctuation">:</span> GradCAMPlusPlus<span class="token punctuation">,</span>        <span class="token string">"ablationcam"</span><span class="token punctuation">:</span> AblationCAM<span class="token punctuation">,</span>        <span class="token string">"xgradcam"</span><span class="token punctuation">:</span> XGradCAM<span class="token punctuation">,</span>        <span class="token string">"eigencam"</span><span class="token punctuation">:</span> EigenCAM<span class="token punctuation">,</span>        <span class="token string">"eigengradcam"</span><span class="token punctuation">:</span> EigenGradCAM<span class="token punctuation">,</span>        <span class="token string">"layercam"</span><span class="token punctuation">:</span> LayerCAM<span class="token punctuation">,</span>        <span class="token string">"fullgrad"</span><span class="token punctuation">:</span> FullGrad<span class="token punctuation">,</span>        <span class="token string">"gradcamelementwise"</span><span class="token punctuation">:</span> GradCAMElementWise<span class="token punctuation">,</span>        <span class="token string">'kpcacam'</span><span class="token punctuation">:</span> KPCA_CAM    <span class="token punctuation">}</span>    model <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span>args<span class="token punctuation">.</span>device<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Choose the target layer you want to compute the visualization for.</span>    <span class="token comment"># Usually this will be the last convolutional layer in the model.</span>    <span class="token comment"># Some common choices can be:</span>    <span class="token comment"># Resnet18 and 50: model.layer4</span>    <span class="token comment"># VGG, densenet161: model.features[-1]</span>    <span class="token comment"># mnasnet1_0: model.layers[-1]</span>    <span class="token comment"># You can print the model to help chose the layer</span>    <span class="token comment"># You can pass a list with several target layers,</span>    <span class="token comment"># in that case the CAMs will be computed per layer and then aggregated.</span>    <span class="token comment"># You can also try selecting all layers of a certain type, with e.g:</span>    <span class="token comment"># from pytorch_grad_cam.utils.find_layers import find_layer_types_recursive</span>    <span class="token comment"># find_layer_types_recursive(model, [torch.nn.ReLU])</span>        target_layers <span class="token operator">=</span> <span class="token punctuation">[</span>model<span class="token punctuation">.</span>layer4<span class="token punctuation">]</span>    rgb_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>args<span class="token punctuation">.</span>image_path<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    rgb_img <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span>rgb_img<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">255</span>    input_tensor <span class="token operator">=</span> preprocess_image<span class="token punctuation">(</span>rgb_img<span class="token punctuation">,</span>                                    mean<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.485</span><span class="token punctuation">,</span> <span class="token number">0.456</span><span class="token punctuation">,</span> <span class="token number">0.406</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                    std<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0.229</span><span class="token punctuation">,</span> <span class="token number">0.224</span><span class="token punctuation">,</span> <span class="token number">0.225</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>args<span class="token punctuation">.</span>device<span class="token punctuation">)</span>    <span class="token comment"># We have to specify the target we want to generate</span>    <span class="token comment"># the Class Activation Maps for.</span>    <span class="token comment"># If targets is None, the highest scoring category (for every member in the batch) will be used.</span>    <span class="token comment"># You can target specific categories by</span>    <span class="token comment"># targets = [ClassifierOutputTarget(281)]</span>    <span class="token comment"># targets = [ClassifierOutputTarget(281)]</span>    targets <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token comment"># Using the with statement ensures the context is freed, and you can</span>    <span class="token comment"># recreate different CAM objects in a loop.</span>    cam_algorithm <span class="token operator">=</span> methods<span class="token punctuation">[</span>args<span class="token punctuation">.</span>method<span class="token punctuation">]</span>    <span class="token keyword">with</span> cam_algorithm<span class="token punctuation">(</span>model<span class="token operator">=</span>model<span class="token punctuation">,</span>                       target_layers<span class="token operator">=</span>target_layers<span class="token punctuation">)</span> <span class="token keyword">as</span> cam<span class="token punctuation">:</span>        <span class="token comment"># AblationCAM and ScoreCAM have batched implementations.</span>        <span class="token comment"># You can override the internal batch size for faster computation.</span>        cam<span class="token punctuation">.</span>batch_size <span class="token operator">=</span> <span class="token number">32</span>        grayscale_cam <span class="token operator">=</span> cam<span class="token punctuation">(</span>input_tensor<span class="token operator">=</span>input_tensor<span class="token punctuation">,</span>                            targets<span class="token operator">=</span>targets<span class="token punctuation">,</span>                            aug_smooth<span class="token operator">=</span>args<span class="token punctuation">.</span>aug_smooth<span class="token punctuation">,</span>                            eigen_smooth<span class="token operator">=</span>args<span class="token punctuation">.</span>eigen_smooth<span class="token punctuation">)</span>        grayscale_cam <span class="token operator">=</span> grayscale_cam<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span>        cam_image <span class="token operator">=</span> show_cam_on_image<span class="token punctuation">(</span>rgb_img<span class="token punctuation">,</span> grayscale_cam<span class="token punctuation">,</span> use_rgb<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        cam_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cam_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>    gb_model <span class="token operator">=</span> GuidedBackpropReLUModel<span class="token punctuation">(</span>model<span class="token operator">=</span>model<span class="token punctuation">,</span> device<span class="token operator">=</span>args<span class="token punctuation">.</span>device<span class="token punctuation">)</span>    gb <span class="token operator">=</span> gb_model<span class="token punctuation">(</span>input_tensor<span class="token punctuation">,</span> target_category<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>    cam_mask <span class="token operator">=</span> cv2<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">[</span>grayscale_cam<span class="token punctuation">,</span> grayscale_cam<span class="token punctuation">,</span> grayscale_cam<span class="token punctuation">]</span><span class="token punctuation">)</span>    cam_gb <span class="token operator">=</span> deprocess_image<span class="token punctuation">(</span>cam_mask <span class="token operator">*</span> gb<span class="token punctuation">)</span>    gb <span class="token operator">=</span> deprocess_image<span class="token punctuation">(</span>gb<span class="token punctuation">)</span>    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>args<span class="token punctuation">.</span>output_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    cam_output_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>args<span class="token punctuation">.</span>output_dir<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>method<span class="token punctuation">}</span></span><span class="token string">_cam.jpg'</span></span><span class="token punctuation">)</span>    gb_output_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>args<span class="token punctuation">.</span>output_dir<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>method<span class="token punctuation">}</span></span><span class="token string">_gb.jpg'</span></span><span class="token punctuation">)</span>    cam_gb_output_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>args<span class="token punctuation">.</span>output_dir<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>method<span class="token punctuation">}</span></span><span class="token string">_cam_gb.jpg'</span></span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>cam_output_path<span class="token punctuation">,</span> cam_image<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>gb_output_path<span class="token punctuation">,</span> gb<span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>cam_gb_output_path<span class="token punctuation">,</span> cam_gb<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PD_FA的计算</title>
      <link href="/2024/11/06/pd-fa-de-ji-suan/"/>
      <url>/2024/11/06/pd-fa-de-ji-suan/</url>
      
        <content type="html"><![CDATA[<h2 id="一、在BasicIRSTD中的计算"><a href="#一、在BasicIRSTD中的计算" class="headerlink" title="一、在BasicIRSTD中的计算"></a>一、在BasicIRSTD中的计算</h2><ul><li>这个函数不会用于训练中，只会在测试中进行使用</li><li>并且这种只初始化时reset一次，其余时候全程累加</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">PD_FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>PD_FA<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>image_area_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>all_pixel <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>PD <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>target<span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> preds<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>        predits  <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>preds<span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>        labelss <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>labels<span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>         image <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>predits<span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        coord_image <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        label <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>labelss <span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        coord_label <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>label<span class="token punctuation">)</span>        <span class="token comment"># label中目标的个数</span>        self<span class="token punctuation">.</span>target    <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span>        <span class="token comment"># 没有用到</span>        self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># 用于计算image中匹配label的目标的个数，即计算image中检测出来的目标的个数</span>        self<span class="token punctuation">.</span>distance_match   <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># 没有用到</span>        self<span class="token punctuation">.</span>dismatch         <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># 没有用到</span>        <span class="token keyword">for</span> K <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>K<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>image_area_total<span class="token punctuation">.</span>append<span class="token punctuation">(</span>area_image<span class="token punctuation">)</span>        true_img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>predits<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            centroid_label <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                centroid_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>                distance <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>centroid_image <span class="token operator">-</span> centroid_label<span class="token punctuation">)</span>                <span class="token comment"># 没有用到</span>                area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>                <span class="token keyword">if</span> distance <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>distance_match<span class="token punctuation">.</span>append<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>                    true_img<span class="token punctuation">[</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>coords<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>coords<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>                    <span class="token keyword">del</span> coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span>                    <span class="token keyword">break</span>        <span class="token comment"># image检测错误的像素个数，(计算方法存在争议，因为true_img中的坐标来自于image，而不是label(本来就应当来自于label的)；此外，是否匹配是由质心决定的，没有像素级对比因而不准确)</span>        self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">+=</span> <span class="token punctuation">(</span>predits <span class="token operator">-</span> true_img<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># label整体像素个数 (=image整体像素个数)</span>        self<span class="token punctuation">.</span>all_pixel <span class="token operator">+=</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment"># image中匹配label的目标的个数，即image中检测出来的目标的个数</span>        self<span class="token punctuation">.</span>PD <span class="token operator">+=</span><span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>distance_match<span class="token punctuation">)</span>    <span class="token comment"># 此处的计算会导致偏高，但不影响整体的评估</span>    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 这里也不是纯目标级的虚警</span>        <span class="token comment"># image检测错误的像素个数 / [label整体像素个数 (实际应当为label中负样本即非目标的像素个数)]</span>        Final_FA <span class="token operator">=</span>  self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">/</span> self<span class="token punctuation">.</span>all_pixel        <span class="token comment"># 这里是纯目标级的预测精度</span>        <span class="token comment"># image中匹配label的目标的个数 / label中目标的个数</span>        Final_PD <span class="token operator">=</span>  self<span class="token punctuation">.</span>PD <span class="token operator">/</span>self<span class="token punctuation">.</span>target        <span class="token comment"># Final_FA其实不用.cpu().detach()</span>        <span class="token keyword">return</span> Final_PD<span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span>Final_FA<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>FA  <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>PD  <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、在SCTransNet中的计算"><a href="#二、在SCTransNet中的计算" class="headerlink" title="二、在SCTransNet中的计算"></a>二、在SCTransNet中的计算</h2><ul><li>这个函数不会用于训练中，只会在测试中进行使用</li><li>并且这种只初始化时reset一次，其余时候全程累加</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">PD_FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>PD_FA<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>image_area_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>all_pixel <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>PD <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> preds<span class="token punctuation">,</span> labels<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">:</span>        predits <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>preds<span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>        labelss <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>labels<span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>        image <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>predits<span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        coord_image <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        label <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>labelss<span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>        coord_label <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>label<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>target <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span>  <span class="token comment"># 目标总数  直接就搞GT的连通域个数</span>        self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 图像中预测的区域列表</span>        self<span class="token punctuation">.</span>image_area_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>distance_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>dismatch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> K <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>K<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>image_area_total<span class="token punctuation">.</span>append<span class="token punctuation">(</span>area_image<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># image 与 label 之间 根据中心点 进行连通域的确定</span>            centroid_label <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                centroid_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>                distance <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>centroid_image <span class="token operator">-</span> centroid_label<span class="token punctuation">)</span>                area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>                <span class="token keyword">if</span> distance <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>                    self<span class="token punctuation">.</span>distance_match<span class="token punctuation">.</span>append<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>                    self<span class="token punctuation">.</span>image_area_match<span class="token punctuation">.</span>append<span class="token punctuation">(</span>area_image<span class="token punctuation">)</span>                    <span class="token keyword">del</span> coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span>  <span class="token comment"># 匹配上一个之后就 清除一个</span>                    <span class="token keyword">break</span>        <span class="token comment"># image中不与label匹配的各个块的面积</span>        self<span class="token punctuation">.</span>dismatch <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> self<span class="token punctuation">.</span>image_area_total <span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>image_area_match<span class="token punctuation">]</span>  <span class="token comment"># 在image里面 但是不在label里面</span>        <span class="token comment"># image中不与label匹配的各个块的面积，找到后加起来。(计算方法也存在争议，因为是否匹配是由质心决定的，没有像素级对比因而不准确)</span>        self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">+=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>dismatch<span class="token punctuation">)</span>  <span class="token comment"># Fa 虚警个数 像素的虚警</span>        <span class="token comment"># print(self.dismatch_pixel)</span>        self<span class="token punctuation">.</span>all_pixel <span class="token operator">+=</span> size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>PD <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>distance_match<span class="token punctuation">)</span>  <span class="token comment"># 如果中心点之间距离在3一下 就算Pd  所以Pd 是匹配上了的目标的个数</span>    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        Final_FA <span class="token operator">=</span> self<span class="token punctuation">.</span>dismatch_pixel <span class="token operator">/</span> self<span class="token punctuation">.</span>all_pixel        Final_PD <span class="token operator">=</span> self<span class="token punctuation">.</span>PD <span class="token operator">/</span> self<span class="token punctuation">.</span>target        <span class="token keyword">return</span> Final_PD<span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">(</span>Final_FA<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>FA <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>PD <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、在SeRankDet中的计算"><a href="#三、在SeRankDet中的计算" class="headerlink" title="三、在SeRankDet中的计算"></a>三、在SeRankDet中的计算</h2><ul><li>这个函数不会用于训练中，只会在测试中进行使用</li><li>并且这种只初始化时reset一次，其余时候全程累加</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">PD_FA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nclass<span class="token punctuation">,</span> bins<span class="token punctuation">,</span> cfg<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>PD_FA<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>nclass <span class="token operator">=</span> nclass        self<span class="token punctuation">.</span>bins <span class="token operator">=</span> bins        self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>image_area_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>FA <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>PD <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>target <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>cfg <span class="token operator">=</span> cfg    <span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> preds<span class="token punctuation">,</span> labels<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 先进行外围的threshold</span>        <span class="token keyword">for</span> iBin <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            score_thresh <span class="token operator">=</span> iBin <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>bins<span class="token punctuation">)</span>            batch <span class="token operator">=</span> preds<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            <span class="token comment"># 再进行内围的batch，也就是一张image和一张label进行比较</span>            <span class="token keyword">for</span> b <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>batch<span class="token punctuation">)</span><span class="token punctuation">:</span>                predits <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>preds<span class="token punctuation">[</span>b<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> score_thresh<span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>                predits <span class="token operator">=</span> np<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>predits<span class="token punctuation">,</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                labelss <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">(</span>labels<span class="token punctuation">[</span>b<span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">'int64'</span><span class="token punctuation">)</span>  <span class="token comment"># P</span>                labelss <span class="token operator">=</span> np<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>labelss<span class="token punctuation">,</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                image <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>predits<span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>                coord_image <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>image<span class="token punctuation">)</span>                label <span class="token operator">=</span> measure<span class="token punctuation">.</span>label<span class="token punctuation">(</span>labelss<span class="token punctuation">,</span> connectivity<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>                coord_label <span class="token operator">=</span> measure<span class="token punctuation">.</span>regionprops<span class="token punctuation">(</span>label<span class="token punctuation">)</span>                <span class="token comment"># 持续累加的变量1</span>                self<span class="token punctuation">.</span>target<span class="token punctuation">[</span>iBin<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span>                <span class="token comment"># 叠加的每一对图片内部的指标，到下一张图片之前，要清空。</span>                self<span class="token punctuation">.</span>image_area_total <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>image_area_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                self<span class="token punctuation">.</span>distance_match <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token comment"># 后面直接赋值，所以其实不用进行清空</span>                self<span class="token punctuation">.</span>dismatch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> K <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>K<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>                    self<span class="token punctuation">.</span>image_area_total<span class="token punctuation">.</span>append<span class="token punctuation">(</span>area_image<span class="token punctuation">)</span>                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    centroid_label <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_label<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">for</span> m <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        centroid_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>centroid<span class="token punctuation">)</span><span class="token punctuation">)</span>                        distance <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>centroid_image <span class="token operator">-</span> centroid_label<span class="token punctuation">)</span>                        area_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">.</span>area<span class="token punctuation">)</span>                        <span class="token keyword">if</span> distance <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>                            self<span class="token punctuation">.</span>distance_match<span class="token punctuation">.</span>append<span class="token punctuation">(</span>distance<span class="token punctuation">)</span>                            self<span class="token punctuation">.</span>image_area_match<span class="token punctuation">.</span>append<span class="token punctuation">(</span>area_image<span class="token punctuation">)</span>                            <span class="token keyword">del</span> coord_image<span class="token punctuation">[</span>m<span class="token punctuation">]</span>                            <span class="token keyword">break</span>                self<span class="token punctuation">.</span>dismatch <span class="token operator">=</span> <span class="token punctuation">[</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> self<span class="token punctuation">.</span>image_area_total <span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>image_area_match<span class="token punctuation">]</span>                <span class="token comment"># 持续累加的变量2</span>                self<span class="token punctuation">.</span>FA<span class="token punctuation">[</span>iBin<span class="token punctuation">]</span> <span class="token operator">+=</span> np<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>dismatch<span class="token punctuation">)</span>                <span class="token comment"># 持续累加的变量3</span>                self<span class="token punctuation">.</span>PD<span class="token punctuation">[</span>iBin<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>distance_match<span class="token punctuation">)</span>    <span class="token comment"># 所有图片都输入之后，才执行self.PD_FA.get，这个时候，才输入img_num</span>    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img_num<span class="token punctuation">)</span><span class="token punctuation">:</span>        Final_FA <span class="token operator">=</span> self<span class="token punctuation">.</span>FA <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>cfg<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token string">'crop_size'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> img_num<span class="token punctuation">)</span>        Final_PD <span class="token operator">=</span> self<span class="token punctuation">.</span>PD <span class="token operator">/</span> self<span class="token punctuation">.</span>target        <span class="token keyword">return</span> Final_FA<span class="token punctuation">,</span> Final_PD    <span class="token keyword">def</span> <span class="token function">reset</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 持续累加变量1</span>        self<span class="token punctuation">.</span>FA <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 持续累加变量2</span>        self<span class="token punctuation">.</span>PD <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 持续累加变量3</span>        <span class="token comment"># 后面自己添加的</span>        self<span class="token punctuation">.</span>target <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>self<span class="token punctuation">.</span>bins <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>云服务器配置</title>
      <link href="/2024/09/19/yun-fu-wu-qi-pei-zhi/"/>
      <url>/2024/09/19/yun-fu-wu-qi-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Ubuntu22-04及以后版本设置开机自动启动的方法"><a href="#1-Ubuntu22-04及以后版本设置开机自动启动的方法" class="headerlink" title="1.Ubuntu22.04及以后版本设置开机自动启动的方法"></a>1.Ubuntu22.04及以后版本设置开机自动启动的方法</h2><ul><li>Step1 进入到以下路径：</li></ul><blockquote><p>/etc/systemd/system/</p></blockquote><ul><li>Step2 新建开机自动启动服务文件：</li></ul><blockquote><p>frpc.service</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span><span class="token assign-left variable">Description</span><span class="token operator">=</span>frpc <span class="token function">service</span><span class="token assign-left variable">After</span><span class="token operator">=</span>network.target syslog.target<span class="token assign-left variable">Wants</span><span class="token operator">=</span>network.target<span class="token punctuation">[</span>Service<span class="token punctuation">]</span><span class="token assign-left variable">Type</span><span class="token operator">=</span>simple<span class="token assign-left variable">Restart</span><span class="token operator">=</span>on-failure<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span>5s<span class="token assign-left variable">StartLimitInterval</span><span class="token operator">=</span><span class="token number">0</span><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/data/HRM/frp_package/frp_0.58.1_linux_amd64/frpc <span class="token parameter variable">-c</span> /data/HRM/frp_package/frp_0.58.1_linux_amd64/frpc.toml<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/data/HRM/frp_package/frp_0.58.1_linux_amd64<span class="token punctuation">[</span>Install<span class="token punctuation">]</span><span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>Step3 重新加载systemd配置‌：执行命令sudo systemctl daemon-reload来重新加载配置。</p></li><li><p>Step4 设置开机自启‌：执行命令sudo systemctl enable frpc.service来设置开机自启。</p></li><li><p>Step5 执行命令sudo systemctl restart frpc.service来启动服务。</p></li><li><p>Step6 执行命令systemctl status frpc.service来查看服务状态。</p></li><li><p>Step7 执行命令systemctl stop frpc.service来停止服务。</p></li></ul><blockquote><p>旧版本为在/etc/rc.local里面添加新的指令<br>/home/frp/frp_package/frp_0.58.1_linux_amd64/frps -c /home/frp/frp_package/frp_0.58.1_linux_amd64/frps.toml &amp;</p></blockquote><h2 id="2-fpc在客户端及服务端配置说明"><a href="#2-fpc在客户端及服务端配置说明" class="headerlink" title="2.fpc在客户端及服务端配置说明"></a>2.fpc在客户端及服务端配置说明</h2><ul><li><p>frp的版本为</p><blockquote><p>frp_0.58.1_linux_amd64.tar.gz</p></blockquote></li><li><p>在客户端</p></li></ul><blockquote><p>frpc.toml</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">serverAddr <span class="token operator">=</span> <span class="token string">"114.132.200.6"</span>serverPort <span class="token operator">=</span> <span class="token number">7000</span><span class="token punctuation">[</span><span class="token punctuation">[</span>proxies<span class="token punctuation">]</span><span class="token punctuation">]</span>name <span class="token operator">=</span> <span class="token string">"ssh"</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> <span class="token string">"tcp"</span>localIP <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span>localPort <span class="token operator">=</span> <span class="token number">22</span>remotePort <span class="token operator">=</span> <span class="token number">6000</span><span class="token punctuation">[</span><span class="token punctuation">[</span>proxies<span class="token punctuation">]</span><span class="token punctuation">]</span>name <span class="token operator">=</span> <span class="token string">"tensorboard"</span><span class="token builtin class-name">type</span> <span class="token operator">=</span> <span class="token string">"tcp"</span>localIP <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span>localPort <span class="token operator">=</span> <span class="token number">6006</span>remotePort <span class="token operator">=</span> <span class="token number">6006</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在服务端</li></ul><blockquote><p>frcs.toml</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bindPort <span class="token operator">=</span> <span class="token number">7000</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-hexo在服务端采用nginx配置说明"><a href="#3-hexo在服务端采用nginx配置说明" class="headerlink" title="3. hexo在服务端采用nginx配置说明"></a>3. hexo在服务端采用nginx配置说明</h2><p>测试</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Focal Loss的理解</title>
      <link href="/2024/09/19/focal-loss-de-li-jie/"/>
      <url>/2024/09/19/focal-loss-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1.介绍"></a>1.介绍</h2><ul><li><p>Focal Loss 是一种专门设计用于处理类别不平衡问题的损失函数，特别是在目标检测任务中表现出色。</p></li><li><p>它最早由 Facebook AI Research (FAIR) 提出的，在物体检测中，如 RetinaNet，解决了正负样本严重不平衡的问题。</p></li><li><p>在许多实际应用中，如目标检测，类别不平衡是一个常见问题。</p></li><li><p>例如，在一个图像中，背景（负样本）通常占据大多数，而目标物体（正样本）很少。</p></li><li><p>传统的交叉熵损失（Cross-Entropy Loss）可能会导致模型过度关注负样本，从而忽视正样本，特别是难以检测的正样本。</p></li><li><p>Focal Loss 通过将注意力集中在难以分类的样本上，来解决这个问题。</p></li></ul><h2 id="2-现象"><a href="#2-现象" class="headerlink" title="2.现象"></a>2.现象</h2><p>Focal loss最早是 He et al 在2017年由论文 Focal Loss for Dense Object Detection 中实现的。</p><p>在这篇文章发表之前，对象检测实际上一直被认为是一个很难解决的问题，尤其是很难检测图像中的小尺寸对象。请参见下面的示例，与其他图片相比，摩托车的尺寸相对较小， 所以该模型无法很好地预测摩托车的存在。</p><p><img src="http://pic.huangruimin.tech/20241108212324.png"></p><p>在上图中，模型无法预测摩托车的原因是因为该模型是使用了Binary Cross Entropy loss，这种训练目标要求模型 对自己的预测真的很有信心。而Focal Loss所做的是，它使模型可以更”放松”地预测事物，而无需80-100％确信此对象是“某物”。简而言之，它给模型提供了更多的自由，可以在进行预测时承担一些风险。这在处理高度不平衡的数据集时尤其重要，因为在某些情况下（例如癌症检测），即使预测结果为假阳性也可接受，确实需要模型承担风险并尽量进行预测。<br>因此，Focal loss在样本不平衡的情况下特别有用。特别是在“对象检测”的情况下，大多数像素通常都是背景，图像中只有很少数的像素具有我们感兴趣的对象。</p><p>这是经过Focal loss训练后同一模型对同样图片的预测。</p><p><img src="http://pic.huangruimin.tech/20241108212834.png"></p><h2 id="3-定义"><a href="#3-定义" class="headerlink" title="3.定义"></a>3.定义</h2><p>那么为什么Focal loss有效，其中的原理是什么？<br>既然我们已经看到了“Focal loss”可以做什么的一个例子，接下来让我们尝试去理解为什么它可以起作用。下面是了解Focal loss的最重要的一张图：</p><p><img src="http://pic.huangruimin.tech/20241108212918.png"></p><ul><li>其目的为：</li></ul><table><thead><tr><th>gamma</th><th>alpha</th></tr></thead><tbody><tr><td>大概率的背景其损失减小</td><td>大概率的背景其损失减小</td></tr><tr><td>小概率的目标的损失不减小太多</td><td>小概率的目标其损失要增大</td></tr></tbody></table><p>在上图中，“蓝”线代表交叉熵损失。X轴即“预测为真实标签的概率”（为简单起见，将其称为pt）。举例来说，假设模型预测某物是自行车的概率为0.6，而它确实是自行车， 在这种情况下的pt为0.6。而如果同样的情况下对象不是自行车。则pt为0.4，因为此处的真实标签是0，而对象不是自行车的概率为0.4（1-0.6）。</p><p>Y轴是给定pt后Focal loss和CE的loss的值。</p><p>从图像中可以看出，当模型预测为真实标签的概率为0.6左右时，交叉熵损失仍在0.5左右。因此，为了在训练过程中减少损失，我们的模型将必须以更高的概率来预测到真实标签。换句话说，交叉熵损失要求模型对自己的预测非常有信心。但这也同样会给模型表现带来负面影响。</p><p>深度学习模型会变得过度自信, 因此模型的泛化能力会下降.</p><p>这个模型过度自信的问题同样在另一篇出色的论文 Beyond temperature scaling: Obtaining well-calibrated multiclass probabilities with Dirichlet calibration 被强调过。</p><p>另外，作为重新思考计算机视觉的初始架构的一部分而引入的标签平滑是解决该问题的另一种方法。</p><p>Focal loss与上述解决方案不同。从比较Focal loss与CrossEntropy的图表可以看出，当使用γ&gt; 1的Focal Loss可以减少“分类得好的样本”或者说“模型预测正确概率大”的样本的训练损失，而对于“难以分类的示例”，比如预测概率小于0.5的，则不会减小太多损失。因此，在数据类别不平衡的情况下，会让模型的注意力放在稀少的类别上，因为这些类别的样本见过的少，比较难分。</p><h2 id="4-数学定义"><a href="#4-数学定义" class="headerlink" title="4.数学定义"></a>4.数学定义</h2><p><img src="http://pic.huangruimin.tech/20241108213751.png"></p><p>Alpha and Gamma?<br>那么在Focal loss 中的alpha和gamma是什么呢？我们会将alpha记为α，gamma记为γ。</p><p>我们可以这样来理解该公式：</p><blockquote><p>γ 控制曲线的形状. γ的值越大, 好分类样本的loss就越小, 我们就可以把模型的注意力投向那些难分类的样本. 一个大的 γ 让获得小loss的样本范围扩大了.</p></blockquote><p>同时，当γ=0时，这个表达式就退化成了Cross Entropy Loss，众所周知地</p><p><img src="http://pic.huangruimin.tech/20241108221926.png"></p><p>定义“ pt”如下，按照其真实意义：</p><p><img src="http://pic.huangruimin.tech/20241108221946.png"></p><p>将上述两个式子合并，Cross Entropy Loss其实就变成了下式。</p><p><img src="http://pic.huangruimin.tech/20241108222001.png"></p><p>现在我们知道了γ的作用，那么α是干什么的呢？</p><p>除了Focal loss以外，另一种处理类别不均衡的方法是引入权重。给稀有类别以高权重，给统治地位的类或普通类以小权重。这些权重我们也可以用α表示。</p><p><img src="http://pic.huangruimin.tech/20241108222021.png"></p><p>加上了这些权重确实帮助处理了类别的 不均衡，focal loss的论文报道：</p><p>类间不均衡较大会导致，交叉熵损失在训练的时候受到影响。易分类的样本的分类错误的损失占了整体损失的绝大部分，并主导梯度。尽管α平衡了正面/负面例子的重要性，但它并未区分简单/困难例子。</p><p>作者想要解释的是:</p><blockquote><p>尽管我们加上了α, 它也确实对不同的类别加上了不同的权重, 从而平衡了正负样本的重要性 ，但在大多数例子中，只做这个是不够的. 我们同样要做的是减少容易分类的样本分类错误的损失。因为不然的话，这些容易分类的样本就主导了我们的训练.</p></blockquote><p>那么Focal loss 怎么处理的呢，它相对交叉熵加上了一个乘性的因子(1 − pt)**γ，从而像我们上面所讲的，降低了易分类样本区间内产生的loss。</p><p>再看下Focal loss的表达，是不是清晰了许多。</p><p><img src="http://pic.huangruimin.tech/20241108222230.png"></p><h2 id="5-补充"><a href="#5-补充" class="headerlink" title="5. 补充"></a>5. 补充</h2><p><img src="http://pic.huangruimin.tech/20241108223953.png"></p><h2 id="6-交叉熵定义的回忆"><a href="#6-交叉熵定义的回忆" class="headerlink" title="6. 交叉熵定义的回忆"></a>6. 交叉熵定义的回忆</h2><p>对于给定的真实分布P和预测分布Q,交叉熵定义为<br><img src="http://pic.huangruimin.tech/20241108220628.png"><br>在分类问题中，P通常是实际的类别分布（也就是标签）， Q是模型预测的概率分布。</p><h2 id="7-代码实现"><a href="#7-代码实现" class="headerlink" title="7. 代码实现"></a>7. 代码实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token comment"># @time: 2024/8/21 16:54</span><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token comment"># Focal Loss 的 PyTorch 示例实现</span><span class="token keyword">class</span> <span class="token class-name">FocalLoss</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> reduction<span class="token operator">=</span><span class="token string">'mean'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>FocalLoss<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>alpha <span class="token operator">=</span> alpha        self<span class="token punctuation">.</span>gamma <span class="token operator">=</span> gamma        self<span class="token punctuation">.</span>reduction <span class="token operator">=</span> reduction    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment"># 计算 logits 的 sigmoid 概率</span>        p <span class="token operator">=</span> torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>inputs<span class="token punctuation">)</span>        <span class="token comment"># 计算交叉熵损失</span>        bce_loss <span class="token operator">=</span> nn<span class="token punctuation">.</span>functional<span class="token punctuation">.</span>binary_cross_entropy_with_logits<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> targets<span class="token punctuation">,</span> reduction<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">)</span>        <span class="token comment"># 计算 Focal Loss</span>        alpha <span class="token operator">=</span> self<span class="token punctuation">.</span>alpha <span class="token operator">*</span> targets <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> targets<span class="token punctuation">)</span>        focal_loss <span class="token operator">=</span> alpha <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> p<span class="token punctuation">)</span> <span class="token operator">**</span> self<span class="token punctuation">.</span>gamma<span class="token punctuation">)</span> <span class="token operator">*</span> bce_loss        <span class="token comment"># 根据 reduction 参数进行损失归约</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>reduction <span class="token operator">==</span> <span class="token string">'mean'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> focal_loss<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> self<span class="token punctuation">.</span>reduction <span class="token operator">==</span> <span class="token string">'sum'</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> focal_loss<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> focal_loss<span class="token comment"># 使用示例</span>criterion <span class="token operator">=</span> FocalLoss<span class="token punctuation">(</span>alpha<span class="token operator">=</span><span class="token number">0.25</span><span class="token punctuation">,</span> gamma<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> reduction<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">)</span>inputs <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> requires_grad<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>targets <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>loss <span class="token operator">=</span> criterion<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>inputs<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>targets<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>loss<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>loss<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>几种常用loss函数原理及代码示例</title>
      <link href="/2024/09/18/ji-chong-chang-yong-loss-han-shu-yuan-li-ji-dai-ma-shi-li/"/>
      <url>/2024/09/18/ji-chong-chang-yong-loss-han-shu-yuan-li-ji-dai-ma-shi-li/</url>
      
        <content type="html"><![CDATA[<h2 id="0-信息熵"><a href="#0-信息熵" class="headerlink" title="0.信息熵"></a>0.信息熵</h2><ul><li><p>计算公式<br><img src="http://pic.huangruimin.tech/20240919142939.png"></p></li><li><p>说明</p></li></ul><blockquote><p>Onehot向量的信息熵为0</p></blockquote><blockquote><p>非Onehot向量的概率分布反而有一定的信息熵</p></blockquote><blockquote><p>对于交叉熵而言，与Onehot向量相同的概率分布时，其交叉熵也为0</p></blockquote><h2 id="1-交叉熵损失-Cross-Entropy-Loss-CE-loss"><a href="#1-交叉熵损失-Cross-Entropy-Loss-CE-loss" class="headerlink" title="1.交叉熵损失 Cross Entropy Loss (CE loss)"></a>1.交叉熵损失 Cross Entropy Loss (CE loss)</h2><ul><li><p>计算公式：<br><img src="http://pic.huangruimin.tech/20240918161853.png"></p></li><li><p>公式实际应用说明:</p><blockquote><p>其中p(x)代表了标签(或者每个标签的概率)，q(x)代表了模型预测的概率</p></blockquote></li><li><p>代码示例</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, NC]</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>num_class <span class="token operator">=</span> <span class="token number">4</span><span class="token comment"># 神经网络的输出值，没有经过softmax，未归一化</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span><span class="token comment"># delta 目标分布</span>hard_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>num_class<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 非 delta 目标分布</span>soft_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span><span class="token comment">### method 1 for CE loss</span><span class="token comment">### hard label，常用在分类之中</span>ce_loss_fun <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>ce_loss <span class="token operator">=</span> ce_loss_fun<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> hard_label<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss1: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### method 2 for CE loss</span><span class="token comment">### soft label，常用在知识蒸馏中</span>ce_loss <span class="token operator">=</span> ce_loss_fun<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>soft_label<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss2: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-负对数似然损失-Negative-Log-Likelihood-Loss-NLL-loss"><a href="#2-负对数似然损失-Negative-Log-Likelihood-Loss-NLL-loss" class="headerlink" title="2.负对数似然损失 Negative Log Likelihood Loss (NLL loss)"></a>2.负对数似然损失 Negative Log Likelihood Loss (NLL loss)</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, NC]</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>num_class <span class="token operator">=</span> <span class="token number">4</span><span class="token comment"># 神经网络的输出值，没有经过softmax，未归一化</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span><span class="token comment"># delta 目标分布</span>hard_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>num_class<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>nll_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>NLLLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>nll_loss <span class="token operator">=</span> nll_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hard_label<span class="token punctuation">)</span>  <span class="token comment"># 与 CE loss结果相同</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"negative log-likelihood loss: </span><span class="token interpolation"><span class="token punctuation">{</span>nll_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### cross entropy value = NLL value</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里注意到：cross entropy value = NLL value<br>也就是说，能用CE loss的地方，就能用NLL loss<br>取决于输出的是什么，分两种情况：</p><blockquote><ul><li>神经网络输出的是未归一化的分数的话：那么就用CE loss</li><li>神经网络输出的是一个概率值，甚至是一个对数概率值的话：那么就用NLL loss</li></ul></blockquote></blockquote><blockquote><p>总之他们俩是殊途同归的</p><blockquote><ul><li>对数似然，就是负的交叉熵</li><li>交叉熵，就是负对数似然</li></ul></blockquote></blockquote><p><img src="http://pic.huangruimin.tech/20240918193654.png"></p><p><img src="http://pic.huangruimin.tech/20240918192143.png"></p><h2 id="3-Kullback-Leibler-divergence-loss（KL-loss）"><a href="#3-Kullback-Leibler-divergence-loss（KL-loss）" class="headerlink" title="3.Kullback-Leibler divergence loss（KL loss）"></a>3.Kullback-Leibler divergence loss（KL loss）</h2><blockquote><p>反映的是：预测分布和目标分布之间的距离度量</p></blockquote><blockquote><p>计算公式如下：</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918192700.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, NC]</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>num_class <span class="token operator">=</span> <span class="token number">4</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span>soft_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span>  <span class="token comment"># delta 目标分布</span>kld_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>KLDivLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>kld_loss <span class="token operator">=</span> kld_loss_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>soft_label <span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Kullback-Leibler divergence loss:</span><span class="token interpolation"><span class="token punctuation">{</span>kld_loss<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-验证-CE-IE-KLD"><a href="#4-验证-CE-IE-KLD" class="headerlink" title="4.验证 CE = IE + KLD"></a>4.验证 CE = IE + KLD</h2><blockquote><p>即：交叉熵 = 信息熵 + KLD散度</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918191929.png"></p><blockquote><p>其中p(x)代表了真实分布，q(x)代表了预测分布</p></blockquote><blockquote><p>代码验证</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, NC]</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>num_class <span class="token operator">=</span> <span class="token number">4</span><span class="token comment"># 神经网络的输出值，没有经过softmax，未归一化</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span><span class="token comment"># delta 目标分布</span>hard_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>num_class<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 非 delta 目标分布</span>soft_label <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span>ce_loss_fn_sample <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">)</span>ce_loss_sample <span class="token operator">=</span> ce_loss_fn_sample<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>soft_label<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss sample: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss_sample<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>kld_loss_fn_sample <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>KLDivLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">)</span>kld_loss_sample <span class="token operator">=</span> kld_loss_fn_sample<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>soft_label<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Kullback-Leibler divergence loss sample:</span><span class="token interpolation"><span class="token punctuation">{</span>kld_loss_sample<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>target_information_entropy <span class="token operator">=</span> torch<span class="token punctuation">.</span>distributions<span class="token punctuation">.</span>Categorical<span class="token punctuation">(</span>probs<span class="token operator">=</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>soft_label<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>entropy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'information entropy sample:</span><span class="token interpolation"><span class="token punctuation">{</span>target_information_entropy<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>  <span class="token comment"># IE为常数，如果目标分布是delta分布，IE=0</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>ce_loss_sample<span class="token punctuation">,</span> kld_loss_sample<span class="token operator">+</span>target_information_entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>对于delta分布，即对于onehot变量，信息熵是一个0，0对于卷积神经网络的参数更新时没有任何贡献的，此时，优化CE_loss与优化KLD_loss是没有任何区别，效果是一样的</p></blockquote><blockquote><p>对于非delta分布，即对于非onehot变量，信息熵是一个常数，常数对于卷积神经网络的参数更新时没有任何贡献的，此时，优化CE_loss与优化KLD_loss是没有任何区别，效果是一样的</p></blockquote><h2 id="5-Binary-Cross-Entropy-loss（BCE-loss）"><a href="#5-Binary-Cross-Entropy-loss（BCE-loss）" class="headerlink" title="5.Binary Cross Entropy loss（BCE loss）"></a>5.Binary Cross Entropy loss（BCE loss）</h2><blockquote><p>对判别器输出是真还是假，就属于二分类问题了</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918204028.png"></p><blockquote><p>代码示例</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, 1]</span>bce_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>BCELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>nll_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>NLLLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">)</span>prob_1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>logits<span class="token punctuation">)</span>target <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>bce_loss <span class="token operator">=</span> bce_loss_fn<span class="token punctuation">(</span>prob_1<span class="token punctuation">,</span> target<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"binart cross entropy loss: </span><span class="token interpolation"><span class="token punctuation">{</span>bce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### 用NLL loss代替BCE loss做二分类</span>prob_0 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">-</span>prob_1<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>prob <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>prob_0<span class="token punctuation">,</span> prob_1<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>nll_loss_binary <span class="token operator">=</span> nll_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>prob<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"negative likelihood loss binary: </span><span class="token interpolation"><span class="token punctuation">{</span>nll_loss_binary<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>bce_loss<span class="token punctuation">,</span> nll_loss_binary<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>本质上，都是2个概率分布的映射<br>sigmoid 的作用是将输出值转换为0-1之间的浮点型<br>如果不想添加sigmoid函数的话，那么就直接用BCEWithLogitsLoss函数，如下图</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918222242.png"></p><blockquote><p>但是，在BCE loss函数中，当输入数值变大的情况下，容易出现为0的情况，如下代码及结果所示：</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltlogits <span class="token operator">=</span> torch<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>loss <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>BCELoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> lgs <span class="token keyword">in</span> logits<span class="token punctuation">:</span>    loss<span class="token punctuation">.</span>append<span class="token punctuation">(</span>loss_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>lgs<span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>ones_like<span class="token punctuation">(</span>lgs<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> loss<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20240918222813.png"></p><h2 id="6-Cosine-Similarity-loss"><a href="#6-Cosine-Similarity-loss" class="headerlink" title="6.Cosine Similarity loss"></a>6.Cosine Similarity loss</h2><blockquote><p>数学表达式</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918222941.png"></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> Fbatchsize <span class="token operator">=</span> <span class="token number">2</span>cosine_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CosineEmbeddingLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#生成具有正态分布（均值为0，标准差为1）的随机数的函数</span>v1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token comment"># target只能是0或者1</span><span class="token comment"># 因此：0~1 -&gt; 0~2 -&gt; -1~1</span>target <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span>cosine_loss <span class="token operator">=</span> cosine_loss_fn<span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cosine similarity loss: </span><span class="token interpolation"><span class="token punctuation">{</span>cosine_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>应用领域</p><blockquote><ul><li>自监督学习</li><li>对比学习</li><li>相似度匹配</li><li>文本检索</li><li>图像检索</li></ul></blockquote></blockquote><h2 id="7-前述分类损失函数测试代码汇总"><a href="#7-前述分类损失函数测试代码汇总" class="headerlink" title="7.前述分类损失函数测试代码汇总"></a>7.前述分类损失函数测试代码汇总</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token comment"># logits shape: [BS, NC]</span>batchsize <span class="token operator">=</span> <span class="token number">2</span>num_class <span class="token operator">=</span> <span class="token number">4</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span>target_indices <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span>num_class<span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># delta 目标分布</span>target_logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> num_class<span class="token punctuation">)</span>  <span class="token comment"># 非 delta 目标分布</span><span class="token comment"># 1. 交叉熵损失 Cross Entropy Loss (CE loss)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span><span class="token comment">## 1. 调用 Cross Entropy loss</span><span class="token comment">### method 1 for CE loss</span>ce_loss_fun <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>ce_loss <span class="token operator">=</span> ce_loss_fun<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> target_indices<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss1: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### method 2 for CE loss</span>ce_loss <span class="token operator">=</span> ce_loss_fun<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>target_logits<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss2: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment"># 2.负对数似然损失 Negative Log Likelihood Loss (NLL loss)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>nll_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>NLLLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>nll_loss <span class="token operator">=</span> nll_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> target_indices<span class="token punctuation">)</span>  <span class="token comment"># 与 CE loss结果相同</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"negative log-likelihood loss: </span><span class="token interpolation"><span class="token punctuation">{</span>nll_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### cross entropy value = NLL value</span><span class="token comment"># 3. 调用 Kullback-Leibler divergence loss（KL loss）</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>kld_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>KLDivLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>kld_loss <span class="token operator">=</span> kld_loss_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>target_logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Kullback-Leibler divergence loss:</span><span class="token interpolation"><span class="token punctuation">{</span>kld_loss<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># 4.验证 CE = IE + KLD</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>ce_loss_fn_sample <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">)</span>ce_loss_sample <span class="token operator">=</span> ce_loss_fn_sample<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>target_logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cross entropy loss sample: </span><span class="token interpolation"><span class="token punctuation">{</span>ce_loss_sample<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>kld_loss_fn_sample <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>KLDivLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">"none"</span><span class="token punctuation">)</span>kld_loss_sample <span class="token operator">=</span> kld_loss_fn_sample<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>target_logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Kullback-Leibler divergence loss sample:</span><span class="token interpolation"><span class="token punctuation">{</span>kld_loss_sample<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>target_information_entropy <span class="token operator">=</span> torch<span class="token punctuation">.</span>distributions<span class="token punctuation">.</span>Categorical<span class="token punctuation">(</span>probs<span class="token operator">=</span>torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>target_logits<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>entropy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'information entropy sample:</span><span class="token interpolation"><span class="token punctuation">{</span>target_information_entropy<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>  <span class="token comment"># IE为常数，如果目标分布是delta分布，IE=0</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>ce_loss_sample<span class="token punctuation">,</span> kld_loss_sample<span class="token operator">+</span>target_information_entropy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 5.Binary Cross Entropy loss（BCE loss）</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>bce_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>BCELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>logits <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">)</span>prob_1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>logits<span class="token punctuation">)</span>target <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>bce_loss <span class="token operator">=</span> bce_loss_fn<span class="token punctuation">(</span>prob_1<span class="token punctuation">,</span> target<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"binart cross entropy loss: </span><span class="token interpolation"><span class="token punctuation">{</span>bce_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token comment">### 用NLL loss代替BCE loss做二分类</span>prob_0 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">-</span>prob_1<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>prob <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>prob_0<span class="token punctuation">,</span> prob_1<span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>nll_loss_binary <span class="token operator">=</span> nll_fn<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>log<span class="token punctuation">(</span>prob<span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"negative likelihood loss binary: </span><span class="token interpolation"><span class="token punctuation">{</span>nll_loss_binary<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>allclose<span class="token punctuation">(</span>bce_loss<span class="token punctuation">,</span> nll_loss_binary<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 6.调用 Cosine Similarity loss</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----------------------------------------------------------"</span><span class="token punctuation">)</span>cosine_loss_fn <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>CosineEmbeddingLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>v1 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> torch<span class="token punctuation">.</span>randn<span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span>target <span class="token operator">=</span> torch<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token punctuation">(</span>batchsize<span class="token punctuation">,</span> <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span>cosine_loss <span class="token operator">=</span> cosine_loss_fn<span class="token punctuation">(</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cosine similarity loss: </span><span class="token interpolation"><span class="token punctuation">{</span>cosine_loss<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>运行结果</p></blockquote><p><img src="http://pic.huangruimin.tech/20240918225146.png"></p><ul><li>分类的损失函数，本质上是2个概率分布的比较</li></ul><h2 id="8-L1loss"><a href="#8-L1loss" class="headerlink" title="8.L1loss"></a>8.L1loss</h2><ul><li>也被成为MAE</li><li>基本不用在分类中</li></ul><p><img src="http://pic.huangruimin.tech/20240918224127.png"></p><h2 id="9-MSEloss"><a href="#9-MSEloss" class="headerlink" title="9.MSEloss"></a>9.MSEloss</h2><ul><li>即为MSE</li><li>基本不用在分类中</li></ul><p><img src="http://pic.huangruimin.tech/20240918223949.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知识蒸馏算法_原理&amp;综述</title>
      <link href="/2022/06/29/zhi-shi-zheng-liu-suan-fa-yuan-li-zong-shu/"/>
      <url>/2022/06/29/zhi-shi-zheng-liu-suan-fa-yuan-li-zong-shu/</url>
      
        <content type="html"><![CDATA[<p><img src="http://pic.huangruimin.tech/20220812141627.png"></p><p><img src="http://pic.huangruimin.tech/20220812142248.png"></p><p><img src="http://pic.huangruimin.tech/20220812142403.png"></p><p><img src="http://pic.huangruimin.tech/20220812142459.png"></p><p><img src="http://pic.huangruimin.tech/20220812142649.png"></p><p><img src="http://pic.huangruimin.tech/20220812142841.png"></p><ul><li>权重剪枝：结构化剪枝，整层整层地剪，整通道整通道地剪</li><li>通道剪枝：非结构化剪枝，一根树杈子，一根树杈子剪</li><li>加速卷积运算：将卷积运算转换成张量运算，这里面有很多卡脖子的技术，这也是MATLAB软件非常牛的关键，底层有很多数值运算的功能，都是MATLAB的核心技术，这点是无法被Python这种开源的编程语言所取代的；也是无法被开源计算库所取代的，特别是发射一个火箭，谁也没法保证到小数点后几位，但是MATLAB却可以；这里面有很多卡脖子的技术。</li><li>如果使用OpenVino的话，可以使用Intel神经网络计算棒</li><li>FPGA和集成电路，也可以部署人工智能算法</li><li>比如说MnasNet和MobileNetV3就是把NAS和轻量化网络进行了结合，就是让人工智能自己去设计一个轻量化的网络，而不用人去设计了</li><li>预训练大模型的知识蒸馏</li></ul><p><img src="http://pic.huangruimin.tech/20220812151750.png"></p><ul><li>论文来自于NIPS会议，是计算机视觉领域的顶级论文</li></ul><p><img src="http://pic.huangruimin.tech/20220812161505.png"></p><ul><li><p>所以在训练教师网络的时候，可以使用hard target去训练，但是，当训练出了教师网络后，教师网络对这张图片的预测结果，也就是这个soft targets能够传递更多的信息</p></li><li><p>那么也就可以使用这个soft target去训练学生网络</p></li></ul><p><img src="http://pic.huangruimin.tech/20220812161731.png"></p><p><img src="http://pic.huangruimin.tech/20220812162236.png"></p><ul><li><p>那么现在目标就明确了，用包含了很多信息的标签去训练学生网络，这样效率就会更高</p></li><li><p>现在还要进行一个操作，这个softtarget，还是不够soft，需要让它更加soft，也就是要知道这些非正确类别的概率，并把它解耦出来，给他暴露出来，所以这个时候就需要引入一个蒸馏温度T，这个温度T越高，这个soft label就越soft</p></li></ul><p><img src="http://pic.huangruimin.tech/20220812163103.png"></p><ul><li><p>可以看出，当T越大，就越soft；当T=100的时候，这4类，就已经基本一样了，等于是基本没有贫富差距了</p></li><li><p>T越小的话，两极分化就越来越严重</p></li><li><p>softmax，本来就是将概率转换为0~1之间，并且使得其求和为1</p></li><li><p>更软的soft-target去训练学生网络，那些非正确类别的概率就暴露得更彻底，更容易让学生网络去学习</p></li><li><p>所以这里就可以举一个具体的例子：</p></li></ul><p><img src="http://pic.huangruimin.tech/20220812164314.png"></p><ul><li>那学生网络与教师网络之间，是如何通过蒸馏来进行学习的呢？</li></ul><p><img src="http://pic.huangruimin.tech/20220812182035.png"></p><ul><li>知识蒸馏的图解如下图所示：</li></ul><p><img src="http://pic.huangruimin.tech/20220812183338.png"></p><p><img src="http://pic.huangruimin.tech/20220812183422.png"></p><p><img src="http://pic.huangruimin.tech/20220812183622.png"></p><ul><li>distillation是有一个师傅在手把手教你，告诉你，这是一个马，更像驴，而不像车，驴和车有多像，有多不像；而下面的这个hardloss就是在告诉你，这个课本有一张马的插图，插图告诉你，这就是马，不是别的东西；所以，这两项，有一个师傅带，还有一个课本看；就是和我们普通人学习的过程是很像的。</li></ul><p><img src="http://pic.huangruimin.tech/20220812220225.png"></p><ul><li><p>我们的目标就是，微调学生网络中的权重，使得最终的损失函数最小化；具体通过什么方法呢，就是通过梯度下降，反向传播的方法。</p></li><li><p>你可以把学生网络中的若干个权重当做水龙头，我们要微调每一个水龙头，使得最终的total loss最小。</p></li><li><p>它里面的所有权重，最终就可以使得，最终的损失函数最小化，或者说收敛到一个低值。</p></li></ul><p><img src="http://pic.huangruimin.tech/20220812221209.png"></p><ul><li>前面这两个图是训练过程，后面这个图是预测过程，也叫做部署过程。</li></ul><p><img src="http://pic.huangruimin.tech/20220812221703.png"></p><ul><li>少样本，甚至0样本，的学习，可以通过知识蒸馏来实现</li></ul><p><img src="http://pic.huangruimin.tech/20220812223901.png"></p><blockquote><p>就好比，我们从来没有见过大熊猫，但是天天有一个人来给我们讲解大熊猫是什么样，给我们讲大熊猫跟老虎有什么区别；当我们再见到大熊猫的时候，其实也知道这是一只大熊猫了。</p></blockquote><blockquote><p>右边，就是李宏毅老师的课程上面的图片</p></blockquote><ul><li><p>这篇论文还在语音识别领域进行了应用，发现蒸馏之后，效果是非常好的，可以把单个模型集成10倍来训练一个教师网络，也可以用教师网络来训练一个更小的学生网络；可以看到，徒弟和老师，是非常类似的；而且，学生会更加轻量化。</p></li><li><p>用softtarget去训练，而不是用hardlabel去训练的话，还有一个好处，就是可以防止过拟合。</p></li><li><p>如果出现了过拟合，那么就要进行早停，dropout，正则化，那么一系列防止过拟合的操作，得密切监视测试集中准确率的变化。</p></li><li><p>如果在测试集中，loss出现先增后降的现象，那么就要进行早停的操作。</p></li><li><p>但是使用soft target去训练就没有这个问题，准确率一直都是在增加的，直到收敛，不会出现先增后降的情况</p></li></ul><p><img src="http://pic.huangruimin.tech/20220812230339.png"></p><ul><li><p>迁移学习：把一个领域学习的东西，泛化到另一个领域，比如把猫狗域迁移到了医疗X光领域</p></li><li><p>知识蒸馏：把一个模型的知识，迁移到另一个模型上，通常是大模型迁移到小模型</p></li><li><p>迁移学习指的是领域之间的迁移，知识蒸馏指的是模型之间的蒸馏</p></li></ul><hr><ul><li>知识蒸馏背后的机理</li></ul><blockquote><blockquote><p>这也是研究的热点，也是适合水论文的一个点</p></blockquote></blockquote><p><img src="http://pic.huangruimin.tech/20220813201455.png"></p><p><img src="http://pic.huangruimin.tech/20220813201526.png"></p><p><img src="http://pic.huangruimin.tech/20220813201607.png"></p><p><img src="http://pic.huangruimin.tech/20220813201749.png"></p><blockquote><p>教师网络就会引导这个黄圈进行收敛，最终收敛到橙圈里面去</p></blockquote><blockquote><p>越靠近教师网路就越好，因为教师网络的性能更好</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813205659.png"></p><blockquote><p>对bert进行知识蒸馏，也达到了很好的效果</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813205746.png"></p><blockquote><p>为什么知识蒸馏是有效的？</p></blockquote><blockquote><p>知识蒸馏，就是学生网络在浩如烟海的书籍里面去翻书，但是教师网络指导一下，就不会漫无目的的翻书了</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813210257.png"></p><p><img src="http://pic.huangruimin.tech/20220813210446.png"></p><p><img src="http://pic.huangruimin.tech/20220813210459.png"></p><blockquote><p>Label Smooth是为了防止网络对某一个类别过度自信，也就是会导致网络对某一个类别的输出趋向于无穷大，为了防止这一现象的发生，通常就是给其它类别也赋予一个常数的概率</p></blockquote><h2 id="知识蒸馏现代的前沿研究方向"><a href="#知识蒸馏现代的前沿研究方向" class="headerlink" title="知识蒸馏现代的前沿研究方向"></a>知识蒸馏现代的前沿研究方向</h2><p><img src="http://pic.huangruimin.tech/20220813211030.png"></p><blockquote><p>每一个方向都是适合发很多论文的，适合自己来做毕业论文，或者适合自己做小论文的</p></blockquote><blockquote><p>可以和人工智能的所有领域发生化学反应</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813211238.png"></p><p><img src="http://pic.huangruimin.tech/20220813211943.png"></p><blockquote><p>这个图展示了有多个老师，也就是多模态的一种范式</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813212403.png"></p><p><img src="http://pic.huangruimin.tech/20220813212420.png"></p><blockquote><p>上面是3种蒸馏方法</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813212541.png"></p><p><img src="http://pic.huangruimin.tech/20220813212608.png"></p><blockquote><p>上面这个就是有一些中间层的蒸馏，也就是脑回路的传授</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813212713.png"></p><p><img src="http://pic.huangruimin.tech/20220813212727.png"></p><p><img src="http://pic.huangruimin.tech/20220813212738.png"></p><p><img src="http://pic.huangruimin.tech/20220813212833.png"></p><blockquote><p>下面这个博客，描述的是知识蒸馏的综述和历史发展</p></blockquote><p><img src="http://pic.huangruimin.tech/20220813212853.png"></p><h2 id="知识蒸馏的代码库"><a href="#知识蒸馏的代码库" class="headerlink" title="知识蒸馏的代码库"></a>知识蒸馏的代码库</h2><p><img src="http://pic.huangruimin.tech/20220813213120.png"><br><img src="http://pic.huangruimin.tech/20220813213108.png"><br><img src="http://pic.huangruimin.tech/20220813213519.png"><br><img src="http://pic.huangruimin.tech/20220813213554.png"><br><img src="http://pic.huangruimin.tech/20220813213608.png"></p><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><p><img src="http://pic.huangruimin.tech/20220813213622.png"></p><p><img src="http://pic.huangruimin.tech/20220813213648.png"></p><p><img src="http://pic.huangruimin.tech/20220813213707.png"></p><p><img src="http://pic.huangruimin.tech/20220813213732.png"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 模型轻量化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何为RPi交叉编译特定版本的支持v4l2的.ko以及.dtb</title>
      <link href="/2022/06/07/ru-he-wei-rpi-jiao-cha-bian-yi-te-ding-ban-ben-de-zhi-chi-v4l2-de.ko-yi-ji.dtb/"/>
      <url>/2022/06/07/ru-he-wei-rpi-jiao-cha-bian-yi-te-ding-ban-ben-de-zhi-chi-v4l2-de.ko-yi-ji.dtb/</url>
      
        <content type="html"><![CDATA[<h2 id="0-背景"><a href="#0-背景" class="headerlink" title="0 背景"></a>0 背景</h2><p>我在以前一个版本的64bit树莓派系统上，搭建了很多环境，现在，这个64bit的树莓派系统需要接入IMX385，目前只有v4l2这种方案(64bit的树莓派系统删除了一些库，树莓派原生相机也就不支持)。</p><p>但悲催的是，目前veye在Github提供的源码，只支持内核版本为5.10.92-v8+的树莓派，也就是只支持比较新版本的树莓派进行，然而我的树莓派系统内核版本为5.10.63-v8+，veye官方的源码也就不支持。</p><blockquote><p>解决方法一：更换内核版本为5.10.92-v8+的树莓派系统，但有点不太现实，我搭建了很多环境，特别是很多深度学习的推理环境，这样再折腾明显不现实。</p></blockquote><blockquote><p>解决方法二：交叉编译一个支持5.10.63-v8+的.ko以及.dtb，这个工作量会少很多，接下来就开始。</p></blockquote><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h2><blockquote><p> 开发环境准备，在虚拟机Ubuntu18.04中操作</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token function">bc</span> bison flex libssl-dev <span class="token function">make</span> libc6-dev libncurses5-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> crossbuild-essential-arm64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>确认自己的树莓派上的piOS版本，以下动作在树莓派上面完成</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-r</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223036.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/ko_dev<span class="token function">cp</span> /usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz ./<span class="token function">vi</span> changelog.Debian<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223131.png"></p><blockquote><p>从下面的连接下载源码</p></blockquote><p><a href="http://github.com/raspberrypi/linux/tags">Github源码链接</a></p><p><img src="http://pic.huangruimin.tech/20220320223241.png"></p><blockquote><p>将获取到的源码放虚拟机上</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222937.png"></p><h2 id="2-给源代码打补丁"><a href="#2-给源代码打补丁" class="headerlink" title="2 给源代码打补丁"></a>2 给源代码打补丁</h2><blockquote><p>以下动作在虚拟机中进行，打补丁</p></blockquote><blockquote><p>进入到第一个需要打补丁的地方</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./drivers/media/i2c/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>先删掉要被替换的文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Kconfig<span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>将以下文件copy到虚拟机中</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222018.png"></p><blockquote><p>继续拷贝文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222304.png"></p><blockquote><p>进入到第二个需要打补丁的地方</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./arch/arm/boot/dts/overlays<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除需要被替换的文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>拷贝文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222801.png"></p><blockquote><p>其中要去替换的Makefile中是多了以下内容</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">csimx307-dual-cm4.dtbo<span class="token punctuation">\</span>csimx307.dtbo<span class="token punctuation">\</span>cssc132-dual-cm4.dtbo<span class="token punctuation">\</span>cssc132.dtbo<span class="token punctuation">\</span>veye327-dual-cm4.dtbo<span class="token punctuation">\</span>veye327.dtbo<span class="token punctuation">\</span>veyecam2m-dual-cm4.dtbo<span class="token punctuation">\</span>veyecam2m.dtbo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-开始编译源码"><a href="#3-开始编译源码" class="headerlink" title="3 开始编译源码"></a>3 开始编译源码</h2><blockquote><p>首先是编译准备</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">KERNEL</span><span class="token operator">=</span>kernel8<span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- bcm2711_defconfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>然后是增加编译选项</p><blockquote><p>5.10版本kernel的路径是Device Drivers –&gt; Multimedia Support –&gt; Media ancillary drivers –&gt; Camera sensor devices</p></blockquote></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223827.png"></p><blockquote><p>接着是开始编译内核，模块，设备树</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- Image modules dtbs <span class="token parameter variable">-j4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-将编译结果导出"><a href="#4-将编译结果导出" class="headerlink" title="4 将编译结果导出"></a>4 将编译结果导出</h2><blockquote><p>导出模块文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./drivers/media/i2c/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以下为需要导出的文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224431.png"></p><blockquote><p>导出设备树二进制文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./arch/arm/boot/dts/overlays<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以下为需要导出的二进制文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224801.png"></p><blockquote><p>最终导出的驱动模块文件，设备树二进制文件，放在PC的下列文件夹中</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224908.png"></p><blockquote><p>需要将最终导出的文件放到树莓派的Veye V4L2源码的路径下</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Veye_Camera_V4L2/raspberrypi_v4l2-main/release/driver_bin/5.10.63-v8+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320225151.png"></p><blockquote><p>然后通过脚本在树莓派上安装驱动模块以及设备树二进制文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Veye_Camera_V4L2/raspberrypi_v4l2-main/release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ./install_driver.sh veyecam2m<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320225525.png"></p><blockquote><p>此时，重新开机还不能用，只有内核，以及驱动模块，还有设备树二进制文件都替换掉了，才有用，也就是下一步</p></blockquote><h2 id="5-将编译结果导出到TF卡"><a href="#5-将编译结果导出到TF卡" class="headerlink" title="5 将编译结果导出到TF卡"></a>5 将编译结果导出到TF卡</h2><blockquote><p>首先查看tf卡是否正常插入</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsblk <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>然后，建立挂载目录</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi<span class="token function">mkdir</span> mnt<span class="token function">mkdir</span> mnt/fat32<span class="token function">mkdir</span> mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>挂载文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi<span class="token function">sudo</span> <span class="token function">mount</span> /dev/sdb1 ./mnt/fat32<span class="token function">sudo</span> <span class="token function">mount</span> /dev/sdb2 ./mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>安装驱动模块到TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">env</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span> <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- <span class="token assign-left variable">INSTALL_MOD_PATH</span><span class="token operator">=</span><span class="token punctuation">..</span>/mnt/ext4 modules_install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>备份原版kernel</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/mnt/fat32<span class="token function">cp</span> ./kernel8.img ./kernel8_bak.img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>安装kernel，以及设备树二进制文件到TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/Image <span class="token punctuation">..</span>/mnt/fat32/kernel8.img <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/broadcom/*.dtb <span class="token punctuation">..</span>/mnt/fat32/ <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/overlays/*.dtb* <span class="token punctuation">..</span>/mnt/fat32/overlays/ <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/overlays/README <span class="token punctuation">..</span>/mnt/fat32/overlays/ <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>卸载挂载的TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">umount</span> <span class="token punctuation">..</span>/mnt/fat32<span class="token function">sudo</span> <span class="token function">umount</span> <span class="token punctuation">..</span>/mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-虚拟机，主机弹出TF卡，插入到树莓派"><a href="#6-虚拟机，主机弹出TF卡，插入到树莓派" class="headerlink" title="6 虚拟机，主机弹出TF卡，插入到树莓派"></a>6 虚拟机，主机弹出TF卡，插入到树莓派</h2><blockquote><p>到这一步，即完成IMX385的V4L2的移植了</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320230934.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320231014.png"></p><p><img src="http://pic.huangruimin.tech/20220320231101.png"></p><p><img src="http://pic.huangruimin.tech/20220320231048.png"></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_22_完整的模型验证套路</title>
      <link href="/2021/11/22/pytorch-22-wan-zheng-de-mo-xing-yan-zheng-tao-lu/"/>
      <url>/2021/11/22/pytorch-22-wan-zheng-de-mo-xing-yan-zheng-tao-lu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> torch <span class="token keyword">import</span> nnimage_path <span class="token operator">=</span> <span class="token string">"./images/deer.png"</span>image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>image_path<span class="token punctuation">)</span><span class="token comment"># 这步需要</span>image <span class="token operator">=</span> image<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">"RGB"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>transform <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                            torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>image <span class="token operator">=</span> transform<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token comment"># 采用GPU训练的东西，如果只是想单纯在CPU上面跑的话，一定要从GPU上面映射到CPU上面</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"./tudui_29_gpu.pth"</span><span class="token punctuation">,</span> map_location<span class="token operator">=</span>torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cpu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token comment"># 这步也需要，因为这一步通常需要batchsize</span>image <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 这一步可以节约一些性能</span><span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    output <span class="token operator">=</span> model<span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_21_利用GPU训练</title>
      <link href="/2021/11/21/pytorch-21-li-yong-gpu-xun-lian/"/>
      <url>/2021/11/21/pytorch-21-li-yong-gpu-xun-lian/</url>
      
        <content type="html"><![CDATA[<ul><li>利用GPU训练的三要素</li></ul><p><img src="http://pic.huangruimin.tech/20230830004034.png"></p><ul><li>train_gpu_1.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token comment"># from model import TuDui</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">import</span> time<span class="token comment"># 下面两个数据是没有cuda方法的</span>train_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>test_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># length 长度</span>train_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>test_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>train_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"测试数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 利用DataLoader来加载数据集</span>train_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>test_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token comment"># 创建网络模型</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># cuda position1:</span><span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tudui <span class="token operator">=</span> tudui<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 创建损失函数</span>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># cuda position2:</span><span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    loss_fn <span class="token operator">=</span> loss_fn<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 优化器,这是随机梯度下降</span><span class="token comment"># learning_rate = 0.01</span><span class="token comment"># 1e-2 = 1 * (10)^(-2) = 0.01</span>learning_rate <span class="token operator">=</span> <span class="token number">1e-2</span><span class="token comment"># 优化器里面也是没有cuda方法的</span>optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>tudui<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>learning_rate<span class="token punctuation">)</span><span class="token comment"># 设置训练网络的一些参数</span><span class="token comment"># 记录训练的次数</span>total_train_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 记录测试的次数</span>total_test_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 训练轮数</span>epoch <span class="token operator">=</span> <span class="token number">10</span><span class="token comment"># 添加tensorboard</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------第{}轮训练开始--------"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 训练开始</span>    <span class="token comment"># This has any effect only on certain modules. Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> train_data_loader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data        <span class="token comment"># cuda position3:</span>        <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>            targets <span class="token operator">=</span> targets<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>        outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>        loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>        <span class="token comment"># 梯度清零</span>        optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 反向传播</span>        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 卷积核参数调优</span>        optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>        total_train_step <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># 为了保证输出的信息不是太多而设置的</span>        <span class="token keyword">if</span> total_train_step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"近100次训练总耗时：{}秒"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end_time<span class="token operator">-</span>start_time<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练次数：{}， loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_train_step<span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"train_loss"</span><span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> total_train_step<span class="token punctuation">)</span>    <span class="token comment"># 测试开始</span>    <span class="token comment"># This has any effect only on certain modules.Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 对卷积核调优完成，还是对调优后的卷积核进行测试</span>    <span class="token comment"># 测试步骤开始,没有梯度，能够保证不对卷积核进行调优</span>    total_test_loss <span class="token operator">=</span> <span class="token number">0</span>    total_accuracy <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> test_data_loader<span class="token punctuation">:</span>            imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data            <span class="token comment"># cuda position4:</span>            <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>                targets <span class="token operator">=</span> targets<span class="token punctuation">.</span>cuda<span class="token punctuation">(</span><span class="token punctuation">)</span>            outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>            loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>            total_test_loss <span class="token operator">=</span> total_test_loss <span class="token operator">+</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>            accuracy <span class="token operator">=</span> <span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> targets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            total_accuracy <span class="token operator">=</span> total_accuracy <span class="token operator">+</span> accuracy    <span class="token comment"># 但分类问题一般使用正确率来衡量</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的Loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_test_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的正确率：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_loss"</span><span class="token punctuation">,</span> total_test_loss<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_accuracy"</span><span class="token punctuation">,</span> total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    total_test_step <span class="token operator">=</span> total_test_step <span class="token operator">+</span> <span class="token number">1</span>    <span class="token comment"># 这是方式1</span>    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>tudui<span class="token punctuation">,</span> <span class="token string">"tudui_{}.pth"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 这是方式2</span>    <span class="token comment"># torch.save(tudui.state_dict(), "tudui_dict_{}.pth".format(i))</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"模型{}已保存"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>train_gpu_2.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token comment"># from model import TuDui</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">import</span> time<span class="token comment"># 定义训练的设备</span>device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">"cuda:0"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token comment"># 下面两个数据是没有cuda方法的</span>train_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>test_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># length 长度</span>train_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>test_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>train_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"测试数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 利用DataLoader来加载数据集</span>train_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>test_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token comment"># 创建网络模型</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># cuda position1:</span><span class="token comment"># tudui = tudui.to(device)</span>tudui<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token comment"># 创建损失函数</span>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># cuda position2:</span><span class="token comment"># loss_fn = loss_fn.to(device)</span>loss_fn<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span><span class="token comment"># 优化器,这是随机梯度下降</span><span class="token comment"># learning_rate = 0.01</span><span class="token comment"># 1e-2 = 1 * (10)^(-2) = 0.01</span>learning_rate <span class="token operator">=</span> <span class="token number">1e-2</span><span class="token comment"># 优化器里面也是没有cuda方法的</span>optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>tudui<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>learning_rate<span class="token punctuation">)</span><span class="token comment"># 设置训练网络的一些参数</span><span class="token comment"># 记录训练的次数</span>total_train_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 记录测试的次数</span>total_test_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 训练轮数</span>epoch <span class="token operator">=</span> <span class="token number">10</span><span class="token comment"># 添加tensorboard</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------第{}轮训练开始--------"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 训练开始</span>    <span class="token comment"># This has any effect only on certain modules. Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> train_data_loader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data        <span class="token comment"># cuda position3:</span>        imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>        targets <span class="token operator">=</span> targets<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>        outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>        loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>        <span class="token comment"># 梯度清零</span>        optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 反向传播</span>        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 卷积核参数调优</span>        optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>        total_train_step <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># 为了保证输出的信息不是太多而设置的</span>        <span class="token keyword">if</span> total_train_step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"近100次训练总耗时：{}秒"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>end_time<span class="token operator">-</span>start_time<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练次数：{}， loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_train_step<span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"train_loss"</span><span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> total_train_step<span class="token punctuation">)</span>    <span class="token comment"># 测试开始</span>    <span class="token comment"># This has any effect only on certain modules.Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 对卷积核调优完成，还是对调优后的卷积核进行测试</span>    <span class="token comment"># 测试步骤开始,没有梯度，能够保证不对卷积核进行调优</span>    total_test_loss <span class="token operator">=</span> <span class="token number">0</span>    total_accuracy <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> test_data_loader<span class="token punctuation">:</span>            imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data            <span class="token comment"># cuda position4:</span>            imgs <span class="token operator">=</span> imgs<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>            targets <span class="token operator">=</span> targets<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>            outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>            loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>            total_test_loss <span class="token operator">=</span> total_test_loss <span class="token operator">+</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>            accuracy <span class="token operator">=</span> <span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> targets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            total_accuracy <span class="token operator">=</span> total_accuracy <span class="token operator">+</span> accuracy    <span class="token comment"># 但分类问题一般使用正确率来衡量</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的Loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_test_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的正确率：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_loss"</span><span class="token punctuation">,</span> total_test_loss<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_accuracy"</span><span class="token punctuation">,</span> total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    total_test_step <span class="token operator">=</span> total_test_step <span class="token operator">+</span> <span class="token number">1</span>    <span class="token comment"># 这是方式1</span>    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>tudui<span class="token punctuation">,</span> <span class="token string">"tudui_{}.pth"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 这是方式2</span>    <span class="token comment"># torch.save(tudui.state_dict(), "tudui_dict_{}.pth".format(i))</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"模型{}已保存"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_20_完整的模型训练套路</title>
      <link href="/2021/11/20/pytorch-20-wan-zheng-de-mo-xing-xun-lian-tao-lu/"/>
      <url>/2021/11/20/pytorch-20-wan-zheng-de-mo-xing-xun-lian-tao-lu/</url>
      
        <content type="html"><![CDATA[<ul><li>train.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">from</span> model <span class="token keyword">import</span> TuDui<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">import</span> timetrain_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                          download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>test_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># length 长度</span>train_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>test_data_size <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>test_data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>train_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"测试数据集的长度为：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 利用DataLoader来加载数据集</span>train_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>train_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span>test_data_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>test_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token comment"># 创建网络模型</span>tudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 创建损失函数</span>loss_fn <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 优化器,这是随机梯度下降</span><span class="token comment"># learning_rate = 0.01</span><span class="token comment"># 1e-2 = 1 * (10)^(-2) = 0.01</span>learning_rate <span class="token operator">=</span> <span class="token number">1e-2</span>optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>tudui<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>learning_rate<span class="token punctuation">)</span><span class="token comment"># 设置训练网络的一些参数</span><span class="token comment"># 记录训练的次数</span>total_train_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 记录测试的次数</span>total_test_step <span class="token operator">=</span> <span class="token number">0</span><span class="token comment"># 训练轮数</span>epoch <span class="token operator">=</span> <span class="token number">10</span><span class="token comment"># 添加tensorboard</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"--------第{}轮训练开始--------"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 训练开始</span>    <span class="token comment"># This has any effect only on certain modules. Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> train_data_loader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data        outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>        loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>        <span class="token comment"># 梯度清零</span>        optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 反向传播</span>        loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 卷积核参数调优</span>        optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>        total_train_step <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># 为了保证输出的信息不是太多而设置的</span>        <span class="token keyword">if</span> total_train_step <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>end_time <span class="token operator">-</span> start_time<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"训练次数：{}， loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_train_step<span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"train_loss"</span><span class="token punctuation">,</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> total_train_step<span class="token punctuation">)</span>    <span class="token comment"># 测试开始</span>    <span class="token comment"># This has any effect only on certain modules.Dropout, BatchNorm</span>    tudui<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 对卷积核调优完成，还是对调优后的卷积核进行测试</span>    <span class="token comment"># 测试步骤开始,没有梯度，能够保证不对卷积核进行调优</span>    total_test_loss <span class="token operator">=</span> <span class="token number">0</span>    total_accuracy <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> data <span class="token keyword">in</span> test_data_loader<span class="token punctuation">:</span>            imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data            outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>            loss <span class="token operator">=</span> loss_fn<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>            total_test_loss <span class="token operator">=</span> total_test_loss <span class="token operator">+</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>            accuracy <span class="token operator">=</span> <span class="token punctuation">(</span>outputs<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> targets<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            total_accuracy <span class="token operator">=</span> total_accuracy <span class="token operator">+</span> accuracy    <span class="token comment"># 但分类问题一般使用正确率来衡量</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的Loss：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_test_loss<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"整体测试集上的正确率：{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">)</span><span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_loss"</span><span class="token punctuation">,</span> total_test_loss<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"test_accuracy"</span><span class="token punctuation">,</span> total_accuracy<span class="token operator">/</span>test_data_size<span class="token punctuation">,</span> total_test_step<span class="token punctuation">)</span>    total_test_step <span class="token operator">=</span> total_test_step <span class="token operator">+</span> <span class="token number">1</span>    <span class="token comment"># 这是方式1</span>    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>tudui<span class="token punctuation">,</span> <span class="token string">"tudui_{}.pth"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 这是方式2</span>    <span class="token comment"># torch.save(tudui.state_dict(), "tudui_dict_{}.pth".format(i))</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"模型{}已保存"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>model.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 搭建神经网络</span><span class="token keyword">import</span> torch<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>model <span class="token operator">=</span> nn<span class="token punctuation">.</span>Sequential<span class="token punctuation">(</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> x<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    tudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    output <span class="token operator">=</span> tudui<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_19_网络模型的保存与读取</title>
      <link href="/2021/11/19/pytorch-19-wang-luo-mo-xing-de-bao-cun-yu-du-qu/"/>
      <url>/2021/11/19/pytorch-19-wang-luo-mo-xing-de-bao-cun-yu-du-qu/</url>
      
        <content type="html"><![CDATA[<ul><li>model_save.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token comment"># 这个是没有经过训练的</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nnvgg16 <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>vgg16<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># 保存方式一：保存模型结构+模型参数</span><span class="token comment"># 这里不仅保存了网络模型的一些结构，也保存了网络模型的一些参数</span>torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>vgg16<span class="token punctuation">,</span> <span class="token string">"vgg16_method1.pth"</span><span class="token punctuation">)</span><span class="token comment"># 保存方式二：模型参数(官方推荐)</span><span class="token comment"># 获取vgg16的状态，并把它保存为字典的形式</span>torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>vgg16<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"vgg16_method2.pth"</span><span class="token punctuation">)</span><span class="token comment"># 陷阱</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span>torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>tudui<span class="token punctuation">,</span> <span class="token string">"tudui_method1.pth"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>model_load.py</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token comment">#方式一，对应保存方式一</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token comment"># from model_save import TuDui</span>model <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"vgg16_method1.pth"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token comment">#方式二，加载模型</span>vgg16 <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>vgg16<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># 这里面获取的就是字典</span><span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"vgg16_method2.pth"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>vgg16<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"vgg16_method2.pth"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>vgg16<span class="token punctuation">)</span><span class="token comment"># 陷阱1</span><span class="token comment"># 这会的时候，还需要把这个模型的类给搬过来</span><span class="token comment"># 但是现在不用写这个了：tudui = TuDui()</span><span class="token comment"># 就是为了确保加载的这个网络模型就是你想要的网络模型</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> nn<span class="token punctuation">.</span>Conv2d<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xmodel <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">"tudui_method1.pth"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_18_现有模型的使用和修改</title>
      <link href="/2021/11/18/pytorch-18-xian-you-wang-luo-mo-xing-de-shi-yong-ji-xiu-gai/"/>
      <url>/2021/11/18/pytorch-18-xian-you-wang-luo-mo-xing-de-shi-yong-ji-xiu-gai/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchvision<span class="token comment"># train_data = torchvision.datasets.ImageNet("./dataset", split='train', download=True,</span><span class="token comment">#                                            transform=torchvision.transforms.ToTensor)</span><span class="token comment"># 这个使用的是随机参数</span><span class="token keyword">from</span> torch <span class="token keyword">import</span> nnvgg16_false <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>vgg16<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token comment"># 这个是加载了训练好的参数</span>vgg16_true <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>models<span class="token punctuation">.</span>vgg16<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'ok'</span><span class="token punctuation">)</span><span class="token comment"># 可以看出，这是分成了1000多个类的</span><span class="token comment"># print(vgg16_true)</span>train_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                                          transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">)</span><span class="token comment"># 方式一：把1000改成10</span><span class="token comment"># 方式二：再加一层，让输入是1000，输出是10</span><span class="token comment"># 通过现有的网络，改变他的结构，满足我们的要求</span><span class="token comment"># 很多框架都会把vgg16当成一个前置的网络</span><span class="token comment"># 添加的方式</span><span class="token comment"># vgg16_true.add_module('add_linear', nn.Linear(1000, 10))</span><span class="token comment"># vgg16_true.features.add_module('add_linear', nn.Linear(1000, 10))</span><span class="token comment"># vgg16_true.avgpool.add_module('add_linear', nn.Linear(1000, 10))</span>vgg16_true<span class="token punctuation">.</span>classifier<span class="token punctuation">.</span>add_module<span class="token punctuation">(</span><span class="token string">'add_linear'</span><span class="token punctuation">,</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>vgg16_true<span class="token punctuation">)</span><span class="token comment"># 修改的方式</span>vgg16_false<span class="token punctuation">.</span>classifier<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>vgg16_false<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_17_优化器</title>
      <link href="/2021/11/17/pytorch-17-you-hua-qi/"/>
      <url>/2021/11/17/pytorch-17-you-hua-qi/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Sequential<span class="token punctuation">,</span> Conv2d<span class="token punctuation">,</span> MaxPool2d<span class="token punctuation">,</span> Flatten<span class="token punctuation">,</span> Linear<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoaderdataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>dataloader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token operator">=</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> drop_last<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># self.conv1 = Conv2d(in_channels=3, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool1 = MaxPool2d(2)</span>        <span class="token comment"># self.conv2 = Conv2d(in_channels=32, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool2 = MaxPool2d(2)</span>        <span class="token comment"># self.conv3 = Conv2d(in_channels=32, out_channels=64, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool3 = MaxPool2d(2)</span>        <span class="token comment"># self.flatten = Flatten()</span>        <span class="token comment"># self.linear1 = Linear(1024, 64)</span>        <span class="token comment"># self.linear2 = Linear(64, 10)</span>        self<span class="token punctuation">.</span>model1 <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># x = self.conv1(x)</span>        <span class="token comment"># x = self.maxpool1(x)</span>        <span class="token comment"># x = self.conv2(x)</span>        <span class="token comment"># x = self.maxpool2(x)</span>        <span class="token comment"># x = self.conv3(x)</span>        <span class="token comment"># x = self.maxpool3(x)</span>        <span class="token comment"># x = self.flatten(x)</span>        <span class="token comment"># x = self.linear1(x)</span>        <span class="token comment"># x = self.linear2(x)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xloss <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>tudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 一般来说，学习速率就设置为0.01，太大，容易导致不稳定；太小，那么训练的速度就比较慢</span><span class="token comment"># 一开始，使用一个比较大的学习速率进行学习；后面就使用一个较小的学习速率进行学习</span>optim <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>tudui<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">)</span><span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    running_loss <span class="token operator">=</span> <span class="token number">0.0</span>    <span class="token comment"># 第一个作用：这就是神经网络的输出，和真实输出之间的一个误差</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> dataloader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data        outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>        <span class="token comment"># print("outputs:")</span>        <span class="token comment"># print(outputs)</span>        <span class="token comment"># print("targets:")</span>        <span class="token comment"># print(targets)</span>        result_loss <span class="token operator">=</span> loss<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>        <span class="token comment"># print(result_loss)</span>        <span class="token comment"># 梯度归零，上一次的梯度更新，对这一次来说，是没有用的</span>        optim<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 反向传播，求梯度</span>        result_loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># print("OK")</span>        <span class="token comment"># 对卷积核里面的参数进行调优</span>        optim<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># print(result_loss)</span>        running_loss <span class="token operator">+=</span> result_loss    <span class="token keyword">print</span><span class="token punctuation">(</span>running_loss<span class="token punctuation">)</span><span class="token comment"># 第二个作用，为每一个卷积核参数实行调整</span><span class="token comment"># 为每一个卷积核参数设置了一个梯度：grad</span><span class="token comment"># 每一个节点，每一个要更新的参数，都有一个梯度</span><span class="token comment"># 在优化的过程中，根据这个梯度，对参数进行一个优化，最终达到整个loss降低的目的</span><span class="token comment"># 比如：梯度下降法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_16_损失函数与反向传播2</title>
      <link href="/2021/11/16/pytorch-16-sun-shi-han-shu-yu-fan-xiang-chuan-bo-2/"/>
      <url>/2021/11/16/pytorch-16-sun-shi-han-shu-yu-fan-xiang-chuan-bo-2/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Sequential<span class="token punctuation">,</span> Conv2d<span class="token punctuation">,</span> MaxPool2d<span class="token punctuation">,</span> Flatten<span class="token punctuation">,</span> Linear<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoaderdataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                         download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>dataloader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token operator">=</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> drop_last<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># self.conv1 = Conv2d(in_channels=3, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool1 = MaxPool2d(2)</span>        <span class="token comment"># self.conv2 = Conv2d(in_channels=32, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool2 = MaxPool2d(2)</span>        <span class="token comment"># self.conv3 = Conv2d(in_channels=32, out_channels=64, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool3 = MaxPool2d(2)</span>        <span class="token comment"># self.flatten = Flatten()</span>        <span class="token comment"># self.linear1 = Linear(1024, 64)</span>        <span class="token comment"># self.linear2 = Linear(64, 10)</span>        self<span class="token punctuation">.</span>model1 <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># x = self.conv1(x)</span>        <span class="token comment"># x = self.maxpool1(x)</span>        <span class="token comment"># x = self.conv2(x)</span>        <span class="token comment"># x = self.maxpool2(x)</span>        <span class="token comment"># x = self.conv3(x)</span>        <span class="token comment"># x = self.maxpool3(x)</span>        <span class="token comment"># x = self.flatten(x)</span>        <span class="token comment"># x = self.linear1(x)</span>        <span class="token comment"># x = self.linear2(x)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xloss <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>tudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#第一个作用，这就是神经网络的输出，和真实输出之间的一个误差</span><span class="token keyword">for</span> data <span class="token keyword">in</span> dataloader<span class="token punctuation">:</span>    imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data    outputs <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>    <span class="token comment"># print("outputs:")</span>    <span class="token comment"># print(outputs)</span>    <span class="token comment"># print("targets:")</span>    <span class="token comment"># print(targets)</span>    result_loss <span class="token operator">=</span> loss<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result_loss<span class="token punctuation">)</span>    result_loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token comment"># 第二个作用，为每一个卷积核参数实行调整</span><span class="token comment"># 为每一个卷积核参数设置了一个梯度：grad</span><span class="token comment"># 每一个节点，每一个要更新的参数，都有一个梯度</span><span class="token comment"># 在优化的过程中，根据这个梯度，对参数进行一个优化，最终达到整个loss降低的目的</span><span class="token comment"># 比如：梯度下降法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_15_损失函数与反向传播1</title>
      <link href="/2021/11/15/pytorch-15-sun-shi-han-shu-yu-fan-xiang-chuan-bo-1/"/>
      <url>/2021/11/15/pytorch-15-sun-shi-han-shu-yu-fan-xiang-chuan-bo-1/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> math<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> L1Loss<span class="token keyword">from</span> torch <span class="token keyword">import</span> nninputs <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">)</span>targets <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">)</span>inputs <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>targets <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>targets<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># loss = L1Loss()</span>loss <span class="token operator">=</span> L1Loss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">'sum'</span><span class="token punctuation">)</span>result <span class="token operator">=</span> loss<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>loss_mse <span class="token operator">=</span> nn<span class="token punctuation">.</span>MSELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>result_mse <span class="token operator">=</span> loss_mse<span class="token punctuation">(</span>inputs<span class="token punctuation">,</span> targets<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result_mse<span class="token punctuation">)</span><span class="token comment"># 这个是用于目标分类的，3个目标的概率分别为：0.1,0.2,0.3，但是最终选择了0.2，也就是选择了1</span><span class="token comment"># 这是输入</span>x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>x <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 并且，此时y的batchSize就是1，不用去改变，这是输出</span>y <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>loss_cross <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>result_cross <span class="token operator">=</span> loss_cross<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result_cross<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.2</span> <span class="token operator">+</span> math<span class="token punctuation">.</span>log<span class="token punctuation">(</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token operator">+</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token operator">+</span>math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_14_nn_Sequential</title>
      <link href="/2021/11/14/pytorch-14-nn-sequential/"/>
      <url>/2021/11/14/pytorch-14-nn-sequential/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Conv2d<span class="token punctuation">,</span> MaxPool2d<span class="token punctuation">,</span> Linear<span class="token punctuation">,</span> Sequential<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>flatten <span class="token keyword">import</span> Flatten<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># self.conv1 = Conv2d(in_channels=3, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool1 = MaxPool2d(2)</span>        <span class="token comment"># self.conv2 = Conv2d(in_channels=32, out_channels=32, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool2 = MaxPool2d(2)</span>        <span class="token comment"># self.conv3 = Conv2d(in_channels=32, out_channels=64, kernel_size=5, stride=1, padding=2)</span>        <span class="token comment"># self.maxpool3 = MaxPool2d(2)</span>        <span class="token comment"># self.flatten = Flatten()</span>        <span class="token comment"># self.linear1 = Linear(1024, 64)</span>        <span class="token comment"># self.linear2 = Linear(64, 10)</span>        self<span class="token punctuation">.</span>model1 <span class="token operator">=</span> Sequential<span class="token punctuation">(</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            MaxPool2d<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            Linear<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># x = self.conv1(x)</span>        <span class="token comment"># x = self.maxpool1(x)</span>        <span class="token comment"># x = self.conv2(x)</span>        <span class="token comment"># x = self.maxpool2(x)</span>        <span class="token comment"># x = self.conv3(x)</span>        <span class="token comment"># x = self.maxpool3(x)</span>        <span class="token comment"># x = self.flatten(x)</span>        <span class="token comment"># x = self.linear1(x)</span>        <span class="token comment"># x = self.linear2(x)</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>model1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tudui<span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">)</span>output <span class="token operator">=</span> tudui<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_graph<span class="token punctuation">(</span>tudui<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_13_神经网络-线性层及其他层介绍</title>
      <link href="/2021/11/13/pytorch-13-shen-jing-wang-luo-xian-xing-ceng-ji-qi-ta-ceng-jie-shao/"/>
      <url>/2021/11/13/pytorch-13-shen-jing-wang-luo-xian-xing-ceng-ji-qi-ta-ceng-jie-shao/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Linear<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoaderdataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                       download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>dataloader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> drop_last<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>linear1 <span class="token operator">=</span> Linear<span class="token punctuation">(</span><span class="token number">196608</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>linear1<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> outputtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> data <span class="token keyword">in</span> dataloader<span class="token punctuation">:</span>    imgs<span class="token punctuation">,</span> target <span class="token operator">=</span> data    <span class="token keyword">print</span><span class="token punctuation">(</span>imgs<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token comment"># output = torch.reshape(imgs, (1, 1, 1, -1))</span>    output <span class="token operator">=</span> torch<span class="token punctuation">.</span>flatten<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    output <span class="token operator">=</span> tudui<span class="token punctuation">(</span>output<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_12_神经网络-非线性激活</title>
      <link href="/2021/11/12/pytorch-12-shen-jing-wang-luo-fei-xian-xing-ji-huo/"/>
      <url>/2021/11/12/pytorch-12-shen-jing-wang-luo-fei-xian-xing-ji-huo/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> ReLU<span class="token punctuation">,</span> Sigmoid<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                     <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span>dataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>dataloader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>relu1 <span class="token operator">=</span> ReLU<span class="token punctuation">(</span>inplace<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>sigmoid1 <span class="token operator">=</span> Sigmoid<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># output = self.relu1(input)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>sigmoid1<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> outputtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># output = tudui(input)</span><span class="token comment"># print(output)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>step <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> data <span class="token keyword">in</span> dataloader<span class="token punctuation">:</span>    imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> imgs<span class="token punctuation">,</span> global_step<span class="token operator">=</span>step<span class="token punctuation">)</span>    output <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">,</span> output<span class="token punctuation">,</span> global_step<span class="token operator">=</span>step<span class="token punctuation">)</span>    step <span class="token operator">=</span> step <span class="token operator">+</span> <span class="token number">1</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_11_神经网络-最大池化层</title>
      <link href="/2021/11/11/pytorch-11-shen-jing-wang-luo-zui-da-chi-hua-ceng/"/>
      <url>/2021/11/11/pytorch-11-shen-jing-wang-luo-zui-da-chi-hua-ceng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> MaxPool2d<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriterdataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>dataloader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token comment"># input = torch.tensor([[1, 2, 0, 3, 1],</span><span class="token comment">#                      [0, 1, 2, 3, 1],</span><span class="token comment">#                      [1, 2, 1, 0, 0],</span><span class="token comment">#                      [5, 2, 3, 1, 1],</span><span class="token comment">#                      [2, 1, 0, 1, 1]], dtype=torch.float32)</span><span class="token comment"># input = torch.reshape(input, (-1, 1, 5, 5))</span><span class="token comment"># print(input.shape)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>maxpool1 <span class="token operator">=</span> MaxPool2d<span class="token punctuation">(</span>kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> ceil_mode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>maxpool1<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> outputtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># output = tudui(input)</span><span class="token comment"># print(output)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>step <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> data <span class="token keyword">in</span> dataloader<span class="token punctuation">:</span>    imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> imgs<span class="token punctuation">,</span> step<span class="token punctuation">)</span>    output <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">,</span> output<span class="token punctuation">,</span> step<span class="token punctuation">)</span>    step <span class="token operator">=</span> step <span class="token operator">+</span> <span class="token number">1</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_10_神经网络-卷积层</title>
      <link href="/2021/11/10/pytorch-10-shen-jing-wang-luo-juan-ji-ceng/"/>
      <url>/2021/11/10/pytorch-10-shen-jing-wang-luo-juan-ji-ceng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token keyword">import</span> torch<span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">from</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">import</span> Conv2d<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriterdataset <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                       download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>dataLoader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TuDui<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>conv1 <span class="token operator">=</span> Conv2d<span class="token punctuation">(</span>in_channels<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> out_channels<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span> kernel_size<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        x <span class="token operator">=</span> self<span class="token punctuation">.</span>conv1<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">return</span> xtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tudui<span class="token punctuation">)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>step <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> data <span class="token keyword">in</span> dataLoader<span class="token punctuation">:</span>    imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data    output <span class="token operator">=</span> tudui<span class="token punctuation">(</span>imgs<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>imgs<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>    <span class="token comment"># torch.Size([64, 3, 32, 32])</span>    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">,</span> imgs<span class="token punctuation">,</span> step<span class="token punctuation">)</span>    <span class="token comment"># torch.Size([64, 6, 30, 30]) -&gt; [xxx, 3, 30, 30]</span>    output <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>output<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"output"</span><span class="token punctuation">,</span> output<span class="token punctuation">,</span> step<span class="token punctuation">)</span>    step <span class="token operator">=</span> step <span class="token operator">+</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_9_卷积基本操作</title>
      <link href="/2021/11/09/pytorch-9-juan-ji-ji-ben-cao-zuo/"/>
      <url>/2021/11/09/pytorch-9-juan-ji-ji-ben-cao-zuo/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> F<span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                      <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>kernel <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token builtin">input</span> <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>kernel <span class="token operator">=</span> torch<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span>kernel<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># print(input.shape)</span><span class="token comment"># print(kernel.shape)</span>output <span class="token operator">=</span> F<span class="token punctuation">.</span>conv2d<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>output2 <span class="token operator">=</span> F<span class="token punctuation">.</span>conv2d<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output2<span class="token punctuation">)</span>output3 <span class="token operator">=</span> F<span class="token punctuation">.</span>conv2d<span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">,</span> kernel<span class="token punctuation">,</span> stride<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> padding<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_8_神经网络的基本骨架-nn_Module的使用</title>
      <link href="/2021/11/08/pytorch-8-shen-jing-wang-luo-de-ji-ben-gu-jia-nn-module-de-shi-yong/"/>
      <url>/2021/11/08/pytorch-8-shen-jing-wang-luo-de-ji-ben-gu-jia-nn-module-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Any<span class="token keyword">import</span> torch<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">class</span> <span class="token class-name">TuDui</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        output <span class="token operator">=</span> <span class="token builtin">input</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">return</span> outputtudui <span class="token operator">=</span> TuDui<span class="token punctuation">(</span><span class="token punctuation">)</span>x <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span>output <span class="token operator">=</span> tudui<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_7_DataLoader的使用</title>
      <link href="/2021/11/07/pytorch-7-dataloader-de-shi-yong/"/>
      <url>/2021/11/07/pytorch-7-dataloader-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> DataLoader<span class="token comment">#准备的测试集数据</span><span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWritertest_data <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>test_loader <span class="token operator">=</span> DataLoader<span class="token punctuation">(</span>dataset<span class="token operator">=</span>test_data<span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> shuffle<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> num_workers<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> drop_last<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 测试数据集中第一张图片及target</span>img<span class="token punctuation">,</span> target <span class="token operator">=</span> test_data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span><span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    step <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> data <span class="token keyword">in</span> test_loader<span class="token punctuation">:</span>        imgs<span class="token punctuation">,</span> targets <span class="token operator">=</span> data        <span class="token comment"># print(imgs.shape)</span>        <span class="token comment"># print(targets)</span>        writer<span class="token punctuation">.</span>add_images<span class="token punctuation">(</span><span class="token string">"Epoch:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>epoch<span class="token punctuation">)</span><span class="token punctuation">,</span> imgs<span class="token punctuation">,</span> step<span class="token punctuation">)</span>        step <span class="token operator">=</span> step <span class="token operator">+</span> <span class="token number">1</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_6_torchvision中的数据集使用</title>
      <link href="/2021/11/06/pytorch-6-torchvision-zhong-de-shu-ju-ji-shi-yong/"/>
      <url>/2021/11/06/pytorch-6-torchvision-zhong-de-shu-ju-ji-shi-yong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torchvision<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriterdataset_transform <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>    torchvision<span class="token punctuation">.</span>transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>train_set <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>dataset_transform<span class="token punctuation">,</span> download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>test_set <span class="token operator">=</span> torchvision<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>CIFAR10<span class="token punctuation">(</span>root<span class="token operator">=</span><span class="token string">"./dataset"</span><span class="token punctuation">,</span> train<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> transform<span class="token operator">=</span>dataset_transform<span class="token punctuation">,</span> download<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># print(test_set[0])</span><span class="token comment"># print(test_set.classes)</span><span class="token comment">#</span><span class="token comment"># img, target = test_set[0]</span><span class="token comment"># print(img)</span><span class="token comment"># print(target)</span><span class="token comment"># print(test_set.classes[target])</span><span class="token comment"># img.show()</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img<span class="token punctuation">,</span> target <span class="token operator">=</span> test_set<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"test_set"</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> i<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_5_常见Transformers</title>
      <link href="/2021/11/05/pytorch-5-chang-jian-transformers/"/>
      <url>/2021/11/05/pytorch-5-chang-jian-transformers/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">from</span> torchvision <span class="token keyword">import</span> transformswriter <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"images/girls.png"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment"># ToTensor</span>trans_totensor <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>img_tensor <span class="token operator">=</span> trans_totensor<span class="token punctuation">(</span>img<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"ToTensor"</span><span class="token punctuation">,</span> img_tensor<span class="token punctuation">)</span><span class="token comment"># Normalize</span><span class="token comment"># ``input[channel] = (input[channel] - mean[channel]) / std[channel]``</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_tensor<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>trans_norm <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Normalize<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>img_norm <span class="token operator">=</span> trans_norm<span class="token punctuation">(</span>img_tensor<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_norm<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"Normalize"</span><span class="token punctuation">,</span> img_norm<span class="token punctuation">)</span>trans_norm <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Normalize<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>img_norm <span class="token operator">=</span> trans_norm<span class="token punctuation">(</span>img_tensor<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"Normalize_bad"</span><span class="token punctuation">,</span> img_norm<span class="token punctuation">)</span><span class="token comment"># Resize</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">.</span>size<span class="token punctuation">)</span>trans_resize <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># img PIL -&gt; resize -&gt; img_resize PIL</span>img_resize <span class="token operator">=</span> trans_resize<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_resize<span class="token punctuation">)</span><span class="token comment"># image_resize PIL -&gt; totensor -&gt; image_resize_tensor</span>img_resize <span class="token operator">=</span> trans_totensor<span class="token punctuation">(</span>img_resize<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_resize<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"Resize"</span><span class="token punctuation">,</span> img_resize<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># Compose resie -2</span>trans_resize_2 <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Resize<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token comment"># Compose相当于是一个方法的线性组合，列表里面放的是方法，前一个方法的输出会当成后一个方法的输入进行，是减少代码的一种方式</span>trans_compose <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>trans_resize_2<span class="token punctuation">,</span> trans_totensor<span class="token punctuation">]</span><span class="token punctuation">)</span>img_resize_2 <span class="token operator">=</span> trans_compose<span class="token punctuation">(</span>img<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"Resize"</span><span class="token punctuation">,</span> img_resize_2<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># RandomCrop</span>trans_random <span class="token operator">=</span> transforms<span class="token punctuation">.</span>RandomCrop<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">)</span>trans_compose_2 <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>trans_random<span class="token punctuation">,</span> trans_totensor<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img_crop <span class="token operator">=</span> trans_compose_2<span class="token punctuation">(</span>img<span class="token punctuation">)</span>    writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"RandomCrop"</span><span class="token punctuation">,</span> img_crop<span class="token punctuation">,</span> i<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_4_Transforms的使用</title>
      <link href="/2021/11/04/pytorch-4-transforms-de-shi-yong/"/>
      <url>/2021/11/04/pytorch-4-transforms-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">from</span> torchvision <span class="token keyword">import</span> transforms<span class="token comment"># python 的用法-&gt;Tensor数据类型</span><span class="token comment"># 通过transforms.ToTensor去解决两个问题</span><span class="token comment"># 2、为什么我们需要Tensor的数据类型</span><span class="token comment"># 绝对路径“H:\Python_Project\Pycharm_Anaconda\LearnPytorch\practice\train\ants_image\0013035.jpg”</span><span class="token comment"># 相对路径“practice/train/ants_image/0013035.jpg”</span>img_path <span class="token operator">=</span> <span class="token string">"practice/train/ants_image/0013035.jpg"</span>img_path_abs <span class="token operator">=</span> <span class="token string">r"H:\Python_Project\Pycharm_Anaconda\LearnPytorch\practice\train\ants_image\0013035.jpg"</span>img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">)</span>writer <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span><span class="token comment"># 1、transforms该如何使用(python)</span>tensor_trains <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 要使用的时候，直接把这个对象这样就行了：def __call__(self, pic):</span>tensor_img <span class="token operator">=</span> tensor_trains<span class="token punctuation">(</span>img<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"Tensor_img"</span><span class="token punctuation">,</span> tensor_img<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># print(type(tensor_img))</span><span class="token comment"># print(tensor_img)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_3_TensorBoard的使用</title>
      <link href="/2021/11/03/pytorch-3-tensorboard-de-shi-yong/"/>
      <url>/2021/11/03/pytorch-3-tensorboard-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<blockquote><p>运行TensorBoard的指令<br>tensorboard –logdir=logs</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>tensorboard <span class="token keyword">import</span> SummaryWriter<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npwriter <span class="token operator">=</span> SummaryWriter<span class="token punctuation">(</span><span class="token string">"logs"</span><span class="token punctuation">)</span>image_path <span class="token operator">=</span> <span class="token string">"practice/train/ants_image/5650366_e22b7e1065.jpg"</span>img_PIL <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>image_path<span class="token punctuation">)</span>img_array <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>img_PIL<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>img_array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img_array<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>add_image<span class="token punctuation">(</span><span class="token string">"ant"</span><span class="token punctuation">,</span> img_array<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> dataformats<span class="token operator">=</span><span class="token string">'HWC'</span><span class="token punctuation">)</span><span class="token comment"># y = 2x</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    writer<span class="token punctuation">.</span>add_scalar<span class="token punctuation">(</span><span class="token string">"y=2x"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token operator">*</span>i<span class="token punctuation">,</span> i<span class="token punctuation">)</span>writer<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_2_PyTorch加载数据&amp;Dataset类代码实战</title>
      <link href="/2021/11/02/pytorch-2-pytorch-jia-zai-shu-ju-dataset-lei-dai-ma-shi-zhan/"/>
      <url>/2021/11/02/pytorch-2-pytorch-jia-zai-shu-ju-dataset-lei-dai-ma-shi-zhan/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torch<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>data <span class="token keyword">import</span> Dataset<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">MyData</span><span class="token punctuation">(</span>Dataset<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> root_dir<span class="token punctuation">,</span> label_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>root_dir <span class="token operator">=</span> root_dir        self<span class="token punctuation">.</span>label_dir <span class="token operator">=</span> label_dir        self<span class="token punctuation">.</span>path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> label_dir<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>img_path <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">:</span>        img_name <span class="token operator">=</span> self<span class="token punctuation">.</span>img_path<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>        img_item_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>self<span class="token punctuation">.</span>path<span class="token punctuation">,</span> img_name<span class="token punctuation">)</span>        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>img_item_path<span class="token punctuation">)</span>        label <span class="token operator">=</span> self<span class="token punctuation">.</span>label_dir        <span class="token keyword">return</span> img<span class="token punctuation">,</span> label    <span class="token keyword">def</span> <span class="token function">__len__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>img_path<span class="token punctuation">)</span>root_dir <span class="token operator">=</span> <span class="token string">"hymenoptera_data/train"</span>ants_label_dir <span class="token operator">=</span> <span class="token string">"ants_image"</span>bees_label_dir <span class="token operator">=</span> <span class="token string">"bees_image"</span>ants_dataset <span class="token operator">=</span> MyData<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> ants_label_dir<span class="token punctuation">)</span>bees_dataset <span class="token operator">=</span> MyData<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> bees_label_dir<span class="token punctuation">)</span>train_dataset <span class="token operator">=</span> ants_dataset <span class="token operator">+</span> bees_dataset<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyTorch_1_开发环境验证</title>
      <link href="/2021/11/01/pytorch-1-kai-fa-huan-jing-yan-zheng/"/>
      <url>/2021/11/01/pytorch-1-kai-fa-huan-jing-yan-zheng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># This is a sample Python script.</span><span class="token comment"># Press Shift+F10 to execute it or replace it with your code.</span><span class="token comment"># Press Double Shift to search everywhere for classes, files, tool windows, actions, and settings.</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> torch<span class="token keyword">def</span> <span class="token function">print_hi</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Use a breakpoint in the code line below to debug your script.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Hi, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>  <span class="token comment"># Press Ctrl+F8 to toggle the breakpoint.</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>device_count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># Press the green button in the gutter to run the script.</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    print_hi<span class="token punctuation">(</span><span class="token string">'PyCharm'</span><span class="token punctuation">)</span><span class="token comment"># See PyCharm help at https://www.jetbrains.com/help/pycharm/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_22_根文件系统解析3</title>
      <link href="/2021/10/28/hi3516dv300-22-gen-wen-jian-xi-tong-jie-xi-3/"/>
      <url>/2021/10/28/hi3516dv300-22-gen-wen-jian-xi-tong-jie-xi-3/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.huangruimin.tech/20220215023521.png"></p><blockquote><blockquote><p>后面的，执行的文件，其实是在：/usr/script/hi3516dv300.sh</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215121900.png"></p><p><img src="https://pic.huangruimin.tech/20220215152914.png"></p><p><img src="https://pic.huangruimin.tech/20220215153849.png"></p><blockquote><blockquote><p>这个就是烧录的最后一个分区，比较大，但实际上，里面的内容很少，里面就一个配置文件，将来里面呢，或许还会放别的</p></blockquote></blockquote><blockquote><blockquote><p>这里，其实是挂载到了/userdata目录的，也就是把第四部分给挂载到/userdata目录了的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215154224.png"></p><blockquote><blockquote><p>然后，后面，主要是使用到了这个配置文件</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215160913.png"></p><blockquote><blockquote><p>这里，打开了LED</p></blockquote></blockquote><blockquote><blockquote><p>并且，这里使用到了himm这个工具，是海思平台自己提供的一个应用程序</p></blockquote></blockquote><blockquote><blockquote><p>himm：其中的mm就是memory management的意思，这个是操作内存的，其实就是操作一个地址，这个工具的作用，其实就是往这个地址里面，写这个数值，这就是让我们在应用层，可以去操作某一个物理地址里面的寄存器，这个地址，肯定对应的是一个寄存器，或者是对应了一个内存地址。</p></blockquote></blockquote><blockquote><blockquote><p>himm：在海思官方提供的一个工具</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215161502.png"></p><blockquote><blockquote><p>这个是往GPIO里面去写内容，也就是往GPIO里面去写GPIO号</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215161644.png"></p><blockquote><blockquote><p>写这个属性</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215161723.png"></p><blockquote><blockquote><p>去写那个值</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215161945.png"></p><blockquote><blockquote><p>这两个也一样，就是去写那些GPIO的数值的</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这几个也就是板子上面的LED灯</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215162125.png"></p><blockquote><blockquote><p>这个是用来设置继电器的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215162425.png"></p><blockquote><blockquote><p>用来设置静态IP用的，其中BOARD_IP等等是放在上一个文件里面的</p></blockquote></blockquote><blockquote><blockquote><p>ETH0_CFG：肯定也是在上一个文件里面定义的了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215163212.png"></p><blockquote><blockquote><p>这个，指的就是上一个文件，把这个文件，在我们当前目录展开了，那些配置值，就在这里面了，现在来看一下这个配置文件</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215163501.png"></p><p><img src="https://pic.huangruimin.tech/20220215163536.png"></p><p><img src="https://pic.huangruimin.tech/20220215164441.png"></p><blockquote><blockquote><p>那些网络配置项都在这里的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215164552.png"></p><blockquote><blockquote><p>所以，现在走的就是static这条分支</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215162608.png"></p><blockquote><blockquote><p>如果设置为dhcp，那就什么事情都没做</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215162751.png"></p><blockquote><blockquote><p>否则的话，就是直接进行配置</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>把配置项，单独出来，生成一个配置文件的做法</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>这种做法，就是通过更改配置文件，来达到动态地影响我们开发板的启动的这样一些过程，这样不需要修改代码，只需要修改配置文件就OK了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215165333.png"></p><p><img src="https://pic.huangruimin.tech/20220215165420.png"></p><p><img src="https://pic.huangruimin.tech/20220215165515.png"></p><p><img src="https://pic.huangruimin.tech/20220215165035.png"></p><blockquote><blockquote><p>是否启动TELNETD这样一个进程</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215194337.png"></p><p><img src="https://pic.huangruimin.tech/20220215194414.png"></p><p><img src="https://pic.huangruimin.tech/20220215194437.png"></p><blockquote><blockquote><p>密码输错一次，就不能用退格来清理了，就必须重新输入密码了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215223525.png"></p><blockquote><blockquote><p>这个：是用来配置SSH的，如果有SSHD_EN=yes的话，那就开启了ssh的配置</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215224129.png"></p><blockquote><blockquote><p>如果这个东西不等于yes，那么就把这个东西移动到backup目录下面去</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>移动到backup路径下，这不就不在了嘛，不在了，下一次开机的时候，这个文件就不能被执行了，所以ssh就被关掉了</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215224154.png"></p><blockquote><blockquote><p>如果等于了yes，那么就到了这边，如果文件不在，就从backup里面移到这边来，这个设计，目前是有点别扭的</p></blockquote></blockquote><blockquote><blockquote><p>但是，意思呢，就是说通过这个配置文件，就能决定到底有没有执行这个</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215231034.png"></p><blockquote><blockquote><p>这里，调用了一个/userdata/user-script.sh</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215231204.png"></p><p><img src="https://pic.huangruimin.tech/20220215231241.png"></p><p><img src="https://pic.huangruimin.tech/20220215231312.png"></p><blockquote><blockquote><p>在这里面，只是打印了一部分用户脚本的内容</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215231711.png"></p><blockquote><blockquote><p>从启动信息里面，就可以看到这个打印</p></blockquote></blockquote><blockquote><blockquote><p>假设咱们使用了这个开发板，使用了这个SDK，假设想要一些开机自动输出的东西，比如说自己写了一个额外的应用程序，我希望开机自动执行，那就可以把那些开机自动执行的东西，放在这个脚本里面，在启动过程中，就会自动调用我这个脚本</p></blockquote></blockquote><blockquote><blockquote><p>相当于给你钉了一个钉子，事先定义了一个回调，看你用不用</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215232425.png"></p><blockquote><p>挂载我们用户自己的分区</p></blockquote><blockquote><blockquote><p>首先是要弄清楚mmcblk0p5</p></blockquote></blockquote><blockquote><blockquote><p>这里是挂载mmcblk0p5到/user路径下</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这个可以在传参bootargs里面去修改它，也可以使用内核里面那个写死的分区，这里面确定的方法其实还挺多的</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>创建这个/user目录就是为了做挂载点的</p></blockquote></blockquote><blockquote><blockquote><p>如果emmc里面还剩余很大的内存，想继续使用怎么办呢？</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>其实，就是像上面这样，做成分区，去挂载就行了，这样一来，eMMC里面的所有空间，都是可以被你使用的</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>但是，先必须得把它做一个分区，生成一个文件，对应一个设备文件，然后，再把这个设备文件挂载到我们根文件系统底下的一个直接或间接的一个目录里面去(/user目录)，这样，才可以用起来。</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215233822.png"></p><blockquote><p>配置wifi</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215233917.png"></p><blockquote><blockquote><p>首先，是把这两个库，做了一个符号链接</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215234025.png"></p><blockquote><blockquote><p>然后，是安装了2个库，首先得把库部署到这里面</p></blockquote></blockquote><blockquote><blockquote><p>cfg80211.ko：这个是最基本的网络协议栈</p></blockquote></blockquote><blockquote><blockquote><p>8189fs.ko：这个应该是板卡厂商用的那个wifi芯片</p></blockquote></blockquote><blockquote><blockquote><p>这里是分开了，以前是直接添加到原来的内核源码里面去的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235026.png"></p><blockquote><blockquote><p>这是一个用作GPIO使用的，用来开启4G模块的电源</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235314.png"></p><blockquote><blockquote><p>sensor0和sensor1就是在这里配置的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235400.png"></p><blockquote><blockquote><p>这里是根据sensor来确定引脚，用himm工具写寄存器的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235533.png"></p><blockquote><blockquote><p>这里是对接屏幕所需要的ko文件</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235634.png"></p><blockquote><blockquote><p>这里是装载触摸屏对应的ko文件，还有LCD，以及TP</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215235844.png"></p><blockquote><blockquote><p>相关的宏定义在这里面</p></blockquote></blockquote><blockquote><blockquote><p>移植触摸屏驱动的时候，是在那里作更改，但却是在这里作引用的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216000101.png"></p><blockquote><blockquote><p>与Audio有关的东西</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216000236.png"></p><blockquote><blockquote><p>与Camera有关的东西</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216000418.png"></p><blockquote><blockquote><p>与LCD有关的东西</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216000616.png"></p><blockquote><blockquote><p>与Camera上面的LED有关的东西，关乎红外，可见光</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216000946.png"></p><p><img src="https://pic.huangruimin.tech/20220216001200.png"></p><p><img src="https://pic.huangruimin.tech/20220216001131.png"></p><p><img src="https://pic.huangruimin.tech/20220216001417.png"></p><p><img src="https://pic.huangruimin.tech/20220216001504.png"></p><p><img src="https://pic.huangruimin.tech/20220216001606.png"></p><blockquote><blockquote><p>以上便是相关的日志</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216001922.png"></p><blockquote><blockquote><p>这里还考虑到了开发板的大小</p></blockquote></blockquote><blockquote><blockquote><p>这个sample_vio，其实是在：/usr/sample/vio/路径下</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002204.png"></p><p><img src="https://pic.huangruimin.tech/20220216002234.png"></p><blockquote><blockquote><p>这个就是程序的位置</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002404.png"></p><blockquote><blockquote><p>这个是关闭LCD的背光</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002449.png"></p><blockquote><blockquote><p>这个是关闭Camera的LED</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002619.png"></p><blockquote><blockquote><p>vio的sample就在这个目录下</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002708.png"></p><blockquote><blockquote><p>在大小上是一致的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216002855.png"></p><p><img src="https://pic.huangruimin.tech/20220216002927.png"></p><blockquote><blockquote><p>在这个sample里面，其中就有vio</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216003007.png"></p><blockquote><blockquote><p>这个，就是最后生成的可执行文件</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220216003103.png"></p><p><img src="https://pic.huangruimin.tech/20220216003203.png"></p><blockquote><blockquote><p>在大小上，这两者也是一致的</p></blockquote></blockquote><blockquote><blockquote><p>svp，vgs：这个是做图像识别相关的</p></blockquote></blockquote><blockquote><blockquote><p>hifb：这个是负责图像到屏幕上显示的</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_21_根文件系统解析2</title>
      <link href="/2021/10/27/hi3516dv300-21-gen-wen-jian-xi-tong-jie-xi-2/"/>
      <url>/2021/10/27/hi3516dv300-21-gen-wen-jian-xi-tong-jie-xi-2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-rcS分析"><a href="#1-rcS分析" class="headerlink" title="1. rcS分析"></a>1. rcS分析</h2><h3 id="1-1源码分析"><a href="#1-1源码分析" class="headerlink" title="1.1源码分析"></a>1.1源码分析</h3><p><img src="https://pic.huangruimin.tech/20220215001025.png"></p><blockquote><blockquote><p>文件在这个地方</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215001101.png"></p><blockquote><blockquote><p>这个是常规的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215001122.png"></p><blockquote><blockquote><p>这个mount -a呢，就是挂载我们的init_table里面的所有的</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这也是常规的</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215001314.png"></p><blockquote><blockquote><p>然后，打印一个这个，这里，其实就是一个Hi罢了</p></blockquote></blockquote><blockquote><blockquote><p>一边分析这里，一边分析打印信息相关的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215001601.png"></p><blockquote><p>首先是在这里挂载上根文件系统的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215001724.png"></p><blockquote><p>这是把内核中没有用到的内存，给释放了</p></blockquote><blockquote><blockquote><p>就是在驱动中，下划线__init的那些，init之后用不到了，所以就会被释放了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215002435.png"></p><blockquote><p>下面，立马就打印出来了这个标志符</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215002530.png"></p><blockquote><p>这里导出来lib的路径，这里就是额外导出来了额外链接库，并且是用户的动态链接库，说明/usr/lib/里面放的就是用户的动态链接库</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215002819.png"></p><p><img src="https://pic.huangruimin.tech/20220215002944.png"></p><p><img src="https://pic.huangruimin.tech/20220215002848.png"></p><blockquote><p>上面验证了一下，里面全部都是各种动态链接库，大部分动态链接库都是海思自己提供的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003103.png"></p><blockquote><p>这里，其实是OpenSSL的相关的库文件</p></blockquote><blockquote><blockquote><p>这样，就可以通过OpenSSL做加密的通信</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215003302.png"></p><blockquote><p>在这里，做了一个循环</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003343.png"></p><blockquote><p>这里，是把/etc/init.d/S…相关的文件，作一个遍历</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003525.png"></p><blockquote><p>只要说它是存在的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003631.png"></p><blockquote><p>那就执行它</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003740.png"></p><blockquote><p>如果属于ssh进程，那就在后台执行它</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215003945.png"></p><blockquote><p>其实，也就是挨个，按顺序执行这里面的文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215004038.png"></p><p><img src="https://pic.huangruimin.tech/20220215004241.png"></p><p><img src="https://pic.huangruimin.tech/20220215004321.png"></p><blockquote><p>但是，在创建的时候，会报错，为什么呢？</p></blockquote><blockquote><blockquote><p>这是说这些节点已经存在了</p></blockquote></blockquote><blockquote><blockquote><p>一方面呢，可能在制作根文件系统的时候，我们已经静态地把这些文件创建起来了</p></blockquote></blockquote><blockquote><blockquote><p>另一方面呢，可能板子不是第一次启动的，因为第一次启动的时候，就已经创建了，后面再启动一次，又重新创建了一次</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215004826.png"></p><blockquote><p>其实，在这里面添加一次判断就行了，判断如果本来就有这个东西，那么，我就不会去再次创建了</p></blockquote><blockquote><p>或者，如果发现本来就有这个东西，那我就把这个东西先删掉，然后再去创建1次</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005127.png"></p><blockquote><p>报了这个错，其实是一点都不影响的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005230.png"></p><blockquote><p>现在，来分析一下udev文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005342.png"></p><blockquote><p>首先，是临时创建了一个设备文件/dev/pts</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005436.png"></p><blockquote><p>然后，把这个devpts，一个临时文件系统，挂载到/dev/pts路径下</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005614.png"></p><blockquote><p>然后，创建了udev</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005652.png"></p><blockquote><p>然后，在这里运行了udev的 –daemon</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005741.png"></p><blockquote><p>然后，把udev的trigger也运行起来了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005828.png"></p><blockquote><p>这些东西呢，其实就是使能了udev</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215005912.png"></p><blockquote><p>然后，来看这个文件：S41dhcpcd</p></blockquote><blockquote><blockquote><p>这个，尤其是在核心课程一期的小项目里面讲过</p></blockquote></blockquote><blockquote><blockquote><p>wifi那里呢，就需要移植这个dhcpcd，就要去执行动态内存分配</p></blockquote></blockquote><blockquote><blockquote><p>其实在Linux的busybox里面，大部分也包含了这个dhcpcd</p></blockquote></blockquote><blockquote><blockquote><p>这个dhcpcd呢，也可以作为我们Linux系统里面的一个D，也就是Daemon</p></blockquote></blockquote><blockquote><blockquote><p>这个Daemon运行起来后呢？我们就可以去使用它来做dhcp，也就是自动分配ip地址</p></blockquote></blockquote><blockquote><blockquote><p>这里其实就是处理和这个有关的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215010632.png"></p><blockquote><blockquote><p>这里最终呢，就是看start-stop-daemon，如果start了这个daemon，将来连接上Linux系统就能让我们来让它去dhcp去分配内存</p></blockquote></blockquote><blockquote><blockquote><p>这个dhcp一定要看清楚，谁是server，谁是client</p></blockquote></blockquote><blockquote><blockquote><p>server是给别人分配ip的，client呢，是去请求别人来给你分配ip的</p></blockquote></blockquote><blockquote><blockquote><p>所以，dhcp包含两部分，一部分是dhcpc，也就是clien；一部分是dhcpd，也就是daemon</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215011150.png"></p><blockquote><blockquote><p>下面，来看看S50sshd</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215011258.png"></p><blockquote><blockquote><p>也就是在我们这个系统里面，移植了sshd，也就是移植了ssh的daemon</p></blockquote></blockquote><blockquote><blockquote><p>所以，我们的这个开发板，它运行起来后，默认是把这个ssh的服务开启了的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215011620.png"></p><blockquote><blockquote><p>而且，还配置了用户名和密码</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>那么，我们就可以通过ssh去远程登录这个开发板</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215011810.png"></p><p><img src="https://pic.huangruimin.tech/20220215011938.png"></p><p><img src="https://pic.huangruimin.tech/20220215012048.png"></p><blockquote><blockquote><p>默认ip地址是：192.168.1.120<br>ssh的用户名是：root<br>ssh的密码是：rpdzkj</p></blockquote></blockquote><blockquote><blockquote><p>相当于我们现在的server的ip是192.168.1.120</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215012247.png"></p><p><img src="https://pic.huangruimin.tech/20220215013200.png"></p><p><img src="https://pic.huangruimin.tech/20220215013223.png"></p><p><img src="https://pic.huangruimin.tech/20220215013234.png"></p><p><img src="https://pic.huangruimin.tech/20220215013420.png"></p><blockquote><blockquote><p>ssh登录的时候，首先，双方通信都是加密的</p></blockquote></blockquote><blockquote><blockquote><p>它怎么加密的呢？就是访问的主机和客户端这边要保存一个密钥，然后这边双向通信的时候，自动通过密钥来进行加解密，按道理来说，在服务器与客户端这边，都要做密钥的，所以，相当于现在pc这端是没有密钥的。</p></blockquote></blockquote><blockquote><p>一次性接受：就是短时生成一个临时的密钥，来进行双反通信，双方通信完了之后呢，这个东西就不在了，下次连接的时候，还是会弹出这个</p></blockquote><blockquote><p>接受并保存：就是双方把生成的密钥保存到本地，下一次再连接的时候，就不会跳出这个东西了，直接就免密码了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215013621.png"></p><blockquote><p>来看下S80network这个文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220215013727.png"></p><blockquote><blockquote><p>这个就是和网络有关的，这里定义了很多变量，也都是和网络有关的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215013848.png"></p><p><img src="https://pic.huangruimin.tech/20220215014147.png"></p><blockquote><blockquote><p>/proc/cmdline其实就是通过bootargs传参的那个东西</p></blockquote></blockquote><blockquote><blockquote><p>现在就是在/proc/cmdline里面去遍历ipinfo，然后分别进行赋值</p></blockquote></blockquote><blockquote><blockquote><p>其实，是可以通过bootargs传参来指定ipaddr这些</p></blockquote></blockquote><blockquote><blockquote><p>但是，我们在bootargs传参的时候，根本就没有去管这些东西，也就是没有设置ipaddr，所以，在cat这些东西的时候，都是空的，ipinfo里面，一个东西都没有，所以，下面这个循环，一次都进不来，根本都没用。</p></blockquote></blockquote><blockquote><blockquote><p>所以，这些东西，在我们这里都没有设置</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215014959.png"></p><blockquote><blockquote><p>所以，如果ip地址是空的时候，直接就退出，根本就不会去管这些东西</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215015356.png"></p><blockquote><blockquote><p>在开机信息里面，dhcp是失败了，也就是说，也就是，在dhcp的时候，网络都还没有设置呢？</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>其实顺序是有点问题：按道理，应该先启动网络，然后再进行dhcp的</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215021455.png"></p><blockquote><blockquote><p>这是执行ssh用的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215021533.png"></p><blockquote><blockquote><p>network在执行后，什么都没有出现</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215021611.png"></p><blockquote><blockquote><p>没有出现这些打印信息</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215021657.png"></p><blockquote><blockquote><p>后面如果没有获取到ip地址，再执行dhcp</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>所以，要使得S80 network起作用，那就得在bootargs里面传参</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215021936.png"></p><blockquote><blockquote><p>现在，上面的步骤已经执行完成了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022045.png"></p><blockquote><blockquote><p>后面，执行的所有内容，都在：sample.sh里面了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022157.png"></p><blockquote><blockquote><p>现在，来分析sample.sh这个文件</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022300.png"></p><blockquote><blockquote><p>首先，创建了：/dev/shm这个文件夹(shared memory)</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022440.png"></p><blockquote><blockquote><p>然后，执行了这个脚本</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022513.png"></p><blockquote><blockquote><p>这里，居然还有一个调试脚本</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022655.png"></p><blockquote><blockquote><p>这里，打印结束信息</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215022802.png"></p><p><img src="https://pic.huangruimin.tech/20220215022843.png"></p><blockquote><blockquote><p>这个就是：sample.sh所打印的相关信息</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215023041.png"></p><blockquote><blockquote><p>到这以后，rcs就相当于执行完了</p></blockquote></blockquote><blockquote><blockquote><p>busy要执行rcs的那边呢？busybox还要执行其它的东西，其中就有登录程序</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215023230.png"></p><blockquote><blockquote><p>默认用root登录<br>默认就不用登录用户名和密码</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215023355.png"></p><blockquote><blockquote><p>其实，ttys000就是ttyAMA0，也就是串口0</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215023521.png"></p><blockquote><blockquote><p>后面的，执行的文件，其实是在：/usr/script/hi3516dv300.sh</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_20_根文件系统解析1</title>
      <link href="/2021/10/26/hi3516dv300-20-gen-wen-jian-xi-tong-jie-xi-1/"/>
      <url>/2021/10/26/hi3516dv300-20-gen-wen-jian-xi-tong-jie-xi-1/</url>
      
        <content type="html"><![CDATA[<h2 id="一、根文件系统来自哪里"><a href="#一、根文件系统来自哪里" class="headerlink" title="一、根文件系统来自哪里"></a>一、根文件系统来自哪里</h2><h3 id="1-1-包含哪些部分"><a href="#1-1-包含哪些部分" class="headerlink" title="1.1 包含哪些部分"></a>1.1 包含哪些部分</h3><blockquote><p>rootfs：这是根文件系统里面比较熟悉的</p></blockquote><blockquote><p>userdata：用户数据</p></blockquote><blockquote><blockquote><p>比如，安卓手机里面，就是有一些目录，专门存放我们的用户数据的</p></blockquote></blockquote><blockquote><p>编译完成之后，是在我们的这个result目录里面</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213220051.png"></p><p><img src="https://pic.huangruimin.tech/20220213220147.png"></p><blockquote><p>但是，result只是一个符号链接，指向的其实是/osdrv/pub</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213220251.png"></p><blockquote><p>真正的位置，其实是在/osdrv/pub里面的。这里面；其实就是我们构建完后，生成的。</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213220456.png"></p><blockquote><p>以上分别是：U-boot，Kernel，Rootfs</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213220555.png"></p><p><img src="https://pic.huangruimin.tech/20220213220717.png"></p><blockquote><p>在这个userdata里面，是有userdata的<br>在这里面，有很多的文件，是因为有很多的配置</p></blockquote><blockquote><p>userfs里面，最主要的就是那个user.conf文件，那个conf文件呢，可以被配置成各种参数</p></blockquote><blockquote><blockquote><p>sensor，lcd的不同造成了各种差异</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213222059.png"></p><blockquote><p>这里，这里提供一个，我们根据自己的需求，自己去配，也很简单</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214202128.png"></p><blockquote><p>如何生成的呢，其实，就是通过这个命令：make_ext4fs这个命令来生成</p></blockquote><h3 id="1-2-基本流程"><a href="#1-2-基本流程" class="headerlink" title="1.2 基本流程"></a>1.2 基本流程</h3><blockquote><p>如何构建根文件系统：</p></blockquote><blockquote><blockquote><ul><li>首先，建立这些目录，也就是常见的那些目录</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>然后，再把busybox移植进去</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>然后，再把那些必要的英文程序库给拷贝进去</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>再然后，生成一个文件夹格式的根文件系统</li></ul></blockquote></blockquote><blockquote><blockquote><ul><li>最后，再用make工具去make</li></ul></blockquote></blockquote><blockquote><blockquote><blockquote><p>这整个make流程是不变的</p></blockquote></blockquote></blockquote><h3 id="1-3-具体流程"><a href="#1-3-具体流程" class="headerlink" title="1.3 具体流程"></a>1.3 具体流程</h3><p><img src="https://pic.huangruimin.tech/20220214204310.png"></p><blockquote><p>一开始，空的根文件系统是上面这个</p></blockquote><blockquote><blockquote><p>这上面这个东西，一开始的时候，不是全空的，是有一些东西的，是在海思的SDK里面提供的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214204503.png"></p><blockquote><p>解压之后，就生成了这个文件夹</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214204551.png"></p><blockquote><p>生成了这个之后，把制作根文件系统过程中，需要拷贝的东西，都拷贝到这个文件夹中来</p></blockquote><h3 id="1-4-文件夹分析"><a href="#1-4-文件夹分析" class="headerlink" title="1.4 文件夹分析"></a>1.4 文件夹分析</h3><p><img src="https://pic.huangruimin.tech/20220214205228.png"></p><blockquote><p>现在，可以直接把这个文件夹拷贝到Windows中进行分析</p></blockquote><blockquote><blockquote><p>因为分析的过程很简单，所以，现在就不拷贝出来了</p></blockquote></blockquote><h3 id="1-5是怎样填充的呢"><a href="#1-5是怎样填充的呢" class="headerlink" title="1.5是怎样填充的呢"></a>1.5是怎样填充的呢</h3><blockquote><p>实际上，是有一些脚本，或者一些Makefile进行填充的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214205537.png"></p><blockquote><p>实际上，是在这个脚本里面可以看到的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214205616.png"></p><blockquote><p>现在，可以来分析这个make.sh这个脚本文件</p></blockquote><blockquote><blockquote><p>其实，这一套，在Makefile里面也是有的</p></blockquote></blockquote><blockquote><blockquote><p>但不管用的是那一套，套路是一样的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214212943.png"></p><p><img src="https://pic.huangruimin.tech/20220214213007.png"></p><blockquote><p>这里面，定义了很多目录，定义的这些目录都很重要，因为到时候哪个去哪里找，都是看这里的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214213248.png"></p><blockquote><p>这个是build u-boot</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214213339.png"></p><blockquote><p>这个是build kernel</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214213424.png"></p><blockquote><p>这个是用来编译：busy box的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214213609.png"></p><blockquote><p>如果没有busybox，也没有busybox_dir，那么，就创建一个文件指向这个busybox_dir，也就是用了符号链接</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214213726.png"></p><blockquote><p>如果还没有创建成功的话，就返回错误</p></blockquote><blockquote><blockquote><p>如果成功的话， 就创建了这个符号链接了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214213850.png"></p><blockquote><p>如果有.config的话，那就直接用了</p><blockquote><p>如果没有.config的话，copy我们的busybox中的.config到到。config</p></blockquote></blockquote><blockquote><blockquote><p>这就是那个什么的Make default_config</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214214157.png"></p><blockquote><p>打印出CPU的核心数</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214239.png"></p><blockquote><p>然后，这里，就开始执行make了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214327.png"></p><blockquote><p>然后再进行make</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214348.png"></p><blockquote><p>然后，进行make install</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214425.png"></p><blockquote><p>然后，再把install的内容给copy到这里</p></blockquote><blockquote><blockquote><p>就是在这一步，把busybox给填充进去了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214214612.png"></p><blockquote><p>否则，编译生成busybox失败</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214649.png"></p><blockquote><p>然后，这一步，就是开始实际制作rootfs了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214214842.png"></p><p><img src="https://pic.huangruimin.tech/20220214215209.png"></p><blockquote><p>这个osdrv/pub，其实就是我们的这个目录</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214215234.png"></p><blockquote><p>其实也就是result目录</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214215444.png"></p><blockquote><p>如果不存在rootfs，那就先解压开</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214215520.png"></p><blockquote><p>否则就提示没有找到，在解压开之后，就进入到linux的那个sample目录下</p></blockquote><blockquote><blockquote><p>这个A7_LINUX_DIR，其实就是这个：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214224908.png"></p><blockquote><blockquote><p>这个smp其实就是多核的意思</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214215639.png"></p><blockquote><p>现在开始往rootfs里面添加东西了，现在来查看一下cp2rootfs.sh</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214225142.png"></p><p><img src="https://pic.huangruimin.tech/20220214225232.png"></p><p><img src="https://pic.huangruimin.tech/20220214225338.png"></p><blockquote><blockquote><p>这个FS_CUSTOM就是这个目录：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214225431.png"></p><blockquote><blockquote><p>这个就是我们要制作的根文件夹形式的文件系统的根目录</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214225613.png"></p><blockquote><blockquote><p>然后，这个目录里面呢，就有一个usr</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214225717.png"></p><blockquote><p>这里呢，是copy到usr/sample里面来</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214225745.png"></p><blockquote><p>所以呢，就来看一下这里的sample：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214225831.png"></p><blockquote><p>这里面呢，就有sample</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214230036.png"></p><blockquote><p>最终在开发板上面运行的，也是这样的，现在来看一下开发板这边：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214230103.png"></p><blockquote><p>最终的执行程序，就是这个vio</p></blockquote><blockquote><blockquote><p>这个vio就是我们双sensor采集，在屏幕上来显示的那个，这个程序呢，其实对应的就是这个vio</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214230239.png"></p><blockquote><p>就是在我们copy到rootfs的时候哦，copy进来的</p></blockquote><blockquote><blockquote><p>这里面，其实copy了很多个sample</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214230433.png"></p><blockquote><p>这里面，也copy了一个usr script</p></blockquote><blockquote><blockquote><p>这些脚本是干什么的呢？其实是可以在这边看一下的：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214230600.png"></p><blockquote><p>这里面的一些脚本，其实就是测试脚本</p></blockquote><blockquote><blockquote><p>这些脚本也要部署到开发板上，如果不部署这些脚本，怎么测试呢？</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214230823.png"></p><blockquote><p>然后，创建了2个空文件夹，这两个空文件夹创建后，用来干嘛的呢？</p></blockquote><blockquote><blockquote><p>userdata这个目录创建来是用来在我们后面挂载我们的user_fs的</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>也就是说：最终生成的user_data，烧录的时候，烧录的最后的那个分区，最后，就会被挂载到userdata这个文件夹里面去，所以，在这里创建这个文件夹就是为了制造它的挂载点</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>usr这个目录创建来是为了做什么呢？这个就是用户用来放我们自己的一些东西的，这个也就是用户的目录</p></blockquote></blockquote><blockquote><blockquote><p>这样做也就是为了看起来比较正式</p></blockquote></blockquote><blockquote><blockquote><p>也是为了将来放数据的时候，比较正规</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214234935.png"></p><blockquote><p>这个就是用户的目录里面有一个回收站，这个可以理解为，就是用户的桌面</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214215709.png"></p><blockquote><p>这是与共享设备有关的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214235121.png"></p><blockquote><p>这个就是为了进入到RESULT_DIR，然后执行打包命令，打包制作了一个ext4文件，指定了大小为200M，但是实际没有200M</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214235418.png"></p><blockquote><p>然后，这个就弄完了，开始制作自己的userdata了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220214235509.png"></p><blockquote><p>userdata其实就是刚刚看到的那个userdata文件直接制作</p></blockquote><blockquote><blockquote><p>实际上，制作文件系统的流程还是比较简单的，就是这样的一些流程而已</p></blockquote></blockquote><blockquote><blockquote><p>知道文件从哪里来的，这样就OK了</p></blockquote></blockquote><blockquote><blockquote><p>但是，这里不应当还有好多的东西都要被复制的吗？</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220214235915.png"></p><blockquote><blockquote><p>比如说usr目录下，还有好多的.ko文件，Qt文件，是没有被复制的，应该也是在其他什么地方被复制的</p></blockquote></blockquote><blockquote><blockquote><p>buildroot，makefile，shell脚本，等等都可以进行制作的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220215000640.png"></p><blockquote><blockquote><p>Linux里面的执行从：/etc/init.d这个地方的rcS开始的</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>但是，这个是谁决定的呢？这个是busybox决定的；因为busybox是我们的任务1</p></blockquote></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_19_触摸屏测试及驱动详解2</title>
      <link href="/2021/10/25/hi3516dv300-19-hong-mo-ping-ce-shi-ji-qu-dong-xiang-jie-2/"/>
      <url>/2021/10/25/hi3516dv300-19-hong-mo-ping-ce-shi-ji-qu-dong-xiang-jie-2/</url>
      
        <content type="html"><![CDATA[<h2 id="一、移植并测试触摸屏驱动"><a href="#一、移植并测试触摸屏驱动" class="headerlink" title="一、移植并测试触摸屏驱动"></a>一、移植并测试触摸屏驱动</h2><h3 id="1-1-下载正确的触摸屏驱动文件并替换掉原来不对的"><a href="#1-1-下载正确的触摸屏驱动文件并替换掉原来不对的" class="headerlink" title="1.1 下载正确的触摸屏驱动文件并替换掉原来不对的"></a>1.1 下载正确的触摸屏驱动文件并替换掉原来不对的</h3><h4 id="1-1-1-电容触摸屏的驱动在下面这个位置："><a href="#1-1-1-电容触摸屏的驱动在下面这个位置：" class="headerlink" title="1.1.1 电容触摸屏的驱动在下面这个位置："></a>1.1.1 电容触摸屏的驱动在下面这个位置：</h4><p><img src="https://pic.huangruimin.tech/20220213130247.png"></p><p><img src="https://pic.huangruimin.tech/20220213130313.png"></p><p><img src="https://pic.huangruimin.tech/20220213130349.png"></p><blockquote><p>这个驱动到底是内核自带的，还是之前的板卡商，在移植的时候放进去的，对我们来说，不用去关心</p></blockquote><blockquote><p>总之，我们拿到的源码，是有的，代码就在这里面呢</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213142343.png"></p><blockquote><p>这个文件，有相应的.o文件，是被编译了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213142505.png"></p><blockquote><p>这个文件，没有.o文件，所以，没有被编译</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213142613.png"></p><p><img src="https://pic.huangruimin.tech/20220213142652.png"></p><blockquote><p>这个，本来是用make menuconfig来进行配置的，但是这里却被直接注释了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213142757.png"></p><blockquote><p>并且，这里只能被编译成为一个module了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213142912.png"></p><blockquote><p>如果想编译到zImage里面去，那么这里就要修改成：obj-y</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213143057.png"></p><blockquote><p>其实只有这两个文件是有用到的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213143152.png"></p><blockquote><p>这个pad.c是没有用到的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213143244.png"></p><blockquote><p>但问题是这个pad.h是有被用到的</p></blockquote><blockquote><blockquote><p>其实，大部分东西，都是在这个pad.h里面的</p></blockquote></blockquote><blockquote><blockquote><p>现在输出的情况不对，就是因为pad.h里面，有些变量的定义是不对的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213143431.png"></p><h4 id="1-1-2-分析不对的源码"><a href="#1-1-2-分析不对的源码" class="headerlink" title="1.1.2 分析不对的源码"></a>1.1.2 分析不对的源码</h4><p><img src="https://pic.huangruimin.tech/20220213143609.png"></p><blockquote><p>首先，是定义了width与height，也就是定义了分辨率，7inch里面，一般最高分辨率就是1280 X 800</p></blockquote><blockquote><p>这个是不对的，因为咱们的屏幕是1024 X 600的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213143945.png"></p><blockquote><p>这是一个数组，用const修饰，是一个不可更改的常量，这里面写了很多寄存器的配置值</p></blockquote><blockquote><p>这个寄存器非常大，并且有非常多的数值</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213144225.png"></p><blockquote><p>这里面还有很多固件(的标志)，并且，这里面也全是key和value的，并且是成对的</p></blockquote><blockquote><p>前面的key应该是寄存器的地址，后面的value，应该是寄存器的值</p></blockquote><blockquote><p>这些是电容触摸屏里面的那些寄存器</p></blockquote><blockquote><p>每一款电容触摸屏，其实它里面是有自己的处理器的，它那个处理器，就负责处理电容触摸屏内部的寄存器</p></blockquote><blockquote><p>每一个电容触摸屏都有多达几百个寄存器，这里面的寄存器，都是用来配置一些特性的，比如配置屏幕的分辨率，配置电容感应的灵敏度这些的。</p></blockquote><blockquote><p>因为按到的点，中心和边缘的力度，还是有区别的，所以做电容触摸屏这一行，也还是有一点技术含量在里面的。</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213150437.png"></p><blockquote><p>我们现在，就是这些寄存器里面，配的寄存器的值不对</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213150550.png"></p><blockquote><p>我们现在要修复这个驱动的话，要找到一个正确的.h文件，把这个错误的.h文件给替换了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213150728.png"></p><blockquote><p>先把错误的文件，改个名字</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213150840.png"></p><blockquote><p>找到正确的文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213150902.png"></p><p><img src="https://pic.huangruimin.tech/20220213150931.png"></p><p><img src="https://pic.huangruimin.tech/20220213151011.png"></p><blockquote><blockquote><p>这个是根据我们的屏幕给配出来的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213151114.png"></p><p><img src="https://pic.huangruimin.tech/20220213151046.png"></p><p><img src="https://pic.huangruimin.tech/20220213151156.png"></p><p><img src="https://pic.huangruimin.tech/20220213151209.png"></p><p><img src="https://pic.huangruimin.tech/20220213151233.png"></p><blockquote><p>这个差异，是来自于触摸屏的差异，因为：</p></blockquote><blockquote><blockquote><p>一个触摸屏芯片，是不止配置于，一款触摸屏的；这个芯片能够适配于很多屏幕，有些屏幕大，有些屏幕小，有些分辨率大，有些分辨率小。</p></blockquote></blockquote><blockquote><blockquote><p>触摸屏芯片本身的配置，要和我们的屏幕适配，就要去修改寄存器；这个适配的过程，要懂触摸屏芯片的寄存器怎么写；而且，有时候，还要去调一些效果。</p></blockquote></blockquote><blockquote><blockquote><p>并且，这个过程，有用到专门的人，用专门的软件去调，这个一般是触摸屏芯片厂商去调的</p></blockquote></blockquote><blockquote><blockquote><p>这个要找FAE，以及代理商，帮忙调的，自己没必要去学怎么调试，这种技能只能用于调试这个厂商的</p></blockquote></blockquote><blockquote><blockquote><p>如果公司很小，人家的FAE不理你的话，没有实力调这个，那就不要调这个，直接买过来就行了，如果非要自己调试，那么就是自讨苦吃。</p></blockquote></blockquote><h4 id="1-1-3-把正确的源码复制到Ubuntu"><a href="#1-1-3-把正确的源码复制到Ubuntu" class="headerlink" title="1.1.3 把正确的源码复制到Ubuntu"></a>1.1.3 把正确的源码复制到Ubuntu</h4><ul><li>先把正确的给复制过来</li></ul><p><img src="https://pic.huangruimin.tech/20220213153256.png"></p><blockquote><blockquote><p>这个就是我们的正确的</p></blockquote></blockquote><ul><li>然后，编译生成模块</li></ul><p><img src="https://pic.huangruimin.tech/20220213153659.png"></p><blockquote><blockquote><p>在这里编译生成驱动模块</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213153812.png"></p><blockquote><blockquote><p>可以看到，已经被编译了</p></blockquote></blockquote><blockquote><blockquote><p>这里会把所有的配置为-m的那些模块，全部重新编译一遍</p></blockquote></blockquote><blockquote><blockquote><p>Linux里面，如果我们把它集成到内核里面，还不知道能不能编译单个模块，这个是不行的</p></blockquote></blockquote><blockquote><blockquote><p>但是在Android里面，如果想编译单个模块，可以只编译这个模块</p></blockquote></blockquote><blockquote><blockquote><p>如果我们把驱动放在了外面，那我们可以直接在驱动那里去make module</p></blockquote></blockquote><blockquote><blockquote><p>但是，现在我们把驱动是集成到内核里面了，所以，就要编译所有的</p></blockquote></blockquote><ul><li>编译生成了.ko文件</li></ul><p><img src="https://pic.huangruimin.tech/20220213154511.png"></p><blockquote><p>这个文件，也就是我们所需要的</p></blockquote><ul><li>然后，把这个ko文件拷贝到板子上面去</li></ul><p><img src="https://pic.huangruimin.tech/20220213154702.png"></p><blockquote><p>其中，这个rootfs文件夹，已经被nfs共享出去了</p></blockquote><ul><li>在板子上面找到这个.ko文件</li></ul><p><img src="https://pic.huangruimin.tech/20220213154815.png"></p><p><img src="https://pic.huangruimin.tech/20220213154949.png"></p><blockquote><p>如上图所示</p></blockquote><ul><li>先进到.ko文件夹</li></ul><p><img src="https://pic.huangruimin.tech/20220213155034.png"></p><blockquote><p>如上图所示</p></blockquote><ul><li>先把老版本的.ko文件mv掉</li></ul><p><img src="https://pic.huangruimin.tech/20220213155326.png"></p><p><img src="https://pic.huangruimin.tech/20220213155403.png"></p><blockquote><p>如上图所示</p></blockquote><ul><li>把板子上的.ko文件复制到当前的文件夹</li></ul><p><img src="https://pic.huangruimin.tech/20220213155427.png"></p><p><img src="https://pic.huangruimin.tech/20220213155445.png"></p><blockquote><p>这个ko文件就是我们刚才编译成功的，正确的ko文件了</p></blockquote><blockquote><p>到这一步，部署就完成了</p></blockquote><ul><li>卸载老驱动</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">remod gslx680.ko<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>装载新的驱动</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">insmod gslx680.ko<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>如上命令所示</p></blockquote><ul><li>或者简单粗暴地直接重启，重启的话，也会insmod这个驱动的</li></ul><p><img src="https://pic.huangruimin.tech/20220213155750.png"></p><blockquote><p>重启，也就会重新加载驱动了</p></blockquote><ul><li>先看看/dev/input/里面有没有设备</li></ul><p><img src="https://pic.huangruimin.tech/20220213160007.png"></p><ul><li>重新挂载nfs文件系统</li></ul><p><img src="https://pic.huangruimin.tech/20220213160047.png"></p><ul><li>进入到应用程序文件夹下，并执行应用程序</li></ul><p><img src="https://pic.huangruimin.tech/20220213160119.png"></p><ul><li>查看效果</li></ul><p><img src="https://pic.huangruimin.tech/20220213160232.png"></p><blockquote><p>可以看到，效果是对的了</p></blockquote><blockquote><blockquote><p>但是，调试触摸屏芯片寄存器的过程，应当是触摸屏芯片厂商自己专门做的，而不是我们自己去做</p></blockquote></blockquote><h2 id="二、触摸屏驱动源码简单分析"><a href="#二、触摸屏驱动源码简单分析" class="headerlink" title="二、触摸屏驱动源码简单分析"></a>二、触摸屏驱动源码简单分析</h2><h3 id="2-1-找到并确认实际工作的源码"><a href="#2-1-找到并确认实际工作的源码" class="headerlink" title="2.1 找到并确认实际工作的源码"></a>2.1 找到并确认实际工作的源码</h3><ul><li>先找到源码在哪</li></ul><p><img src="https://pic.huangruimin.tech/20220213193755.png"></p><blockquote><p>pad_touch_back.c</p></blockquote><blockquote><p>pad.c：这个没有被调用</p></blockquote><blockquote><p>touch_id：只包含少量内容</p></blockquote><ul><li>分析源码</li></ul><p><img src="https://pic.huangruimin.tech/20220213194121.png"></p><blockquote><p>源码中，最核心的两个源码，就是在这里的</p></blockquote><ul><li>来分析：gsl_ts_init</li></ul><p><img src="https://pic.huangruimin.tech/20220213194601.png"></p><ul><li>有两个分支</li></ul><p><img src="https://pic.huangruimin.tech/20220213194939.png"></p><blockquote><p>一个是Linux里面的驱动</p></blockquote><blockquote><p>一个是Android里面的驱动</p></blockquote><blockquote><p>这两个驱动是不太一样的</p></blockquote><blockquote><p>区别就是：Linux里面只支持单点，Android里面呢支持多点，但是这个芯片本身是支持多点的</p></blockquote><blockquote><p>Android里面，大部分时候，都是支持多点触控的</p></blockquote><blockquote><p>Linux里面，大部分时候，都会 使用Qtcreator这样一些GUI，这个时候就不需要多点触控</p></blockquote><blockquote><p>大部分驱动，也都是一样的</p></blockquote><ul><li>gsl_ts_init函数分析</li></ul><p><img src="https://pic.huangruimin.tech/20220213195342.png"></p><blockquote><p>在这个函数里面，做的事情主要是这个</p></blockquote><ul><li>分析</li></ul><blockquote><p>I2C Device呢，一个触摸屏驱动对我们主机来说，其实就是I2C的从设备</p></blockquote><blockquote><p>所以：这里就是一个I2C Device，一个I2C Driver</p></blockquote><blockquote><p>那么I2C Device在什么地方添加了呢？就是在设备树解析的那个地方添加了，给你做了I2C add device了</p></blockquote><blockquote><p>然后，在这个地方执行了i2c_add_driver了</p></blockquote><blockquote><p>再然后，driver和device在I2C总线上一match</p></blockquote><blockquote><p>match之后呢，就probe了</p></blockquote><blockquote><p>probe之后，就执行我们的驱动了</p></blockquote><blockquote><p>所以，下一步，其实就到了驱动这里了</p></blockquote><ul><li>找到驱动</li></ul><p><img src="https://pic.huangruimin.tech/20220213200237.png"></p><p><img src="https://pic.huangruimin.tech/20220213200339.png"></p><blockquote><p>进入到驱动这里</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213205032.png"></p><p><img src="https://pic.huangruimin.tech/20220213205105.png"></p><blockquote><p>这里主要是一个probe函数</p></blockquote><blockquote><blockquote><p>I2C总线driver和device那边一match，就会调用这个probe</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213205244.png"></p><blockquote><p>所以，所有的驱动入口函数，就在probe函数这里</p></blockquote><blockquote><blockquote><p>这都是非常经典的驱动函数框架</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213205426.png"></p><p><img src="https://pic.huangruimin.tech/20220213205505.png"></p><p><img src="https://pic.huangruimin.tech/20220213205538.png"></p><blockquote><p>进入到probe函数里面</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213205640.png"></p><blockquote><p>可以看到，probe函数，其实是先在定义变量</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213205721.png"></p><blockquote><p>然后，这里先做相关的check</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213205810.png"></p><p><img src="https://pic.huangruimin.tech/20220213205911.png"></p><blockquote><p>然后将ts进行相关的实例化，分配内存</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213210105.png"></p><blockquote><p>然后进行填充</p></blockquote><blockquote><blockquote><p>然后，在这里面，把各种数据，把Device和Driver里面的那个硬件数据进行挂接</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213210332.png"></p><blockquote><p>irq_pin：就是我们中断对应的引脚</p></blockquote><blockquote><blockquote><p>也就是说，我们的I2C设备，有一个引脚是专门来处理中断的，这是一个硬件信息，是硬件要告诉软件的</p></blockquote></blockquote><blockquote><blockquote><p>也就是Device要告诉Driver的，Driver这边操作irq的时候，只会直接基于irq的pin来直接进行处理，这个是纯软件的，这个只负责直接具体的操作，而不知道是哪个Pin，这个是要device告诉它的，怎么告诉它呢？三种方法：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213210856.png"></p><blockquote><blockquote><blockquote><p>第一种方法：简单粗暴，这就是直接硬编程，直接编译进去了；缺点就是，如果你要移植，那就必须要修改源码，如果不修改源码，如果不修改源码，这个是完不成的；所以一般正式的代码都不可能这样写的。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>第二种方法：老式的做法是：通过I2C Device那里来，进行配置，也就是直接使用数据结构，在代码里面定义数据结构，但是，在数据结构那个地方就需要改；也就是说，还需要改源码。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>第三种方法：新式的做法：改设备树，设备树的代码，就在下面：</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213211505.png"></p><blockquote><p>这里，就是通过设备树来获取具体的Pin</p></blockquote><blockquote><blockquote><p>获取touch-gpio的节点，那个节点里面有这样一个属性，属性就是：touch-gpio<br>获取reset-gpio的节点，那个节点里面有这样一个属性，属性就是：reset-gpio</p></blockquote></blockquote><blockquote><p>那么，这个函数在哪里呢？</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213212344.png"></p><p><img src="https://pic.huangruimin.tech/20220213212438.png"></p><blockquote><p>这就是goodix这家的触摸屏的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213212534.png"></p><blockquote><p>这就是gsl680这家的触摸屏的对应的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213212701.png"></p><blockquote><p>这里是对应的i2c从地址，对应的0x40</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213212808.png"></p><blockquote><p>compatible，这个属性是为了让它能够匹配上的</p></blockquote><blockquote><blockquote><p>所以可以看到，其实人家在这里，都配好了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213212937.png"></p><blockquote><p>但是，在源码里面，是没有用设备树传参的</p></blockquote><blockquote><blockquote><p>但是，SDK在做这个的时候，已经基本把这个做好了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213213115.png"></p><p><img src="https://pic.huangruimin.tech/20220213213158.png"></p><blockquote><p>看设备树里面的相关属性</p><blockquote><p>这里应该不是800 x 1280，应该是600 x 1024<br>这里没有修改，没有修改是很正常的，因为都是写死的，因为没有用到设备树，在这里改了，其实也不影响</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220213213420.png"></p><blockquote><p>这两个节点的数值，本来就被配置为4和3</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213213502.png"></p><blockquote><p>如果在代码里面用这两行，读出来也是4和3</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213213641.png"></p><p><img src="https://pic.huangruimin.tech/20220213213755.png"></p><blockquote><p>再往下走，这个驱动，其实是和原来的驱动，没啥区别了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213213902.png"></p><blockquote><p>但是，这个驱动和以前的相比，差别就在这里</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213214049.png"></p><blockquote><p>在核心课程一期里面，是没有看到这些寄存器配置值的，因为当时用的是.bin文件，当年，触摸屏厂商为了保持竞争力，是不愿意把这个寄存器的设置值开源的，核心课程一期是15年讲的。</p></blockquote><blockquote><blockquote><p>寄存器配置值是不是以文本的方式给客户，这个对我们是没有影响的</p></blockquote></blockquote><blockquote><blockquote><p>用没用到设备树，也是一个比较大的不同</p></blockquote></blockquote><blockquote><blockquote><p>别的驱动，也与这个触摸屏的驱动类似</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_18_触摸屏测试及驱动详解1</title>
      <link href="/2021/10/24/hi3516dv300-18-hong-mo-ping-ce-shi-ji-qu-dong-xiang-jie-1/"/>
      <url>/2021/10/24/hi3516dv300-18-hong-mo-ping-ce-shi-ji-qu-dong-xiang-jie-1/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Study16DV300的常用外设详解"><a href="#一、Study16DV300的常用外设详解" class="headerlink" title="一、Study16DV300的常用外设详解"></a>一、Study16DV300的常用外设详解</h2><h3 id="1-1-说明"><a href="#1-1-说明" class="headerlink" title="1.1 说明"></a>1.1 说明</h3><blockquote><p>刚好拿来做设备树的这样一个平台来讲解了，在设备树的课程里面，已经把大部分的内核驱动的东西都已经分析了</p></blockquote><blockquote><p>大部分驱动，使用的虽然是4.9的内核，比2.6.35的内核比较新，但是驱动部分基本没什么变化</p></blockquote><blockquote><p>所以就挑了一个经典的，在核心课程一期里面讲解过，但是设备树课程里面又没讲过，并且这个平台的驱动还是有点问题</p></blockquote><blockquote><p>后面再讲解一个根文件系统的课程，因为这根文件系统是比较复杂的，特别是启动后，加载ko，启动双摄显示的例子</p></blockquote><h3 id="1-2-Hi3516DV300内核驱动的一般分析"><a href="#1-2-Hi3516DV300内核驱动的一般分析" class="headerlink" title="1.2 Hi3516DV300内核驱动的一般分析"></a>1.2 Hi3516DV300内核驱动的一般分析</h3><blockquote><p>看这个课程之前，一定要先看设备树课程，也就是嵌入式核心课程二期，设备树专题</p></blockquote><blockquote><p>因为这个设备树课程是先讲设备树的这样一个原理的，而我们的Hi3516DV300这个平台，它的驱动，就使用了设备树，所以不先看那个课程，直接来看这个课程，就会比较懵。</p></blockquote><ul><li>Hi3516DV300内核驱动的一般分析</li></ul><p><img src="https://pic.huangruimin.tech/20220208175516.png"></p><blockquote><p>设备树和U-boot是有一定的关联的，在Hi3516DV300这样一个平台，U-boot没有使用设备树，而内核使用了设备树机制，关于这个U-boot可用可不用，用和不用的区别，在设备树课程里面讲得非常详细，源码级的解读。</p></blockquote><blockquote><p>GPIO，串口，I2C等SOC内置外设的驱动，都是用了设备树机制，严格按照设备驱动框架</p><blockquote><p>核心课程一期，跟具体的芯片有关，跟具体的外设芯片有关，但是在Hi3516DV300里面，不管是串口，还是GPIO什么的，好像都和ARM有关，用的都是ARM公司的一些芯片，为什么呢？因为ARM公司在更高级的芯片里面，把这些东西标准化了；也就是说，不仅仅是做产品的，我们拿别人的芯片做产品的人，我们不用去写驱动了，甚至连芯片厂商都不用去写驱动了。</p></blockquote></blockquote><blockquote><blockquote><p>驱动谁来写</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>一开始是做产品的公司<br>后面是芯片原厂<br>再后来是ARM公司</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>所以：</p><blockquote><p>像海思这样的半导体厂商，他出这样的芯片的时候呢，甚至这里面的很多驱动，他都不用去提供。</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>他买过来的ARM内核设计，本身就附带有这样的驱动，如果你的GPIO，串口用的就是ARM这边的标准控制器，你这边实际上是可以直接用它的驱动的</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>层次越高，就越讲规矩，就约不会胡乱来</p></blockquote></blockquote></blockquote><blockquote><p>内部外设的驱动很多都是ARM标准的，譬如GPIO和串口，详情见《详解linux设备树全集》</p></blockquote><blockquote><p>外部外设驱动有些用了设备树，也有些没有，取决于具体BSP工作者；</p></blockquote><blockquote><blockquote><p>原始版本来自：触摸屏厂商</p></blockquote></blockquote><blockquote><blockquote><p>2.6.54版本的内核，不能使用设备树，因为内核都不支持</p></blockquote></blockquote><blockquote><blockquote><p>4.9版本的内核，内核用了设备树，触摸屏驱动可以用设备树，也可以不用设备树</p></blockquote></blockquote><blockquote><blockquote><p>触摸只是用来传参的，如果传参要求优雅，那么可以使用设备树，如果不要求传参优雅，那么可以不用设备树。</p></blockquote></blockquote><blockquote><blockquote><p>用不用，区别都不大，如果是触摸屏芯片厂商的工程师，要求提供标准的玩法，或者是想给Linux内核贡献一个标准版本驱动的补丁，这个是应该使用设备树的；这种做法是比较正统的。</p></blockquote></blockquote><blockquote><blockquote><p>如果只是产品公司的工程师，只是因为产品用了这个触摸屏的芯片，拿过来，只是希望产品能够work，这个时候可以不用，因为用的时候比较麻烦一点，不用的话，就比较省心，简单粗暴，所以很多板卡厂商很多时候就不用设备树。</p></blockquote></blockquote><blockquote><blockquote><p>我们买的这个开发板，就没有使用设备树</p></blockquote></blockquote><blockquote><blockquote><p>芯片内部的：都和GPIO，串口类似</p></blockquote></blockquote><blockquote><blockquote><p>芯片外部的：都和触摸屏这种是类似的</p></blockquote></blockquote><h3 id="1-3-Study16DV300的触摸屏驱动测试"><a href="#1-3-Study16DV300的触摸屏驱动测试" class="headerlink" title="1.3 Study16DV300的触摸屏驱动测试"></a>1.3 Study16DV300的触摸屏驱动测试</h3><h4 id="1-3-1-先进行测试"><a href="#1-3-1-先进行测试" class="headerlink" title="1.3.1 先进行测试"></a>1.3.1 先进行测试</h4><p><img src="https://pic.huangruimin.tech/20220212234419.png"></p><p><img src="https://pic.huangruimin.tech/20220212234629.png"></p><blockquote><p>先进行触摸屏测试，这里没有event开头的，所以这里是没有触摸屏的</p></blockquote><blockquote><p>没有的原因是因为：根文件系统里面，配置触摸屏这个地方，就配错了</p></blockquote><blockquote><p>这里是把触摸屏驱动，单独编译为一个.ko文件了，然后，在根文件系统里面，添加了insmod命令去加载模块</p></blockquote><blockquote><p>但是装载错了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220212235024.png"></p><p><img src="https://pic.huangruimin.tech/20220212235136.png"></p><blockquote><blockquote><p>所以，要修改一下，去insmod这个</p></blockquote></blockquote><blockquote><blockquote><p>那么，为什么是装载这个呢？</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>可以从编译完成了的那里面来找：可以从Ubuntu里面找，或者从板子这边找；现在先从板子这边找：</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220212235638.png"></p><blockquote><blockquote><p>这三个都是触摸屏的驱动，现在先装载gslx680.ko这个驱动</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220212235933.png"></p><p><img src="https://pic.huangruimin.tech/20220213000002.png"></p><p><img src="https://pic.huangruimin.tech/20220213000025.png"></p><blockquote><p>修改好了之后，就进行重启</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213090237.png"></p><blockquote><p>重启之后，就会加载这个event0</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213090406.png"></p><blockquote><p>然后，去cat这个event0</p></blockquote><p><img src="https://pic.huangruimin.tech/20220213090439.png"></p><blockquote><p>这个时候，按触摸屏，就会有反应，差不多是对的</p></blockquote><blockquote><blockquote><p>按这个触摸屏的时候，硬件本身会触发一个中断，从而触发驱动</p></blockquote></blockquote><blockquote><blockquote><p>如果i2c接口是对的，i2c驱动工作正常，数据是能从触摸屏芯片，到我们监听接口这边来的，只是这个数据，我们这边直接看，是看不到的，也就是说这个数据目前对不对，我们是不知道的。</p></blockquote></blockquote><h4 id="1-3-2-编写ts-app-c，并交叉编译，丢进去运行，打印触摸坐标，看对不对。"><a href="#1-3-2-编写ts-app-c，并交叉编译，丢进去运行，打印触摸坐标，看对不对。" class="headerlink" title="1.3.2 编写ts_app.c，并交叉编译，丢进去运行，打印触摸坐标，看对不对。"></a>1.3.2 编写ts_app.c，并交叉编译，丢进去运行，打印触摸坐标，看对不对。</h4><ul><li>编写应用代码</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/input.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span><span class="token comment">//首先宏定义了我们的设备文件，设备文件号，好和具体的去对应的</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DEVICE_KEY</span><span class="token string">"/dev/input/event1"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DEVICE_MOUSE</span><span class="token string">"/dev/input/event3"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">X210_KEY</span><span class="token string">"/dev/input/event1"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">X210_TS</span><span class="token string">"/dev/input/event2"</span></span><span class="token comment">//注意设备文件是event0</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Study16DV300_TS</span><span class="token string">"/dev/input/event0"</span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> fd <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> ret <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">input_event</span> ev<span class="token punctuation">;</span><span class="token comment">// 第1步：打开设备文件</span>fd <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span>Study16DV300_TS<span class="token punctuation">,</span> O_RDONLY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>fd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"open"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//在这里循环地去读取它</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">// 第2步：读取一个event事件包</span><span class="token function">memset</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ev<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">input_event</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//每一个输入类设备，都是一个标准的input event事件</span><span class="token comment">//每次过来的一包数据，都是一个标准的struct input_event</span><span class="token comment">//所以我们去read，因为这种输入类设备都是阻塞式的，如果没有按下触摸屏，那么就会在read的时候阻塞</span><span class="token comment">//当触摸屏芯片给了我们数据之后，然后我们的驱动就会向上report，这个report数据就会把我们的read函数给解冻</span><span class="token comment">//把它给激活，激活后，就能读下来了，读下来之后，就去校错</span>ret <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> <span class="token operator">&amp;</span>ev<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">input_event</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">!=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">input_event</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"read"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token number">0</span></span></span><span class="token comment">// 第3步：解析event包，才知道发生了什么样的输入事件</span><span class="token comment">//如果没有问题，那就先打印出来</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息类型</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"type: %hd\n"</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//编码</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"code: %hd\n"</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//值</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"value: %d\n"</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> </span><span class="token comment">//电容触摸屏的意思</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span>type <span class="token operator">==</span> EV_ABS<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>ev<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> ABS_MT_POSITION_X<span class="token operator">:</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"x = %d,"</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> ABS_MT_POSITION_Y<span class="token operator">:</span>flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"y = %d\r\n"</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"-------------------------\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">// 第4步：关闭设备</span><span class="token function">close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>先把文件放到Ubuntu里面</li></ul><p><img src="https://pic.huangruimin.tech/20220213111342.png"></p><blockquote><p>首先放到Ubuntu里面去，并且，这个目录，已经通过nfs进行共享了</p></blockquote><ul><li>在开发板里面，挂载nfs文件系统</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mount</span> <span class="token parameter variable">-t</span> nfs <span class="token parameter variable">-o</span> nolock <span class="token number">192.168</span>.1.141:/home/aston/rootfs /mnt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>在开发板里面，进入到mnt目录</li></ul><p><img src="https://pic.huangruimin.tech/20220213113216.png"></p><blockquote><p>这个是已经编译好的</p></blockquote><ul><li>用共享文件夹，进行编译</li></ul><p><img src="https://pic.huangruimin.tech/20220213113608.png"></p><p><img src="https://pic.huangruimin.tech/20220213113641.png"></p><p><img src="https://pic.huangruimin.tech/20220213113729.png"></p><blockquote><p>工具链的名称是：arm-himix200-linux-gcc</p></blockquote><blockquote><p>交叉编译的命令是：arm-himix200-linux-gcc app_input.c -o myapp</p></blockquote><ul><li>交叉编译后，生成了myapp</li></ul><p><img src="https://pic.huangruimin.tech/20220213113853.png"></p><ul><li>拷贝到nfs文件夹下</li></ul><p><img src="https://pic.huangruimin.tech/20220213113946.png"></p><ul><li>然后，在板子上面，就有这个文件了</li></ul><p><img src="https://pic.huangruimin.tech/20220213114020.png"></p><p><img src="https://pic.huangruimin.tech/20220213114053.png"></p><ul><li>然后，就有效果了</li></ul><p><img src="https://pic.huangruimin.tech/20220213114115.png"></p><blockquote><p>数据不对，y的数值变大，又变小</p></blockquote><blockquote><p>测试结论：</p></blockquote><blockquote><blockquote><p>(1)触摸硬件基本完好，底层I2C通信完好，坐标范围是：1280X800<br>(2)推测：触摸屏驱动底层都工作了，但是坐标上报不对，分辨率配置不对</p></blockquote></blockquote><blockquote><blockquote><p>与硬件有关的东西，都是没问题的，只是上层不对</p></blockquote></blockquote><blockquote><blockquote><p>很要求你能够冷静地分析</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_17_Uboot第二阶段的启动</title>
      <link href="/2021/10/23/hi3516dv300-17-uboot-di-er-jie-duan-de-qi-dong/"/>
      <url>/2021/10/23/hi3516dv300-17-uboot-di-er-jie-duan-de-qi-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="一、从这里开始"><a href="#一、从这里开始" class="headerlink" title="一、从这里开始"></a>一、从这里开始</h2><h3 id="1-1-分析内存空间"><a href="#1-1-分析内存空间" class="headerlink" title="1.1 分析内存空间"></a>1.1 分析内存空间</h3><p><img src="https://pic.huangruimin.tech/20220206214942.png"></p><blockquote><p>这里就主要集中力量，做了一件事情：去解压缩老版本的U-Boot</p></blockquote><blockquote><p>观察这幅图</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206215352.png"></p><p><img src="https://pic.huangruimin.tech/20220206215330.png"></p><blockquote><p>上面这张图的黑框部分，就是总共263 KB</p></blockquote><blockquote><blockquote><p>这263 KB由3部分组成：</p></blockquote></blockquote><blockquote><blockquote><p>A是第一部分：64字节，就是制作的压缩后的U-Boot的前64字节，就是一些当做头，校验使用的，具体内容取决于Hi_Gzip工具，所以我们无从得知，因为是人家从来做对接的。</p></blockquote></blockquote><blockquote><blockquote><p>B是第二部分：8KB，存放的是寄存器的配置值。</p></blockquote></blockquote><blockquote><blockquote><p>C+D是第三部分：<br>包含未压缩的部分C，也就是第一阶段运行的代码，这部分的代码小于24KB，所以，C是小于24KB的<br>包含被压缩的老版本的u-boot.bin，也就是D，也就是第一步编译出来的那个：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206220727.png"></p><blockquote><p>到目前为止，C那一部分，也就是未压缩的那一部分，已经从eMMC Load到sRAM中了。映射到DDR中的0x80700000地址中去，之前一直运行的都是C那一部分</p></blockquote><blockquote><p>到目前为止，D那一部分，也就是被压缩的那一部分，已经从eMMC Load到DDR中了</p></blockquote><h3 id="1-2-start-armboot要解压到的目的地址"><a href="#1-2-start-armboot要解压到的目的地址" class="headerlink" title="1.2 start_armboot要解压到的目的地址"></a>1.2 start_armboot要解压到的目的地址</h3><ul><li><p>首先把串口初始化一下，但是在前面，串口已经初始化过一次了</p></li><li><p>然后用串口打印了一个字符串，打印的字符串是：“\r\nUncompress”,但是OK还没有看到</p></li></ul><p><img src="https://pic.huangruimin.tech/20220206223213.png"></p><p><img src="https://pic.huangruimin.tech/20220206223333.png"></p><ul><li><p>使用直接地址模式</p></li><li><p>初始化硬件解压模块</p></li></ul><blockquote><p>Hi3516DV300内部有一个硬件模块，专门用来进行压缩和解压缩使用的<br>硬件的模块，是一个有知识产权的解压模块</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206223550.png"></p><ul><li>这里在准备要解压缩的目标地址</li></ul><blockquote><p>pdst_l32：Pointer Destination of Low 32，这是在DDR中的目标地址。</p><blockquote><p>这个目标地址是：IMAGE_ENTRY</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206224508.png"></p><p><img src="https://pic.huangruimin.tech/20220206224532.png"></p><p><img src="https://pic.huangruimin.tech/20220206224604.png"></p><p><img src="https://pic.huangruimin.tech/20220206224702.png"></p><p><img src="https://pic.huangruimin.tech/20220206224915.png"></p><blockquote><p>解压的目的地址，与之前之前存放的Uboot-z.bin的地址，有1MB的容量 (这也就是Hi-Tool下载的时候选用1MB的长度的原因之一)</p></blockquote><blockquote><p>之前烧录的Uboot-z.bin也就在263KB，还不到1MB，因此不会发生踩踏事故</p></blockquote><blockquote><p>因此，解压后的老版本U-Boot肯定就要从0x8080000开始运行，也就是老版本的U-Boot肯定运行到了0x8080000这个地址</p></blockquote><blockquote><p>原来链接到0x80700000主要是为了执行C那部分的代码；因为从sRAM加载到DDR的时候，一定需要用到B这一部分，所以也可能那24KB是包含A，B，C的（A不一定包含，B一定包含，C一定包含，并且C一定小于24KB），所以现在修改为如下图所示：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206230355.png"></p><h3 id="1-3-分析start-armboot源码-解压之前"><a href="#1-3-分析start-armboot源码-解压之前" class="headerlink" title="1.3 分析start_armboot源码(解压之前)"></a>1.3 分析start_armboot源码(解压之前)</h3><ul><li>分析要解压的长度：</li></ul><p><img src="https://pic.huangruimin.tech/20220206230524.png"></p><p><img src="https://pic.huangruimin.tech/20220206230739.png"></p><blockquote><p>incbin：include bin</p><blockquote><p>这里要include的是一个二进制文件：image_data.lzma<br>其实也就是这个文件：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206231103.png"></p><blockquote><blockquote><p>其实是把压缩后的老版本的U-Boot放在这里，因为压缩后就是二进制了，就没有格式了，把整个压缩文件include到这里，把起始地址作为input_data，把结束地址作为input_data_end</p></blockquote></blockquote><blockquote><blockquote><p>这样做的目的是：将来方便链接脚本进行重新排布文件</p></blockquote></blockquote><ul><li>分析Gzip要解析的一些头文件</li></ul><p><img src="https://pic.huangruimin.tech/20220206231809.png"></p><blockquote><p>这里是复制Gzip里面的一些头文件的长度，这里还没开始解压</p></blockquote><ul><li>真正开始调用硬件解压</li></ul><blockquote><p>本来是在DDR的0x80700000，现在解压后放到DDR的0x80800000，0x80800000里面放的就是我们解压缩过的U-Boot了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206231958.png"></p><p><img src="https://pic.huangruimin.tech/20220206232215.png"></p><ul><li>解压后</li></ul><blockquote><p>U-boot中，A，C，D这一部分已经没用了；<br>B这一部分可能还有点用，因为后面可能涉及到硬件的操作，凡是涉及到硬件操作的，都会用到寄存器中的.reg文件<br>E这一部分就是完全有用的</p></blockquote><blockquote><p>到了E这一部分，其实整个芯片，该初始化的，都已经初始化了</p></blockquote><h3 id="1-3-分析start-armboot源码-解压之后"><a href="#1-3-分析start-armboot源码-解压之后" class="headerlink" title="1.3 分析start_armboot源码(解压之后)"></a>1.3 分析start_armboot源码(解压之后)</h3><p><img src="https://pic.huangruimin.tech/20220206233316.png"></p><blockquote><p>首先把硬件解压缩模块给关掉</p></blockquote><blockquote><p>直接定义了一个函数指针变量</p><blockquote><p>之前都是先定义类型，再用类型定义变量</p></blockquote></blockquote><blockquote><p>强制类型转换后的0x80800000赋值给uboot，其实就是把这个地址强制类型转换成一个函数指针，后面再去执行这个函数</p></blockquote><blockquote><p>把原来的icache给清空，也就是把原来的上下文给清空，准备另一套东西的执行</p></blockquote><blockquote><p>执行uboot这个函数，其实就是跳转到0x80800000这个地址，就差直接goto这个地址了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206233255.png"></p><h3 id="1-4-解压之后，跳到u-boot，会首先执行哪行源码呢"><a href="#1-4-解压之后，跳到u-boot，会首先执行哪行源码呢" class="headerlink" title="1.4 解压之后，跳到u-boot，会首先执行哪行源码呢"></a>1.4 解压之后，跳到u-boot，会首先执行哪行源码呢</h3><h4 id="1-4-1-首先回忆制作时候的Makefile"><a href="#1-4-1-首先回忆制作时候的Makefile" class="headerlink" title="1.4.1 首先回忆制作时候的Makefile"></a>1.4.1 首先回忆制作时候的Makefile</h4><p><img src="https://pic.huangruimin.tech/20220207113632.png"></p><h4 id="1-4-2-0x80800000地址对应的代码在哪里呢"><a href="#1-4-2-0x80800000地址对应的代码在哪里呢" class="headerlink" title="1.4.2 0x80800000地址对应的代码在哪里呢"></a>1.4.2 0x80800000地址对应的代码在哪里呢</h4><blockquote><p>其实就是分析一下老版本的U-boot，看把谁链接到前面了</p></blockquote><blockquote><blockquote><p>所以就先分析一下链接脚本</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>第一个链接脚本就是这个，这个也是第二次制作的时候使用的链接脚本，也就是相当于A，B，C，D这个的链接脚本</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208104828.png"></p><p><img src="https://pic.huangruimin.tech/20220208105111.png"></p><blockquote><blockquote><blockquote><p>那么E这个Uboot的链接脚本在哪里呢</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208105111.png"></p><blockquote><blockquote><blockquote><p>从最顶层的Makefile来推</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208111642.png"></p><p><img src="https://pic.huangruimin.tech/20220208112030.png"></p><blockquote><blockquote><blockquote><blockquote><p>最后翻阅文件夹得：只有下面这个文件夹中有u-boot.lds</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208112445.png"></p><blockquote><blockquote><blockquote><p>因为是从顶层的Makefile编译得到U-boot的，所以查顶层的Makefile必然能得到链接脚本在什么地方</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208111819.png"></p><blockquote><blockquote><blockquote><p>E这个Uboot的链接脚本在下面这个目录下</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208111513.png"></p><p><img src="https://pic.huangruimin.tech/20220208112305.png"></p><blockquote><blockquote><blockquote><p>来开始分析链接脚本</p></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208112701.png"></p><blockquote><blockquote><blockquote><blockquote><p>发现它的ENTRY还是_start，他在运行的时候，还是从_start开始的，那么到底是哪一个_start呢？肯定不是最早分析的那个_start了，所以这个体系里面有好几个_start.s，到底是哪个_start.s呢，这是一个需要确认的问题</p></blockquote></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><blockquote><p>从这个链接脚本往下翻阅，可以查看到</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208113424.png"></p><blockquote><blockquote><blockquote><blockquote><p>CPUDIR到底是哪一个呢？肯定不是cpu，实际的CPU的话，那么就是armv7，也就是链接脚本目录下的armv7：</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208113707.png"></p><blockquote><blockquote><blockquote><blockquote><p>所以就是下面这个目录的Start.s，也就是E那一部分的Start.s</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208113744.png"></p><blockquote><blockquote><blockquote><blockquote><p>但是这个体系下面还有其他的start.s，其实这个就是，A，B，C，D这一部分的Start.s，也就是C那一部分的代码</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208113906.png"></p><p><img src="https://pic.huangruimin.tech/20220208120533.png"></p><blockquote><blockquote><blockquote><blockquote><p>接下来就分析也就是E那一部分的Start.s</p></blockquote></blockquote></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208113744.png"></p><p><img src="https://pic.huangruimin.tech/20220208121317.png"></p><blockquote><blockquote><blockquote><p>理清这个思路，这个Uboot其实是一个套一个，相当于虎头蛇尾；先执行一个解压，然后执行真正的U-Boot，一夜回到解放前</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>但是，这个时候的状态是不一样的，比如说：DDR，时钟，这些是好的了，下面跳转到来执行这个Start.s</p></blockquote></blockquote></blockquote><h4 id="1-4-3-分析目前这个Start-s"><a href="#1-4-3-分析目前这个Start-s" class="headerlink" title="1.4.3 分析目前这个Start.s"></a>1.4.3 分析目前这个Start.s</h4><ul><li>跳转过来立马执行第一行指令，第一行指令就是reset，这里的reset仅仅是一个符号，并不是真正地跳转到系统的0地址</li></ul><p><img src="https://pic.huangruimin.tech/20220208121912.png"></p><ul><li>save_boot_params</li></ul><blockquote><p>就是一个空的函数，没有具体代码</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208122630.png"></p><ul><li>和虚拟化有关的，啥都没干</li></ul><p><img src="https://pic.huangruimin.tech/20220208122728.png"></p><ul><li>关中断相关的</li></ul><p><img src="https://pic.huangruimin.tech/20220208122752.png"></p><ul><li>重新定位异常向量表相关的</li></ul><p><img src="https://pic.huangruimin.tech/20220208122856.png"></p><ul><li>跳过low_level_init相关的，这个是肯定要跳过的</li></ul><p><img src="https://pic.huangruimin.tech/20220208123008.png"></p><ul><li>bl _ main，很快就跳转到_main了，没事是什么事都没有做，就跳转到main了，所以不用跳转到Start.s，直接跳转到_ main也是可以的；所以上面这个Start.s其实就是空的，啥也没干。</li></ul><p><img src="https://pic.huangruimin.tech/20220208123031.png"></p><ul><li><p>那么_main是谁呀，其实就是main函数，链接的时候，就是以对等的当时链接了_main</p></li><li><p>main函数在什么地方呢？</p></li></ul><blockquote><p>main在arch/arm/lib/crt0.s中</p><blockquote><p>crt0.s可能没见过，但是crt0.o一定见过，程序如果在链接的时候，没有main函数，链接的时候，就会报错，说在crt0.o里面找不到main，我们平时写的代码呢，我们工具链的库里面，给我们提供了crt0.o，那是所有程序，所有进程，最开始的那一段。<br>因为这个属于工具链的一部分，所以就在lib目录下，其实main函数里面做的事情，就是做main之前的C语言运行环境的构建，最后跳转到main函数里面去运行，所以就跳到这里来了。</p></blockquote></blockquote><blockquote><p>通过搜索也知道在什么地方</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208130049.png"></p><p><img src="https://pic.huangruimin.tech/20220208130250.png"></p><p><img src="https://pic.huangruimin.tech/20220208130336.png"></p><p><img src="https://pic.huangruimin.tech/20220208130354.png"></p><blockquote><p>所以这个crt0.s就是main函数</p></blockquote><ul><li>来分析crt0.s</li></ul><blockquote><p>设置C语言运行的初始环境</p></blockquote><blockquote><p>有一个board)init_f(0)，也有一个board_init_r(0)</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208130549.png"></p><p><img src="https://pic.huangruimin.tech/20220208130739.png"></p><blockquote><p>倒是在 board_init_f这个函数里面干了很多的事情</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208130848.png"></p><p><img src="https://pic.huangruimin.tech/20220208130923.png"></p><blockquote><p>可以发现，跳转到crt0.s之后，一切的操作都很标准了，然后顺着这个往下走，就可以发现有global data</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208131540.png"></p><blockquote><p>以及zero_global_data（)，类似于清零之类的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208131618.png"></p><blockquote><p>global_data 里面的一些初始化</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208132016.png"></p><blockquote><p>initcall_run_list</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208132110.png"></p><p><img src="https://pic.huangruimin.tech/20220208132541.png"></p><blockquote><blockquote><p>这个函数传了个参数，叫：init_sequence_f，里面有一堆函数；这些初始化函数的返回值和接收参数类型都是一样的，所以就定义了一个函数指针数组。</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208132642.png"></p><p><img src="https://pic.huangruimin.tech/20220208132803.png"></p><blockquote><blockquote><p>然后就在这个函数里面，挨个去执行它，这里面有一个for循环，挨个进行调用，如果有一个出错了，那么就退出，如果没有一个出错，那么就挨个循环去执行。</p></blockquote></blockquote><blockquote><p>后面的流程，基本就和通用的U-boot很类似了，后面就是一边顺着这个流程走，一边顺着这个boot info去看</p></blockquote><ul><li>到现在为止</li></ul><p><img src="https://pic.huangruimin.tech/20220208133241.png"></p><blockquote><p>上面这段U-boot，其实是分段式的U-boot带来的；后面的U-boot启动，其实和传统的U-boot启动就一样了</p></blockquote><blockquote><p>所以下面来分析这句话的打印信息：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208133443.png"></p><blockquote><p>肯定是从这里开始的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208133519.png"></p><p><img src="https://pic.huangruimin.tech/20220208135617.png"></p><p><img src="https://pic.huangruimin.tech/20220208135739.png"></p><p><img src="https://pic.huangruimin.tech/20220208135942.png"></p><p><img src="https://pic.huangruimin.tech/20220208140108.png"></p><p><img src="https://pic.huangruimin.tech/20220208140141.png"></p><p><img src="https://pic.huangruimin.tech/20220208140223.png"></p><p><img src="https://pic.huangruimin.tech/20220208140303.png"></p><blockquote><p>再往后</p></blockquote><blockquote><blockquote><p>往后有很多是没打印的，因为很多调用的是debug函数在输出，大部分是没有输出的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220208153542.png"></p><blockquote><p>初始化完成之后，到这里，就进入一个hang了，就挂住了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208153740.png"></p><blockquote><p>最后init到这里了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220208154106.png"></p><blockquote><p>一边分析，一边对着boot的log来看</p></blockquote><blockquote><p>截止现在，U-boot就分析完了，后面的U-boot和传统的应该差不多，至少有90%是差不多的</p></blockquote><blockquote><blockquote><p>不同的是分段式设计，以及它压缩了，压缩了地话，就多了解压缩这样一个流程；但是这个解压呢，又和内核的自解压是比较相似的</p></blockquote></blockquote><h4 id="1-4-3-未尽事宜"><a href="#1-4-3-未尽事宜" class="headerlink" title="1.4.3 未尽事宜"></a>1.4.3 未尽事宜</h4><ul><li>Excel表格，里面怎么去设置，这样一些细节</li></ul><blockquote><p>因为默认会给一些选型参考，并且可以直接使用海思他们已经调好的</p></blockquote><blockquote><p>列表里面不支持的器件，大概率就不好采购；也可能不兼容，不兼容还是要用，那么就要找海思的支持人员了；调这个东西也是比较麻烦的。</p></blockquote><blockquote><p>下节课讲内核，主要就是讲解驱动</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_16_Uboot第一阶段的启动</title>
      <link href="/2021/10/22/hi3516dv300-16-uboot-di-yi-jie-duan-de-qi-dong/"/>
      <url>/2021/10/22/hi3516dv300-16-uboot-di-yi-jie-duan-de-qi-dong/</url>
      
        <content type="html"><![CDATA[<h2 id="一、uboot第一阶段的启动"><a href="#一、uboot第一阶段的启动" class="headerlink" title="一、uboot第一阶段的启动"></a>一、uboot第一阶段的启动</h2><h3 id="1-1-起点在：arch-arm-cpu-armv7-hi3516dv300-start-S"><a href="#1-1-起点在：arch-arm-cpu-armv7-hi3516dv300-start-S" class="headerlink" title="1.1 起点在：arch\arm\cpu\armv7\hi3516dv300\start.S"></a>1.1 起点在：arch\arm\cpu\armv7\hi3516dv300\start.S</h3><p><img src="https://pic.huangruimin.tech/20220206113350.png"></p><p><img src="https://pic.huangruimin.tech/20220206113526.png"></p><h3 id="1-2-分析start-S源码"><a href="#1-2-分析start-S源码" class="headerlink" title="1.2 分析start.S源码"></a>1.2 分析start.S源码</h3><ul><li>说明海思也是从其它地方移植过来的：</li></ul><p><img src="https://pic.huangruimin.tech/20220206113708.png"></p><ul><li>复位向量表</li></ul><blockquote><p>_ start符号就是entry，这是这个系统最开始启动的地方</p></blockquote><blockquote><p>_ start符号下面就是异常向量表，这里主要关注：</p></blockquote><blockquote><blockquote><p>第一条：复位异常，复位之后就会去执行reset</p></blockquote></blockquote><blockquote><blockquote><p>因此去分析reset</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206130010.png"></p><ul><li>寻找reset</li></ul><blockquote><p>reset往上这些就相当于定义了一些变量</p></blockquote><blockquote><p>reset就相当于一些函数</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206130234.png"></p><ul><li>save_boot_params</li></ul><blockquote><p>调用了一个函数：叫save_boot_params，用于保存启动的一些参数，主要用来做一些类似于热启动之类的，启动了之后，要保存一些之前的状态，上下文之类的；但实际上，这个函数是空的，ENTRY就表示这个函数的入口点。</p></blockquote><blockquote><p>这个函数叫save_boot_params就是一个空函数，最后又跳回来了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206130749.png"></p><p><img src="https://pic.huangruimin.tech/20220206130832.png"></p><ul><li>如果定义了CONFIG_ARMV7_LPAE</li></ul><p><img src="https://pic.huangruimin.tech/20220206131119.png"></p><blockquote><p>宏定义：CONFIG_ARMV7_LPAE是用来看看是不是支持虚拟化使用的</p></blockquote><blockquote><blockquote><p>也就是基于这个芯片，要先跑一个虚拟化平台，比如说，双核A7的有没有可能一个核跑一个Linux，一个核跑一个RTOS呢？这个时候，就需要使用虚拟化技术，把这个平台给它虚拟化一下，其实就是虚拟机</p></blockquote></blockquote><blockquote><p>其实是没有这个宏定义的，怎么确定是没有这个宏定义的，查找一下就知道了，要在以下两个符号里面去查找：</p></blockquote><blockquote><p>首先是.config文件，因为这个.config文件其实就是menuconfig的配置项</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206131550.png"></p><blockquote><blockquote><p>所以先在这里面搜一下，发现搜到后是被注释掉了，所以这也就是宁愿注释掉，也不删除掉的用意所在，注释后，去搜这个符号，是能够搜到的，所以可以明确地知道这个符号是没有被定义的。</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206131804.png"></p><blockquote><p>其次是hi3516dv300.h文件里面，搜了也是没有的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206132226.png"></p><p><img src="https://pic.huangruimin.tech/20220206132404.png"></p><blockquote><blockquote><p>所有与config相关的项目，应该就在这两个地方，如果这两个地方都没有，那么就可以确定是肯定都没有了</p></blockquote></blockquote><ul><li>把interrupt禁掉，并且设置为SVC模式，这些也是比较常规的</li></ul><p><img src="https://pic.huangruimin.tech/20220206132540.png"></p><ul><li>如果没有：定义CONFIG_OMAP44XX并且没有定义CONFIG_SPL_BUILD</li></ul><blockquote><p>查阅CONFIG_SPL_BUILD发现没有被定义，并且是与操作，那么整体就是false，取反之后就是true</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206132925.png"></p><p><img src="https://pic.huangruimin.tech/20220206132947.png"></p><blockquote><blockquote><p>后面就应当进来，下面分析进来后的代码：</p><blockquote><p>设置CP15里面的协处理器设置有关的，其中：for VBAR to point to vector 与异常向量表的重定位有关的<br>其中，Set vector address in CP15 VBAR register，也就是异常向量表可以通过软件来进行重定义</p></blockquote></blockquote></blockquote><blockquote><p>这一点，与CPU内部设置有关的，是不用去更改的。</p></blockquote><ul><li>mask ROM code，做进去，掩模是不能更改的，也就是irom的条件</li></ul><blockquote><p>这个需要保证mask ROM的PLL时钟是稳定的</p></blockquote><blockquote><p>也就是内部执行BL0的时候，也就是把时钟这一块已经做好了，而且时钟已经稳定了</p></blockquote><blockquote><p>如果没有定义CONFIG_SKIP_LOWLEVEL_INIT，实际上，是已经定义了这个宏定义</p></blockquote><blockquote><p>CONFIG_SKIP_LOWLEVEL_INIT_ONLY，实际上，也定义了这个定义</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206134540.png"></p><p><img src="https://pic.huangruimin.tech/20220206134732.png"></p><blockquote><p>实际上，irom已经满足了条件，这部分代码是不会被执行的，也就是不需要执行CP15的初始化与PLL的初始化</p></blockquote><ul><li>分析数据手册</li></ul><blockquote><p>访问寄存器一般都是：基地址+偏移量的方式</p><blockquote><p>SYS_CTRL_REG_BASE：这是系统寄存器的基地址，<br>REG_SC_GEN2：这是系统寄存器的偏移量</p></blockquote></blockquote><blockquote><p>首先查看系统控制寄存器基地址的定义：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206135332.png"></p><blockquote><p>CPU的地址空间是32位的，也就是4GB的地址空间，这个是怎么分配的呢</p><blockquote><p>这个是要查看数据手册的，如下图所示，但是这个数据手册也还是太简单了，相比新的STM32动不动就3000页：<br>如果写得非常详细的话，这个手册写个4000页是没问题的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206140011.png"></p><blockquote><blockquote><p>具体查看手册的如下位置，这里就告诉了你4GB的地址空间是如何映射的：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206140259.png"></p><p><img src="https://pic.huangruimin.tech/20220206141712.png"></p><blockquote><blockquote><p>开机的时候会把内部的BOOTROM(iROM,BL0)，映射到0地址开始执行；撤销映射后，指向片内RAM，也就是有一段片内的iRAM；这一部分有64MB。</p></blockquote></blockquote><blockquote><blockquote><p>沿着往下走，就有64KB的BOOTROM，也就是BOOTROM的代码自己在这个空间内。</p></blockquote></blockquote><blockquote><blockquote><p>往下走：内部的iRAM，肯定是sRAM，是40KB；第一次加载的BL1就加载了在Uboot的前一部分，是24KB大小，24KB是小于40KB的，还有富余的空间是为了给：栈，堆，等实用。</p></blockquote></blockquote><blockquote><p>上一节中的截图：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206141502.png"></p><blockquote><blockquote><p>往下走：就是各种外设的寄存器了</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206141808.png"></p><ul><li>寄存器：REG_SC_GEN2的分析</li></ul><p><img src="https://pic.huangruimin.tech/20220206141938.png"></p><p><img src="https://pic.huangruimin.tech/20220206142013.png"></p><ul><li>寄存器地址中，有很大一部分是空白的，现在来看DDR的，理论上，这个芯片，可以带2GB的DDR</li></ul><blockquote><p>可以这样理解：4GB的空间，一半(2GB)用于寄存器等等，一半(2GB)用于DDR</p></blockquote><blockquote><p>因此，现在对于芯片的地址空间有了更进一步的理解了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206142256.png"></p><ul><li>查阅系统控制寄存器以及相关的偏移值</li></ul><p><img src="https://pic.huangruimin.tech/20220206142641.png"></p><p><img src="https://pic.huangruimin.tech/20220206142714.png"></p><p><img src="https://pic.huangruimin.tech/20220206142805.png"></p><blockquote><p>但是这里展示得依然不是很全面，比如：REG_SC_GEN2就找不着</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206141938.png"></p><p><img src="https://pic.huangruimin.tech/20220206142911.png"></p><p><img src="https://pic.huangruimin.tech/20220206143051.png"></p><p><img src="https://pic.huangruimin.tech/20220206143225.png"></p><blockquote><p>所以要查阅的寄存器，在数据手册里面是找不到的</p><blockquote><p>因为海思觉得，这些东西，你不需要了解，这块代码，也不需要你管，咱们拿过来用就行了，毕竟不是原厂</p></blockquote></blockquote><ul><li>继续分析下面这一段代码<br><img src="https://pic.huangruimin.tech/20220206143520.png"></li></ul><p><img src="https://pic.huangruimin.tech/20220206144413.png"></p><blockquote><p>硬件的自举，自己能把自己的电路给运行起来<br>软件的自举，能够自动启动</p></blockquote><ul><li>下面来分析一下非正常的启动流程</li></ul><blockquote><p>也就是如果：REG_SC_GEN2写的是”ziju”的ASCII码，那么下面就会把寄存器REG_SC_GEN2给清空掉</p></blockquote><blockquote><p>这个寄存器就是用来做flag的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206144838.png"></p><blockquote><p>接下来，下一步，做以下事情：</p><blockquote><p>初始化时钟有关的，DDR控制有关的，GPIO多路复用相关的<br>还调用了init_registers：正真去初始化PLL，DDRC有关的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206145414.png"></p><blockquote><p>但是注意，这里第二次进来的时候，sp就不是随机值了，因为在“自举”的过程中，sp已经被赋值了</p></blockquote><ul><li>来分析函数init_registers函数</li></ul><p><img src="https://pic.huangruimin.tech/20220206165216.png"></p><blockquote><p>这里面进行寄存器的读写，就是为了初始化PLL，DDR等基础硬件，<br>这里面进行初始化的时候，肯定有很多寄存器的值，这些寄存器的值，就是从.reg里面读出来的，不在Uboot代码里面<br>因为是通过那个Excel表格来配置，配置好了之后，生成.reg文件<br>这些细节都在init_registers函数里面</p></blockquote><blockquote><p>init_registers这个函数在Lowlevel_init.c里面也是有的，但目前使用的不是这个，因为Makefile里面，没有包含Lowlevel_init.c这个文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206165712.png"></p><p><img src="https://pic.huangruimin.tech/20220206170013.png"></p><ul><li>ddr training：</li></ul><blockquote><p>所以要理解自举，在这里面，自举就是去初始化DDR，PLL等硬件设施使用的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206170408.png"></p><blockquote><p>其实这里，就是对DDR的参数做进一步的校准和确认</p><blockquote><p>也就是很多比较高端的DDR，它的很多参数是跟这个具体的硬件是有关的，也就是你没有办法事先写一个确定的值，一定是最佳的。<br>可能在运行的过程中，运行这个DDR Training这个函数<br>DDR Training这个函数是先设定一个值，然后读取一个反馈，看是不是OK，相当于一个动态的调整过程。<br>所以这个函数叫训练，通过不断地去设置，读返回，通过这种方式，把DDR校准到一个比较合适的一个位置，然后就返回了。</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206171605.png"></p><blockquote><blockquote><p>返回bootrom，也就是返回到系统的BL0去了</p></blockquote></blockquote><blockquote><blockquote><p>也就是说，BL0内部是肯定要初始化很多硬件</p></blockquote></blockquote><blockquote><blockquote><p>BL0如果要读取外部的EMMC，肯定要首先能初始化EMMC</p></blockquote></blockquote><blockquote><blockquote><p>BL0能够对接HiTool，进行Uboot的下载，肯定要能初始化DDR</p></blockquote></blockquote><ul><li>BL0是内部代码呀，将来也不知道用户到底使用什么DDR呀，这样子怎么能初始化DDR呢？</li></ul><blockquote><blockquote><p>但是反过来想：BL0是内部代码呀，将来也不知道用户到底使用什么DDR呀，这样子怎么能初始化DDR呢？</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这里的解决方法是：先自举启动一次，在自举启动的过程中，把DDR，PLL给初始化了；然后再回到bootrom，也就是回到BL0去，再重新启动，在重新启动的过程中，已经启动了DDR、PLL，这样就能开始正常启动流程了。</p></blockquote></blockquote></blockquote><blockquote><blockquote><p>回到bootrom相当于又是重头开始了，因为异常向量表只有一条，也就是相当于又跳转到了reset</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206174955.png"></p><blockquote><blockquote><p>也就是这里：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206174209.png"></p><blockquote><p>所以这里的设计是非常巧妙的</p></blockquote><blockquote><p>重新进来的时候，就不会进入“自举”了，而是开启正常启动流程</p></blockquote><ul><li>normal_start_flow开始部分</li></ul><p><img src="https://pic.huangruimin.tech/20220206175143.png"></p><p><img src="https://pic.huangruimin.tech/20220206175428.png"></p><blockquote><p>BL0跳到BL1，经过”自举”，又跳回了BL0，然后又回到BL1，这回呢，就不自举了，开启正常启动流程</p></blockquote><ul><li>init serial and printf a string</li></ul><blockquote><p>把SP进行赋值<br>调用了uart_early_init</p></blockquote><blockquote><blockquote><p>其中，uart_early_init函数位于下列图中，是初始化串口用的：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206175953.png"></p><p><img src="https://pic.huangruimin.tech/20220206180012.png"></p><blockquote><p>调用了msg_main_cpu_startup</p></blockquote><blockquote><blockquote><p>其中，msg_main_cpu_startup函数位于下列图中，是打印信息用的：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206181920.png"></p><p><img src="https://pic.huangruimin.tech/20220206181751.png"></p><blockquote><p>上面也就是U-boot启动后，最早打印的信息了，鸿蒙的Hi3516DV300使用的是和这个一样的U-Boot</p></blockquote><ul><li>enable sysnt</li></ul><blockquote><p>计算系统的频率之类的</p></blockquote><blockquote><p>如果不是从nand，SPI，Flash启动，那么就跳过检查是从哪里启动(不执行check_boot_type)，否则，执行check_boot_type：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206182616.png"></p><blockquote><p>如果不执行check_boot_type，那么</p></blockquote><blockquote><blockquote><p>把PC寄存器的数值读进来，然后左移24位，其实就是看低8位<br>和0进行比较<br>低8位不等于0，那就证明，不是从nand，SPI，Flash启动的，执行do_clr_remap，进行重映射<br>低8位等于0，那就证明，是从nand，SPI，Flash启动的，执行check_boot_type</p></blockquote></blockquote><ul><li>check_boot_type</li></ul><p><img src="https://pic.huangruimin.tech/20220206184258.png"></p><blockquote><p>读取寄存器，进行计算，然后PC跳到 _ clr_remap_fmc_entry</p></blockquote><blockquote><p>就是用来判断boot_type</p></blockquote><ul><li>do_clr_remap</li></ul><p><img src="https://pic.huangruimin.tech/20220206184337.png"></p><p><img src="https://pic.huangruimin.tech/20220206184637.png"></p><blockquote><p>要么就是在内部的sram，ddr，启动</p></blockquote><blockquote><p>如果是在ddr里面，那么ddr就已经启动了<br>如果不是在ddr里面，那么后面还要去初始化这个ddr，后面再重映射到ddr里面去</p></blockquote><blockquote><p>使能I-Cache</p></blockquote><blockquote><p>最后跳转到ddr_init</p></blockquote><ul><li>ddr_init</li></ul><blockquote><p>在这个ddr_init里面，还主要是这个init_registers，以及ddr_training</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206184853.png"></p><p><img src="https://pic.huangruimin.tech/20220206184929.png"></p><blockquote><p>一般是走不到ddr_init里面来了，因为之间就初始化过ddr了，参考后面的no_ddr_init</p></blockquote><ul><li>_ clr_remap_fmc_entry</li></ul><p><img src="https://pic.huangruimin.tech/20220206195612.png"></p><blockquote><p>这里相当于定义了一个地址：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206195721.png"></p><blockquote><p>在上一节课中，提到了这个地址</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206200048.png"></p><blockquote><p>所以，将来运行的时候，肯定也会到这个地址；下面来具体计算这个地址：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206200854.png"></p><blockquote><p>这里找了内部的SRAM</p></blockquote><blockquote><p>这里也是在做运算，这里做了do_clr_remap，还是要执行这一句：do_clr_remap</p></blockquote><blockquote><p>为什么要执行这一番计算呢？ 因为这时候运行地址跟链接地址不一定相同</p></blockquote><blockquote><p>这里涉及到重定位</p></blockquote><ul><li>no_ddr_init</li></ul><p><img src="https://pic.huangruimin.tech/20220206202549.png"></p><blockquote><p>不需要ddr初始化的话，就会copy_to_init</p></blockquote><blockquote><p>copy_to_init：就是把完整的U-boot给Copy到DDR里面去</p></blockquote><blockquote><p>截止目前为止，如果是从eMMC启动，我们运行的应该还是前面Load进去那24KB的Uboot的第一阶段</p></blockquote><blockquote><p>第一阶段必须要做的事情就是把完整的U-boot给Load到DDR里面去，在后面跳转的时候做一次长跳转，直接跳到DDR里面去运行，这是必须要完成的，否则这段代码运行完了，就死了，所以这一个步骤是必须完成的。</p></blockquote><ul><li>copy_to_ddr</li></ul><p><img src="https://pic.huangruimin.tech/20220206202659.png"></p><blockquote><p>首先是：_ image_copy_start</p></blockquote><blockquote><p>然后是：如果r0和r1相等，那么就执行start_armboot</p><blockquote><p>如果r0和r1相等，就证明你已经在ddr里面了，如果已经在ddr里面了，那么就去执行start_armboot，就相当于ddr里面的第二阶段的开</p></blockquote></blockquote><blockquote><blockquote><p>如果r0和r1不相等，就证明现在还不在ddr里面，而是在sRAM里面，那么就要去执行copy，copy就是bl：memcpy</p></blockquote></blockquote><blockquote><blockquote><p>_ img_copy_start，_bbs_start，得到地址，然后执行copy</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220206203629.png"></p><blockquote><p>这里面copy的应该不是完整的U-boot，应该是第一阶段加载到sRAM里面的那24KB，只是把这24KB给Copy到DDR里面去了；然后试图跳转到DDR里面去。</p></blockquote><ul><li>check_boot_mode</li></ul><p><img src="https://pic.huangruimin.tech/20220206205827.png"></p><blockquote><p>这里跳过了：ddr_init</p></blockquote><blockquote><p>这里经过了比较呢，最后是执行了：copy_flash_to_ddr</p></blockquote><ul><li>eMMC_boot</li></ul><p><img src="https://pic.huangruimin.tech/20220206205915.png"></p><blockquote><p>如果是eMMC启动，那么是一定能跳转到这个地方来的，具体的跳转还没分析好</p></blockquote><blockquote><p>这里执行了：emmc_boot_read</p></blockquote><blockquote><blockquote><p>这个函数才是从eMMC里面copy完整的U-Boot到ddr的过程</p></blockquote></blockquote><blockquote><p>然后执行relocate</p></blockquote><blockquote><blockquote><p>这个就是：copy完了，进行重定位</p></blockquote></blockquote><ul><li>emmc_boot_read</li></ul><p><img src="https://pic.huangruimin.tech/20220206204909.png"></p><p><img src="https://pic.huangruimin.tech/20220206204931.png"></p><p><img src="https://pic.huangruimin.tech/20220206205017.png"></p><blockquote><p>上面这个函数就会将完整的烧录在eMMC中的完整的U-Boot给Copy到DDR中</p></blockquote><ul><li>relocate</li></ul><p><img src="https://pic.huangruimin.tech/20220206205229.png"></p><blockquote><p>其中：CONFIG_EDMA_PLL_TRAINING这个符号是没有定义的，所以中间一段都是没有的</p></blockquote><blockquote><p>所以：就直接执行_start_armboot，也就是执行第二阶段</p></blockquote><p><img src="https://pic.huangruimin.tech/20220206205431.png"></p><ul><li>_ start_armboot</li></ul><p><img src="https://pic.huangruimin.tech/20220206210423.png"></p><p><img src="https://pic.huangruimin.tech/20220206210503.png"></p><blockquote><p>以上就是U-Boot第二阶段开头的那个文件</p></blockquote><h3 id="1-3-碎语"><a href="#1-3-碎语" class="headerlink" title="1.3 碎语"></a>1.3 碎语</h3><blockquote><p>没有讲得特别清楚，因为没必要</p><blockquote><p>因为第一阶段的内容，都是严格和CPU有关的<br>需要知道海思的CPU的整体流程是怎样子的，就够了</p></blockquote></blockquote><blockquote><p>这里跳来跳去，是为了应对各种各样的可能的情况</p><blockquote><p>可能有硬复位<br>可能有冷启动：没有上电的情况下，突然直接给它上电<br>也有热启动：本来就是上电运行的，按了复位按键，或通过软件寄存器的方法，触发了热启动<br>从上位机启动：从Hitool通过串口给你下载<br>应对各种情况，所以又各种跳转<br>这种东西，不难，海思如果给了所有细节的话，能够全部分析出来，但是没必要，分析到目前这种细节就可以了</p></blockquote></blockquote><blockquote><p>第一阶段：完整的U-Boot已经从eMMC被拷贝到DDR里面来了</p></blockquote><h3 id="1-4-U-Boot的第一阶段结束总结："><a href="#1-4-U-Boot的第一阶段结束总结：" class="headerlink" title="1.4 U-Boot的第一阶段结束总结："></a>1.4 U-Boot的第一阶段结束总结：</h3><ul><li><p>第一阶段公24KB，在内部sRAM中运行</p></li><li><p>第一阶段完成了初始化时钟，DDR的工作，并且将完整的U-Boot已经copy到DDR中0x80700000了</p></li><li><p>第一阶段结束跳转到DDR中的那一份U-Boot的前面未压缩部分的start_armboot函数中</p></li><li><p>第二阶段就是从：DDR里面的那一份U-boot里面的第三部分；并且是第三部分的那前面的一部分，前面那一部分才是未压缩部分，后面那一部分是压缩了的传统U-Boot。</p></li><li><p>到目前为止，传统的U-Boot还在被压缩着呢？缩在第三部分的后面；目前运行的还是：前面那部分未压缩的第二部分(也就是初始化DDR，eMMC，PLL等等，还未涉及到解压代码)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_15_Uboot详解</title>
      <link href="/2021/10/21/hi3516dv300-15-uboot-xiang-jie/"/>
      <url>/2021/10/21/hi3516dv300-15-uboot-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="一、分段式uboot的生成过程解析"><a href="#一、分段式uboot的生成过程解析" class="headerlink" title="一、分段式uboot的生成过程解析"></a>一、分段式uboot的生成过程解析</h2><h3 id="1-0-与以往Uboot不同的"><a href="#1-0-与以往Uboot不同的" class="headerlink" title="1.0 与以往Uboot不同的"></a>1.0 与以往Uboot不同的</h3><blockquote><p>两段式的Uboot：直接编译的Uboot不能用，还得经过一次编译生成Uboot-z才行，还要进行二次制作；也就是，先编译生成一个Gzip工具，再结合那个excel表格生成一个.reg文件，最终生成最终文件；现在很多平台，比如全志，也都会采用这种两段式的Uboot的方式。</p></blockquote><h3 id="1-1-顺着顶层Makefile的u-boot-z目标去找"><a href="#1-1-顺着顶层Makefile的u-boot-z目标去找" class="headerlink" title="1.1 顺着顶层Makefile的u-boot-z目标去找"></a>1.1 顺着顶层Makefile的u-boot-z目标去找</h3><ul><li>首先在顶层的Makefile里面找到u-boot-z</li></ul><blockquote><p>依赖于uboot目录下的u-boot.bin文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205194039.png"></p><blockquote><p>由u-boot.bin叠加reg文件生成u-boot-z.bin</p></blockquote><ul><li>分析如何由u-boot.bin生成u-boot-z.bin</li></ul><p><img src="https://pic.huangruimin.tech/20220205203837.png"></p><blockquote><p>其实就是进入到下面这个目录去执行下面这个目录的Makefile，并且是执行默认目标</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205204001.png"></p><ul><li>分析以上Makefile</li></ul><blockquote><p>找到要执行生成的目标文件.bin</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205204723.png"></p><blockquote><p>找到目标文件.bin的依赖：.tmp，.regfile</p></blockquote><blockquote><blockquote><p>.regfile：看名字就知道是生成的.reg文件，下面就是判断Uboot顶层文件夹有没有reg文件，或reg文件有没有错误</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205205052.png"></p><p><img src="https://pic.huangruimin.tech/20220205205214.png"></p><blockquote><blockquote><p>.tmp：依赖于tmp文件<br>tmp这个依赖文件又依赖于u-boot.elf<br>u-boot.elf有依赖于image_data.gzip<br>image_data.gzip又依赖于BINIMAGE，这个BINIMAGE就是上级传过来的u-boot.bin</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205205803.png"></p><p><img src="https://pic.huangruimin.tech/20220205211224.png"></p><p><img src="https://pic.huangruimin.tech/20220205211001.png"></p><p><img src="https://pic.huangruimin.tech/20220205213625.png"></p><p><img src="https://pic.huangruimin.tech/20220205213722.png"></p><blockquote><p>SRC, START, COBJS</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205214839.png"></p><blockquote><p>SRC，来自于SSRC</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205214909.png"></p><blockquote><p>SSRC</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205214955.png"></p><blockquote><blockquote><p>一定是先解压到老版本的U-Boot到DDR里面去，再执行老版本的U-Boot，所以以下部分的源码是不能压缩的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205220807.png"></p><blockquote><p>所以分析到这里就知道：elf的依赖里面：</p><blockquote><p>第一个依赖就是：压缩之后的老版本的Uboot<br>后面二个就是：没有压缩的那一部分</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205221016.png"></p><blockquote><p>后面2个：START，COBJS</p></blockquote><blockquote><blockquote><p>这里面也都是一些与解压相关的，只是语法的问题，并不是重复了 </p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205221431.png"></p><blockquote><p>.tmp：由上述uboot.elf生成了.tmp文件</p></blockquote><blockquote><p>uboot.bin：由 .tmp文件 + regfile一起生成uboot.bin文件</p></blockquote><h3 id="1-2-中间的生成过程，其实是可以去分析的"><a href="#1-2-中间的生成过程，其实是可以去分析的" class="headerlink" title="1.2 中间的生成过程，其实是可以去分析的"></a>1.2 中间的生成过程，其实是可以去分析的</h3><h4 id="1-2-1-elf文件时怎么来的"><a href="#1-2-1-elf文件时怎么来的" class="headerlink" title="1.2.1 elf文件时怎么来的"></a>1.2.1 elf文件时怎么来的</h4><blockquote><p>调用链接器的代码</p><blockquote><p>-Bstatic：表示静态链接<br>-T u-boot.lds：表示指定链接脚本<br>链接的规则就是： u-boot.lds<br>链接脚本的路径如下图所示：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205223048.png"></p><p><img src="https://pic.huangruimin.tech/20220205223211.png"></p><blockquote><blockquote><p>从链接脚本中可以看出：ENTRY(_ start)<br>链接的时候：start.o也是在最前面的，所以会把Start.S放在最前面</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205223300.png"></p><blockquote><blockquote><p>-Ttext：指定我们的目标地址，这就是程序的链接地址，这个链接地址是：$(TEXTBASE)，即为：</p></blockquote></blockquote><blockquote><blockquote><p>TEXTBASE这个地址，就是我们整个系统的DDR的地址</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205230355.png"></p><blockquote><blockquote><p>$(START)，$(COBJS)：就是一些依赖文件</p></blockquote></blockquote><blockquote><blockquote><p>$(BOOT).map：生成一个map文件，就是用于查符号表之类的</p></blockquote></blockquote><blockquote><blockquote><p>$(OBJDUMP),：生成了一个反汇编文件，如果符号表要查阅反汇编文件，查阅这里就行了</p></blockquote></blockquote><h4 id="1-2-2-image-data-gzip是压缩包，既然是压缩包的话，那是怎样链接的"><a href="#1-2-2-image-data-gzip是压缩包，既然是压缩包的话，那是怎样链接的" class="headerlink" title="1.2.2 image_data.gzip是压缩包，既然是压缩包的话，那是怎样链接的"></a>1.2.2 image_data.gzip是压缩包，既然是压缩包的话，那是怎样链接的</h4><blockquote><p>其实很简单，就是往压缩包里面塞文件</p></blockquote><blockquote><p>具体看链接的规则： u-boot.lds</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205233234.png"></p><blockquote><p>这些都是来源于Source里面的那些东西，并且全部是.o</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205233427.png"></p><blockquote><blockquote><p>整个没有被压缩的这段代码，长度必须小于0x6000，也就是必须小于24K Byte</p></blockquote></blockquote><blockquote><blockquote><p>也就是Uboot启动的第一阶段的代码，不能大于24K Byte</p></blockquote></blockquote><blockquote><blockquote><p>系统在启动的时候，会自动从eMMC读取一段固定大小的内容到内部sRAM中，然后跳转去执行它，这部分的内容就是U-Boot的第一阶段，也就是上面列出来的内容，这里面的函数，在第一阶段，会被加载进去；在海思里面，这段sRAM的大小就是24K Byte</p></blockquote></blockquote><blockquote><p>就在下面这一部分，往压缩包里面添加东西的了</p></blockquote><blockquote><blockquote><p>压缩完成之后，它的属性就设置为.image了，这个是看段属性的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205234814.png"></p><blockquote><p>整个步骤完成了之后，就会生成.elf</p></blockquote><h4 id="1-2-3-tmp文件是如何生成的呢"><a href="#1-2-3-tmp文件是如何生成的呢" class="headerlink" title="1.2.3 .tmp文件是如何生成的呢"></a>1.2.3 .tmp文件是如何生成的呢</h4><p><img src="https://pic.huangruimin.tech/20220206104833.png"></p><blockquote><p>这个从.elf到.tmp的过程就和以前从.elf到bin的过程差不多</p></blockquote><blockquote><p>这个从.elf到.tmp的的过程：执行的是OBJCOPY</p></blockquote><h4 id="1-2-4-由-tmp以及regfile文件生成bin文件"><a href="#1-2-4-由-tmp以及regfile文件生成bin文件" class="headerlink" title="1.2.4 由.tmp以及regfile文件生成bin文件"></a>1.2.4 由.tmp以及regfile文件生成bin文件</h4><p><img src="https://pic.huangruimin.tech/20220206105340.png"></p><blockquote><p>tmp就已经是二进制文件了，其实就已经是镜像了</p></blockquote><blockquote><p>具体如何添加上regfile呢？</p></blockquote><blockquote><blockquote><p>首先来分析前三行</p><blockquote><p>第一行：从tmp里面读取前64个字节到tmp1中<br>第二行：从regfile里面读取8192个字节(其实就是8K)到tmp2中（.reg文件本来是没有8K Byte的，但是在这里，被填充到8K Byte了）；这样做是因为：想把reg文件固定一个范围，不想把它设定为一个动态的大小。<br>第三行：从tmp文件拷贝到输出文件，输出文件跳过前8256字节，生成tmp3</p></blockquote></blockquote></blockquote><blockquote><p>所以：</p><blockquote><p>tmp1就是：tmp的前64个字节；就是一些符号位，相当于一些头部。<br>tmp2就是：.reg文件被吹大到8192字节(8K Byte)；就是寄存器配置的主体。<br>tmp3就是：tmp文件拷贝到输出文件，输出文件跳过前8256字节，生成tmp3；tmp3文件大小就是tmp文件的大小 + 8256字节；就是：未压缩的Uboot的第一阶段 + 原始Uboot的压缩版。</p></blockquote></blockquote><blockquote><p>后面：</p><blockquote><p>把tmp1，tmp2，tmp3合并在一起，就申城额Uboot-z.bin文件<br>最后的bin文件，其实就是tmp1+tmp2+tmp3，分为3段，这个就是最终的uboot.bin了<br>可以发现，为什么要腾出8256字节，是因为：8192+64=8256，为了方便放置前面的2个文件<br>镜像大小：64+8192+temp3大小 = 8256+temp3大小</p></blockquote></blockquote><h3 id="1-3-分析过程的关键记录"><a href="#1-3-分析过程的关键记录" class="headerlink" title="1.3 分析过程的关键记录"></a>1.3 分析过程的关键记录</h3><ul><li>image_data.gzip：其实就是第一次编译出来的老版本u-boot.bin进过gzip压缩后的压缩文件</li></ul><blockquote><p>分析：以前老版本的U-boot是编译完就直接丢进去运行了，这里呢，还进行了压缩，可以解释的一个原因就是U-boot太大了</p></blockquote><ul><li>分析：uboot.bin被压缩肯定带来2个问题：<blockquote><blockquote><p>1.uboot执行时肯定要解压缩再执行</p></blockquote></blockquote></li></ul><blockquote><blockquote><p>2.最终烧录到emmc中去执行的uboot，肯定有一段是未经过压缩的；肯定有一段解压代码在外部，没有进行压缩。</p></blockquote></blockquote><ul><li><p>最终版本的uboot是链接到0x80700000地址的</p><blockquote><blockquote><p>所以将来最终版本的U-boot一定要被加载到这个地址去运行，否则就会出现运行地址和链接地址不正确，导致运行不了</p></blockquote></blockquote></li><li><p>uboot.elf的内容：前面都是未经压缩的uboot第一阶段，后面是被压缩的原版uboot镜像</p><blockquote><p>前面：eMMC直接Load 24K的文件</p></blockquote></li></ul><blockquote><p>后面：后面是因为第二阶段才会被拉过来用</p></blockquote><ul><li><p>所以：</p><blockquote><blockquote><p>tmp1就是：tmp的前64个字节；就是一些符号位，相当于一些头部。<br>tmp2就是：.reg文件被吹大到8192字节(8K Byte)；就是寄存器配置的主体。<br>tmp3就是：tmp文件拷贝到输出文件，输出文件跳过前8256字节，生成tmp3；tmp3文件大小就是tmp文件的大小 + 上8256字节；就是：未压缩的Uboot的第一阶段 + 原始Uboot的压缩版。</p></blockquote></blockquote></li><li><p>后面：</p><blockquote><blockquote><p>把tmp1，tmp2，tmp3合并在一起，就申城额Uboot-z.bin文件<br>最后的bin文件，其实就是tmp1+tmp2+tmp3，分为3段，这个就是最终的uboot.bin了<br>可以发现，为什么要腾出8256字节，是因为：8192+64=8256，为了方便放置前面的2个文件<br>镜像大小：64+8192+temp3大小 = 8256+temp3大小</p></blockquote></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_14_Uboot的一般分析</title>
      <link href="/2021/10/20/hi3516dv300-14-uboot-de-yi-ban-fen-xi/"/>
      <url>/2021/10/20/hi3516dv300-14-uboot-de-yi-ban-fen-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="一、关于Uboot的说明"><a href="#一、关于Uboot的说明" class="headerlink" title="一、关于Uboot的说明"></a>一、关于Uboot的说明</h2><p><img src="https://pic.huangruimin.tech/20220205142127.png"></p><blockquote><p>这个Uboot使用的是2016.11的版本</p></blockquote><blockquote><p>最大的更新为引入了make，menuconfig这一套</p></blockquote><blockquote><p>BL0是芯片内部的BootROM (irom) 代码，BL1就是Uboot源码，BL2就是Kernel代码，根文件系统系统这些属于BL3。</p></blockquote><blockquote><p>BL0会根据我们设置的启动方式，到相应的外部介质里面去读取BL1，然后来启动这个BL1。</p></blockquote><blockquote><p>能够下载Uboot是因为有BL0固化在板子里面了。</p></blockquote><blockquote><p>能够下载Kernel，Rootfs是因为有Uboot的FastBoot功能已经支持Hi Tool了，Uboot必须提供FastBoot功能。</p></blockquote><blockquote><p>Uboot能够启动内核，并且给内核传参</p></blockquote><blockquote><p>Uboot整个启动分为两大阶段：</p></blockquote><blockquote><blockquote><p>第一阶段：Start.s 里面，这个主要是跟芯片有关的，跟系统有关的，这个阶段的差异是最大的。</p></blockquote></blockquote><blockquote><blockquote><p>第二阶段：跳到C语言里面，StartARMBoot，这个函数主要是在board.c里面，板级初始化，是开发板这个级别的初始化，往后都是纯软件初始化。</p></blockquote></blockquote><blockquote><p>配置文件：配置文件都是相同的，指的是配置文件在哪些地方<br>代码结构：Uboot中文件夹的结构，也都是类似的<br>启动流程：启动流程，都是分为两大块：Start.s，Board.c<br>纯软件部分：跟硬件无关的软件功能</p></blockquote><blockquote><p>现在来讲：</p><blockquote><p>如果在产品厂商：Uboot的工作量一般是不大的，因为芯片厂商给的Uboot基本就能用了；需要自己修改的部分并不是很多。<br>对芯片厂商底层开发者来说：需要一个开机动画的logo，需要一个分辨率很高的logo，那么就需要在Uboot里面作修改了。</p></blockquote></blockquote><blockquote><p>本课程详解uboot第一阶段，这一阶段，有比较多的内容是依赖海思这个平台的。</p></blockquote><h2 id="二、Uboot2016-11的一般分析"><a href="#二、Uboot2016-11的一般分析" class="headerlink" title="二、Uboot2016.11的一般分析"></a>二、Uboot2016.11的一般分析</h2><h3 id="2-1-删除Uboot中一些非必要的源码，然后就只留下ARM的源码"><a href="#2-1-删除Uboot中一些非必要的源码，然后就只留下ARM的源码" class="headerlink" title="2.1 删除Uboot中一些非必要的源码，然后就只留下ARM的源码"></a>2.1 删除Uboot中一些非必要的源码，然后就只留下ARM的源码</h3><h4 id="2-1-1-uboot-arch-路径"><a href="#2-1-1-uboot-arch-路径" class="headerlink" title="2.1.1 uboot/arch/路径"></a>2.1.1 uboot/arch/路径</h4><ul><li>首先是arch路径下，只留下ARM的源码</li></ul><p><img src="https://pic.huangruimin.tech/20220205143520.png"></p><ul><li>接着是arch/arm/路径下，只留下mach-hi35xx的源码</li></ul><p><img src="https://pic.huangruimin.tech/20220205143815.png"></p><ul><li>然后是arch/cpu/路径下，只留下armv7，armv7m，一般的话，只留下armv7</li></ul><p><img src="https://pic.huangruimin.tech/20220205144510.png"></p><ul><li>然后是arch/cpu/armv7路径下，只是留下Hi3516DV300这个</li></ul><p><img src="https://pic.huangruimin.tech/20220205144708.png"></p><p><img src="https://pic.huangruimin.tech/20220205144950.png"></p><p><img src="https://pic.huangruimin.tech/20220205145003.png"></p><h4 id="2-1-2-uboot-board-路径"><a href="#2-1-2-uboot-board-路径" class="headerlink" title="2.1.2 uboot/board/路径"></a>2.1.2 uboot/board/路径</h4><ul><li>首先是board路径下，只留hisilicon文件夹，其余全部删掉</li></ul><p><img src="https://pic.huangruimin.tech/20220205145230.png"></p><ul><li>接着是board/hisilicon路径下，只留hi3516dv300文件夹，其余全部删掉</li></ul><h4 id="2-1-3-uboot-configs-路径"><a href="#2-1-3-uboot-configs-路径" class="headerlink" title="2.1.3 uboot/configs/路径"></a>2.1.3 uboot/configs/路径</h4><blockquote><p>只留下Hi3516DV300相关的配置文件，其余都删掉</p></blockquote><blockquote><p>其实也只是能用到emmc_defconfig这个文件，其余的文件也用不到</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205145544.png"></p><blockquote><p>实际上，uBoot也没有使用到设备树功能</p></blockquote><h4 id="2-1-4-uboot-include-路径"><a href="#2-1-4-uboot-include-路径" class="headerlink" title="2.1.4 uboot/include/路径"></a>2.1.4 uboot/include/路径</h4><ul><li>首先是uboot/include/configs/路径，只保留与海思有关的文件</li></ul><p><img src="https://pic.huangruimin.tech/20220205150404.png"></p><ul><li>然后是uboot/include//路径下还有一个也要删除，暂时的话，还没有删除</li></ul><h3 id="2-2-建立Uboot源码浏览工程"><a href="#2-2-建立Uboot源码浏览工程" class="headerlink" title="2.2 建立Uboot源码浏览工程"></a>2.2 建立Uboot源码浏览工程</h3><blockquote><p>分析源码的这一份，要纯源码的，要没有编译过的</p></blockquote><blockquote><p>并要注意解析</p></blockquote><blockquote><p>用VSCode也是可以浏览的</p></blockquote><h3 id="2-3-uboot的配置体系，-config和xxxx-h共同作用"><a href="#2-3-uboot的配置体系，-config和xxxx-h共同作用" class="headerlink" title="2.3 uboot的配置体系，.config和xxxx.h共同作用"></a>2.3 uboot的配置体系，.config和xxxx.h共同作用</h3><blockquote><p>以前只有采用.h来配置，现在可以使用.cofig+.h来共同进行配置</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205151353.png"></p><blockquote><p>将来还需要将顶层目录的的configs下的defaultconfig复制为.config文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205151442.png"></p><blockquote><p>后面在分析源码的时候，有很多东西都是来自于.config文件中，和kernel中的玩法是一样的</p></blockquote><h3 id="2-4-顶层目录的Makefile"><a href="#2-4-顶层目录的Makefile" class="headerlink" title="2.4 顶层目录的Makefile"></a>2.4 顶层目录的Makefile</h3><blockquote><p>主体依然在此</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205151741.png"></p><h3 id="2-5-链接脚本lds文件"><a href="#2-5-链接脚本lds文件" class="headerlink" title="2.5 链接脚本lds文件"></a>2.5 链接脚本lds文件</h3><blockquote><p>寻找整个uboot入口的关键，链接脚本里面规定了entry是谁等等</p></blockquote><blockquote><p>第一句代码从哪里开始，很大程度上，就是取决于这里</p></blockquote><h3 id="2-6-新增的2个关键点"><a href="#2-6-新增的2个关键点" class="headerlink" title="2.6 新增的2个关键点"></a>2.6 新增的2个关键点</h3><blockquote><p>和以前的Uboot的差异：</p></blockquote><blockquote><blockquote><p>两段式的Uboot：直接编译的Uboot不能用，还得经过一次Uboot-z才行，还要进行二次制作，也就是用那个excel表格生成一个.reg文件，现在很多平台，比如全志，也都会采用这种两段式的Uboot的方式。</p></blockquote></blockquote><blockquote><p>压缩版的uboot</p></blockquote><blockquote><blockquote><p>前几节中有一步就是编译一个hi_gzip的工具进行压缩，就是把原版的Uboot进行了压缩，然后再去做这种两段式的Uboot</p></blockquote></blockquote><blockquote><blockquote><p>这种技术以前也没有涉及，这个就是Linux Kernel中的ZImage技术</p></blockquote></blockquote><blockquote><blockquote><p>Linux Kernel是一个宝藏，基本很多技术都在抄袭Linux Kernel</p></blockquote></blockquote><h2 id="三、本课程会用到的技术和资料"><a href="#三、本课程会用到的技术和资料" class="headerlink" title="三、本课程会用到的技术和资料"></a>三、本课程会用到的技术和资料</h2><blockquote><p>关键是基本功，也就是核心课程1期中uboot移植课程里手把手培养的，这个在核心课程1期中占了很大的比例，因为Uboot能很大程度上提升基本功</p></blockquote><blockquote><p>主体信息在源码中，比如makefile、config文件等等</p></blockquote><blockquote><p>要配合芯片数据手册，海思官方doc中提供了一个简化版本的，详细版的没有，因为国内的芯片厂商习惯上把核心的源码直接给你，告诉你直接这样用就可以了，需要查阅的细节也不是很多，给个冗余的数据手册并不方便查阅</p></blockquote><blockquote><p>本来需要irom application note的，这个会告诉你芯片里面的BL0是做了什么事情，三星是有这个文档，海思是没有， 因为他不希望你关注这些细节。他希望你拿来就用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_13_配套SDK中提供的Rootfs分析</title>
      <link href="/2021/10/19/hi3516dv300-13-pei-tao-sdk-zhong-ti-gong-de-rootfs-fen-xi/"/>
      <url>/2021/10/19/hi3516dv300-13-pei-tao-sdk-zhong-ti-gong-de-rootfs-fen-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="一配套SDK中提供的rootfs构建分析1-2"><a href="#一配套SDK中提供的rootfs构建分析1-2" class="headerlink" title="一配套SDK中提供的rootfs构建分析1_2"></a>一配套SDK中提供的rootfs构建分析1_2</h2><h3 id="1-1-默认镜像中根文件系统内容解析"><a href="#1-1-默认镜像中根文件系统内容解析" class="headerlink" title="1.1 默认镜像中根文件系统内容解析"></a>1.1 默认镜像中根文件系统内容解析</h3><h4 id="1-1-1-烧录了默认镜像进入系统后"><a href="#1-1-1-烧录了默认镜像进入系统后" class="headerlink" title="1.1.1 烧录了默认镜像进入系统后"></a>1.1.1 烧录了默认镜像进入系统后</h4><p><img src="https://pic.huangruimin.tech/20220205094548.png"></p><h4 id="1-1-2-进入到bin目录中，宾目录中大部分是busybox的文件"><a href="#1-1-2-进入到bin目录中，宾目录中大部分是busybox的文件" class="headerlink" title="1.1.2 进入到bin目录中，宾目录中大部分是busybox的文件"></a>1.1.2 进入到bin目录中，宾目录中大部分是busybox的文件</h4><p><img src="https://pic.huangruimin.tech/20220205094642.png"></p><p><img src="https://pic.huangruimin.tech/20220205094655.png"></p><blockquote><p>上图中，绿色的，应该是其它某些地方来的，而不是默认的busybox中的东西</p></blockquote><h4 id="1-1-3-komod"><a href="#1-1-3-komod" class="headerlink" title="1.1.3 komod"></a>1.1.3 komod</h4><blockquote><p>ko应该就是去insmod去安装的那个模块</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205095018.png"></p><blockquote><p>里面是空的</p></blockquote><h4 id="1-1-4-mnt"><a href="#1-1-4-mnt" class="headerlink" title="1.1.4 mnt"></a>1.1.4 mnt</h4><blockquote><p>这个也是一个空目录，因为这只是一个挂载点</p></blockquote><h4 id="1-1-5-share"><a href="#1-1-5-share" class="headerlink" title="1.1.5 share"></a>1.1.5 share</h4><blockquote><p>share目录也是一个空的</p></blockquote><h4 id="1-1-6-usr"><a href="#1-1-6-usr" class="headerlink" title="1.1.6 usr"></a>1.1.6 usr</h4><p><img src="https://pic.huangruimin.tech/20220205095309.png"></p><ul><li><p>usr目录下不是空的，是有东西的，并且还有不少的东西</p></li><li><p>bin：肯定也是busybox生成的一些符号链接</p></li></ul><p><img src="https://pic.huangruimin.tech/20220205101503.png"></p><blockquote><p>除了btools和RpHicom不是默认就有的之外，其它都是</p></blockquote><ul><li><p>lib：里面应该是一些库文件</p></li><li><p>ko：里面有好多东西</p></li></ul><p><img src="https://pic.huangruimin.tech/20220205095556.png"></p><blockquote><p>这些其实就是芯片里面所用到的那些库，都是mpp相关的库<br>hi3516dv300_ive.ko：就是图像视频AI处理相关的<br>这些ko呢是本来就有的，这些是从SDK里面复制过来的<br>这些ko文件位于SDK的以下位置，实际上就是从这个位置原封不动地拷贝过来的：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205100336.png"></p><blockquote><p>注意看有3个脚本，脚本里面就是去insmod这些模块，重启开机就可以观察出来</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205100622.png"></p><blockquote><p>这里面有些是属于触摸的驱动的，在这个平台，默认移植了两个电容触摸屏的驱动，如下图：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205100834.png"></p><blockquote><p>这里也有一些是和网络有关的驱动</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205101417.png"></p><ul><li>libexec</li></ul><p><img src="https://pic.huangruimin.tech/20220205101738.png"></p><blockquote><p>这里存放的是运行时库，一个是ftp的server，一个是ssh的server，ssh的server是用来生成key的</p></blockquote><ul><li>qt5.12</li></ul><blockquote><p>这里已经默认移植了qt5.12，将来如果要基于Qt5.12来开发程序，那么根文件系统里面就已经提供了，这里的这些文件，也都比较大</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205102209.png"></p><p><img src="https://pic.huangruimin.tech/20220205102522.png"></p><ul><li>sbin</li></ul><p><img src="https://pic.huangruimin.tech/20220205102945.png"></p><blockquote><p>这里存放的也是和busybox有关的符号链接<br>bin和sbin的区别：sbin一般是给网络系统管理员使用的；bin一般是给用户使用的</p></blockquote><ul><li>share</li></ul><blockquote><p>share也一定是一个空目录</p></blockquote><ul><li>include</li></ul><p><img src="https://pic.huangruimin.tech/20220205103131.png"></p><blockquote><p>里面是安装一些什么东西的头文件，比如OpenSSL与Zlib，这些东西呢，其实可有可无</p></blockquote><blockquote><p>在开发板上面，只是用来做执行，而不用来做开发，做开发编译就要用到这些头文件</p></blockquote><ul><li>lib</li></ul><p><img src="https://pic.huangruimin.tech/20220205103613.png"></p><blockquote><p>lib是拷贝的SDK中的动态链接库</p></blockquote><blockquote><p>其中编译工具的动态链接库是在外面的</p></blockquote><blockquote><p>lib动态链接库是位于SDK中的以下路径</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205104109.png"></p><blockquote><p>ko是内核模块，这些和驱动是相互联系的，ko是将来要insmod到内核内部的</p></blockquote><blockquote><p>so跟用户程序一样，是工作在用户态的</p></blockquote><ul><li>local</li></ul><p><img src="https://pic.huangruimin.tech/20220205104411.png"></p><blockquote><p>local里面有bin和etc</p></blockquote><blockquote><blockquote><p>bin：bin里面也是一些简单程序，如下图所示：<br>基本都是ssh，ftp，scp，openssl相关的程序，基本是移植的第三方的功能的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205104522.png"></p><blockquote><blockquote><p>etc：etc里面基本都是与ssh相关的public key</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205105102.png"></p><ul><li>sample</li></ul><blockquote><p>sample里面放的就是我们的应用程序</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205105228.png"></p><blockquote><p>其实这个sample应用程序也是来自于SDK的以下路径</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205105317.png"></p><blockquote><p>svp就是图像的智能识别相关的东西<br>region就是图像的region相关的功能<br>hifb：就是直接把彩色图像直接输出出去的功能<br>如果基于海思芯片来开发一些应用程序，一般是先看懂sample，然后基于sample来开发新功能</p></blockquote><ul><li>script</li></ul><p><img src="https://pic.huangruimin.tech/20220205110021.png"></p><blockquote><p>script里面存放的就是一些测试脚本</p></blockquote><ul><li>tools</li></ul><p><img src="https://pic.huangruimin.tech/20220205110138.png"></p><blockquote><p>里面存放的是一些工具，这些工具，确实是海思SDK里面本来就有的</p></blockquote><blockquote><p>这些工具位于海思SDK的以下位置：</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205110249.png"></p><h4 id="1-1-7-boot"><a href="#1-1-7-boot" class="headerlink" title="1.1.7 boot"></a>1.1.7 boot</h4><blockquote><p>boot里面是空的</p></blockquote><h4 id="1-1-8-lib"><a href="#1-1-8-lib" class="headerlink" title="1.1.8 lib"></a>1.1.8 lib</h4><blockquote><p>lib就是复制的动态链接库里面的那个lib</p></blockquote><h4 id="1-1-9-nfsroot"><a href="#1-1-9-nfsroot" class="headerlink" title="1.1.9 nfsroot"></a>1.1.9 nfsroot</h4><blockquote><p>一个空白的挂载点</p></blockquote><h4 id="1-1-10-sharefs"><a href="#1-1-10-sharefs" class="headerlink" title="1.1.10 sharefs"></a>1.1.10 sharefs</h4><blockquote><p>这个也是空的</p></blockquote><h4 id="1-1-11-var"><a href="#1-1-11-var" class="headerlink" title="1.1.11 var"></a>1.1.11 var</h4><blockquote><p>这是一个虚拟文件系统，在该文件夹里面有以下东西，在Ubuntu里面也是有的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205110747.png"></p><h4 id="1-1-12-dev"><a href="#1-1-12-dev" class="headerlink" title="1.1.12 dev"></a>1.1.12 dev</h4><blockquote><p>虚拟的设备文件，里面有以下东西</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205110919.png"></p><blockquote><p>上面有些，是在安装那些ko文件的时候生成的</p></blockquote><blockquote><p>本身就是驱动，经过安装后，就会有那些设备文件</p></blockquote><h4 id="1-1-13-linuxrc"><a href="#1-1-13-linuxrc" class="headerlink" title="1.1.13 linuxrc"></a>1.1.13 linuxrc</h4><blockquote><p>linuxrc就是busybox的符号链接</p></blockquote><h4 id="1-1-14-opt"><a href="#1-1-14-opt" class="headerlink" title="1.1.14 opt"></a>1.1.14 opt</h4><blockquote><p>opt也是一个挂载点，也是空的</p></blockquote><h4 id="1-1-15-sys"><a href="#1-1-15-sys" class="headerlink" title="1.1.15 sys"></a>1.1.15 sys</h4><blockquote><p>是一个高版本的虚拟文件系统，是用来做调试用的</p></blockquote><h4 id="1-1-16-etc"><a href="#1-1-16-etc" class="headerlink" title="1.1.16 etc"></a>1.1.16 etc</h4><blockquote><p>里面有很多动态运行时的脚本</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205111246.png"></p><blockquote><p>除了本身文件系统就有的东西，还多了</p><blockquote><p>ssl：也就是openssl里面的一些配置文件<br>ppp：应该是支持了ppp拨号，属于4G的功能<br>wireless：无线网卡<br>dhcpcd.conf：移植了dhcp功能<br>包括network在内，都是和网络通信相关的</p></blockquote></blockquote><h4 id="1-1-17-proc"><a href="#1-1-17-proc" class="headerlink" title="1.1.17 proc"></a>1.1.17 proc</h4><blockquote><p>标准的linux调试文件</p></blockquote><h4 id="1-1-18-tmp"><a href="#1-1-18-tmp" class="headerlink" title="1.1.18 tmp"></a>1.1.18 tmp</h4><blockquote><p>也是一个标准的虚拟文件系统</p></blockquote><h4 id="1-1-19-home"><a href="#1-1-19-home" class="headerlink" title="1.1.19 home"></a>1.1.19 home</h4><blockquote><p>这是用来放用户相关的</p></blockquote><h4 id="1-1-20-mkimg-rootfs，mknod-consol"><a href="#1-1-20-mkimg-rootfs，mknod-consol" class="headerlink" title="1.1.20 mkimg.rootfs，mknod_consol"></a>1.1.20 mkimg.rootfs，mknod_consol</h4><blockquote><p>创建根文件夹形式的根文件系统</p></blockquote><blockquote><p>mknod：这个是用来mknod用的</p></blockquote><h4 id="1-1-21-root"><a href="#1-1-21-root" class="headerlink" title="1.1.21 root"></a>1.1.21 root</h4><blockquote><p>这个是root用户的宿主目录</p></blockquote><h4 id="1-1-22-usr"><a href="#1-1-22-usr" class="headerlink" title="1.1.22 usr"></a>1.1.22 usr</h4><blockquote><p>这里面也是没有实现的，这里面只有一个回收用的文件夹</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205112326.png"></p><h4 id="1-1-23-init"><a href="#1-1-23-init" class="headerlink" title="1.1.23 init"></a>1.1.23 init</h4><blockquote><p>这个也属于符号链接，也是指向busybox的</p></blockquote><h4 id="1-1-24-sbin"><a href="#1-1-24-sbin" class="headerlink" title="1.1.24 sbin"></a>1.1.24 sbin</h4><blockquote><p>这个是属于系统管理员用到的一些</p></blockquote><blockquote><p>大部分都还是系统管理员用到的符号链接</p></blockquote><blockquote><p>少部分是用来连接网卡用到的，用户自己生成的bin</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205112629.png"></p><h4 id="1-1-25-userdata"><a href="#1-1-25-userdata" class="headerlink" title="1.1.25 userdata"></a>1.1.25 userdata</h4><blockquote><p>这个user.conf肯定是在系统启动的时候，去加载了</p></blockquote><blockquote><p>这个就是运行时配置体系，把这个文件丢到etc下也是可以的</p></blockquote><blockquote><p>这个强调的是用户的配置，而/etc强调的是系统的配置</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205112845.png"></p><h3 id="1-2配套SDK解压开后rootfs构建上文件解析"><a href="#1-2配套SDK解压开后rootfs构建上文件解析" class="headerlink" title="1.2配套SDK解压开后rootfs构建上文件解析"></a>1.2配套SDK解压开后rootfs构建上文件解析</h3><h4 id="1-2-1-make-sh文件分析"><a href="#1-2-1-make-sh文件分析" class="headerlink" title="1.2.1 make.sh文件分析"></a>1.2.1 make.sh文件分析</h4><ul><li>首先查看make.sh文件</li></ul><p><img src="https://pic.huangruimin.tech/20220205113315.png"></p><blockquote><p>打开make.sh</p><blockquote><p>里面制作根文件系统最重要的就是用到了这个：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205113430.png"></p><blockquote><p>前面这些东西就不说了，和有的没的没啥区别，主要看下面这一段</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205113632.png"></p><blockquote><p>最核心的，也就是多了以下命令文件：</p><blockquote><p>关键是执行了：source cp2rootfs.sh</p></blockquote></blockquote><ul><li>文件夹查看</li></ul><blockquote><p>这个文件在哪里呢？</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205114140.png"></p><blockquote><p>生成rootfs的文件夹已经有一些东西了，ko文件夹下面也有些东西了，所以这个是整个做完了再打了一个包的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205114459.png"></p><blockquote><p>其实默认的SDK也只有以下3个文件夹，其它的都是移植过来的</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205115127.png"></p><blockquote><p>在Package文件夹下面有以下文件，这个也是事先经过交叉编译了</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205115306.png"></p><ul><li>接下来重点分析cp2rootfs.sh文件</li></ul><blockquote><p>新建文件夹</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205115715.png"></p><blockquote><p>拷贝编译好的OpenSSH</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205115833.png"></p><p><img src="https://pic.huangruimin.tech/20220205120115.png"></p><blockquote><p>拷贝rootfs-custom</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205120811.png"></p><blockquote><p>拷贝dhcpcd</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205121044.png"></p><blockquote><p>拷贝Qt</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205121106.png"></p><p><img src="https://pic.huangruimin.tech/20220205121300.png"></p><blockquote><p>拷贝ko文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205121830.png"></p><blockquote><p>拷贝lib文件</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205121850.png"></p><blockquote><p>拷贝reg_tool文件</p><blockquote><p>这个是用来读取寄存器的一个工具，这下面的工具都是可以直接用的，直接和内核进行交互的<br>himm：Hision Memory Modify<br>ARM里面的寄存器，其实就是一个内存地址<br>应用层想读写某个寄存器，直接使用这个工具就够了<br>这都是海思提供的，能够直接进行硬件操作的工具</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205122144.png"></p><p><img src="https://pic.huangruimin.tech/20220205122429.png"></p><blockquote><p>拷贝RpHicom文件</p><blockquote><p>这个是用串口来控制RS485用的<br>单独的一个RS485通信的一个程序</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205122217.png"></p><blockquote><p>拷贝dump工具文件</p><blockquote><p>Dump其实就是反汇编，这里其实是为了获取某个图像使用的</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205122953.png"></p><blockquote><p>拷贝Sample</p><blockquote><p>这个是拷贝mpp里面的sample，并且是先创建文件夹，然后再进行Copy</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220205123117.png"></p><p><img src="https://pic.huangruimin.tech/20220205123233.png"></p><blockquote><p>拷贝测试脚本</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205123306.png"></p><blockquote><p>创建userdata与user文件夹</p></blockquote><p><img src="https://pic.huangruimin.tech/20220205123356.png"></p><ul><li>接下来，创建了一个/dev/shm文件夹</li></ul><p><img src="https://pic.huangruimin.tech/20220205123604.png"></p><ul><li>然后，再额外拷贝一些文件</li></ul><p><img src="https://pic.huangruimin.tech/20220205123638.png"></p><ul><li>最后，制作根文件系统</li></ul><p><img src="https://pic.huangruimin.tech/20220205123721.png"></p><h4 id="1-2-2-如何自己来单独构建这个根文件系统呢？"><a href="#1-2-2-如何自己来单独构建这个根文件系统呢？" class="headerlink" title="1.2.2 如何自己来单独构建这个根文件系统呢？"></a>1.2.2 如何自己来单独构建这个根文件系统呢？</h4><ul><li>要传哪个参数</li></ul><p><img src="https://pic.huangruimin.tech/20220205124000.png"></p><ul><li>具体怎么执行呢？</li></ul><p><img src="https://pic.huangruimin.tech/20220205124205.png"></p><p><img src="https://pic.huangruimin.tech/20220205124233.png"></p><ul><li>最后生成的根文件系统在什么地方呢？</li></ul><p><img src="https://pic.huangruimin.tech/20220205124407.png"></p><p><img src="https://pic.huangruimin.tech/20220205124426.png"></p><p><img src="https://pic.huangruimin.tech/20220205124631.png"></p><ul><li>后续如何修改呢？</li></ul><blockquote><p>就是修改make.sh脚本文件</p></blockquote><blockquote><p>海思的这种玩法确实有它的套路</p></blockquote><ul><li>后续：驱动，mpp，svp，ive</li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_12_自制Rootfs实战记录</title>
      <link href="/2021/10/18/hi3516dv300-12-zi-zhi-rootfs-shi-zhan-ji-lu/"/>
      <url>/2021/10/18/hi3516dv300-12-zi-zhi-rootfs-shi-zhan-ji-lu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>主要查阅第三部分前面，以及第四部分</p></blockquote><h2 id="一、-教程中的实战"><a href="#一、-教程中的实战" class="headerlink" title="一、 教程中的实战"></a>一、 教程中的实战</h2><h3 id="1-1-解压rootfs"><a href="#1-1-解压rootfs" class="headerlink" title="1.1 解压rootfs"></a>1.1 解压rootfs</h3><ul><li>先解压rootfs<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span class="token function">cp</span> <span class="token punctuation">..</span>/rootfs_scripts/rootfs.tgz ./<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> rootfs.tgz<span class="token function">mv</span> ./rootfs ./rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>这个时候，在/etc的目录下，已经有相关的配置文件了</p></blockquote><h3 id="1-2-编译busybox"><a href="#1-2-编译busybox" class="headerlink" title="1.2 编译busybox"></a>1.2 编译busybox</h3><ul><li><p>然后解压busybox</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> busybox-1.26.2.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>进busybox里面去配置.config文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2<span class="token function">cp</span> ./config_v200_a7_softfp_neon ./.config<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>执行menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这一步，其实也是在生成.config<br>一定要注意先load文件.config<br>然后什么都不做，然后退出<br>默认是不用做这一个步骤的</p></blockquote></li><li><p>编译的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="1-3-安装busybox"><a href="#1-3-安装busybox" class="headerlink" title="1.3 安装busybox"></a>1.3 安装busybox</h3><h4 id="1-3-1-默认的安装方式"><a href="#1-3-1-默认的安装方式" class="headerlink" title="1.3.1 默认的安装方式"></a>1.3.1 默认的安装方式</h4><ul><li>默认安装的命令<blockquote><p>默认的脚本采用这种方式，但是实际上，一般不采用这种方式<br>这种默认安装方式放到的路径是./_install</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h4 id="1-3-2-这次流程采用的安装方式"><a href="#1-3-2-这次流程采用的安装方式" class="headerlink" title="1.3.2 这次流程采用的安装方式"></a>1.3.2 这次流程采用的安装方式</h4><blockquote><p>朱有鹏视频教程中主要采用这种安装方式：</p></blockquote><ul><li><p>首先配置menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后一定要记得先load这个文件.config</p></li><li><p>选中Busybox Setting后回车</p></li><li><p>选中(./_install) BusyBox installation prefix后回车</p></li><li><p>然后填写路径：解压rootfs的路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意在删除已经填写的路径过程中，要按下Ctrl+Backspace才能正常删除<br>粘贴也是要按下Ctrl+鼠标右键Paste</p></blockquote></li><li><p>最后执行安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>检验是否安装成功</p><blockquote><p>就是查看bin目录下是否成功生成了相关二进制可执行文件<br>如果有生成二进制可执行文件，说明busybox成功安装了</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin<span class="token function">ls</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="1-4-复制动态链接库"><a href="#1-4-复制动态链接库" class="headerlink" title="1.4 复制动态链接库"></a>1.4 复制动态链接库</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token function">cp</span> /opt/hisi-linux/x86-arm/arm-himix200-linux/runtime_glibc/a7_softfp_neon-vfpv4/lib.tgz ./<span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> lib.tgz<span class="token builtin class-name">cd</span> lib/<span class="token function">ls</span> <span class="token parameter variable">-ahl</span><span class="token builtin class-name">cd</span> <span class="token punctuation">..</span><span class="token function">ls</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./lib.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意在解压的过程中，直接就覆盖了目标路径下的文件<br>如果出现动态链接库，那么就说明复制成功了<br>并且可以发现，有一些是符号链接</p></blockquote><h3 id="1-5-用Strip精简体积，节省空间用"><a href="#1-5-用Strip精简体积，节省空间用" class="headerlink" title="1.5 用Strip精简体积，节省空间用"></a>1.5 用Strip精简体积，节省空间用</h3><blockquote><p>但是因为我们使用的是EMMC，不用在乎这点空间，所以就没有做这一步了</p></blockquote><h3 id="1-6-最后，生成文件系统"><a href="#1-6-最后，生成文件系统" class="headerlink" title="1.6 最后，生成文件系统"></a>1.6 最后，生成文件系统</h3><ul><li><p>首先得编译生成make_ext4fs并且复制到目标路径</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils<span class="token function">make</span><span class="token builtin class-name">cd</span> bin<span class="token function">cp</span> ./make_ext4fs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>然后回到制作目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>最后就开始制作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./make_ext4fs <span class="token parameter variable">-l</span> 200M <span class="token parameter variable">-s</span> build_rootfs_hi3516dv300.ext4 rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>检查一下大小</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">file</span> ./build_rootfs_hi3516dv300.ext4<span class="token function">du</span> <span class="token parameter variable">-h</span> ./build_rootfs_hi3516dv300.ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>也就才59M，说明-l这个参数，只是划定最大的大小而已，本来是多大，就是多大，并不会填充空内容<br>到这一步，就制作完成了</p></blockquote></li></ul><h2 id="二、烧写根文件系统"><a href="#二、烧写根文件系统" class="headerlink" title="二、烧写根文件系统"></a>二、烧写根文件系统</h2><h3 id="2-1-烧写成功截图"><a href="#2-1-烧写成功截图" class="headerlink" title="2.1 烧写成功截图"></a>2.1 烧写成功截图</h3><p><img src="https://pic.huangruimin.tech/20211230185113.png"></p><h3 id="2-2-相关说明"><a href="#2-2-相关说明" class="headerlink" title="2.2 相关说明"></a>2.2 相关说明</h3><h4 id="2-2-1-相关文件夹说明"><a href="#2-2-1-相关文件夹说明" class="headerlink" title="2.2.1 相关文件夹说明"></a>2.2.1 相关文件夹说明</h4><blockquote><p>进入到根目录底下来了</p></blockquote><blockquote><p>在bin目录下有相关的应用程序</p></blockquote><blockquote><p>在lib目录下有相应的动态库</p></blockquote><blockquote><p>在etc目录下可以看到相关的配置脚本，/etc/init.d/rcS，也都是共用的，/bin/mount -a，挂载的就是init table</p></blockquote><blockquote><p>的dev目录下可以看到相关的设备文件，说明mdev也工作了</p></blockquote><blockquote><p>ifconfig eth0 192.168.31.14，这样一来，网口也工作了，说明之前kernel里面的网卡设置，也是工作的</p></blockquote><blockquote><p>这仅仅是一个最小的根文件系统</p></blockquote><h4 id="2-2-2-少了的相关驱动"><a href="#2-2-2-少了的相关驱动" class="headerlink" title="2.2.2 少了的相关驱动"></a>2.2.2 少了的相关驱动</h4><blockquote><p>/dev/input：只有一个mice</p></blockquote><blockquote><p>少了相关的测试程序</p></blockquote><blockquote><p>少了mpp相关的编解码应用程序</p></blockquote><blockquote><p>后面相关的内容操作也就在：cp2rootfs.sh中</p></blockquote><h4 id="2-2-3-在rcS里面做了什么"><a href="#2-2-3-在rcS里面做了什么" class="headerlink" title="2.2.3 在rcS里面做了什么"></a>2.2.3 在rcS里面做了什么</h4><p><img src="https://pic.huangruimin.tech/20220204220914.png"></p><p><img src="https://pic.huangruimin.tech/20220204220953.png"></p><p><img src="https://pic.huangruimin.tech/20220204221258.png"></p><p><img src="https://pic.huangruimin.tech/20220204221438.png"></p><blockquote><p>S00devs里面的，这个在手动创建根文件系统的时候，也干过，尤其是console，null这个干过，其实就是创建字符设备的主设备号与次设备号</p></blockquote><blockquote><p>S01udev里面的，主要是创建了udev，创建了虚拟文件系统，然后去挂载</p></blockquote><blockquote><p>S80network里面，是和网络有关的，/proc/cmdline，即为传参文件，即通过bootargs传参的时候，有没有传ipinfo，如果有就读进来，通过ifconfig去设定它，并打印出来，否则就算了。</p></blockquote><h2 id="三、全程编译的流程"><a href="#三、全程编译的流程" class="headerlink" title="三、全程编译的流程"></a>三、全程编译的流程</h2><h3 id="3-1首先要下载的软件"><a href="#3-1首先要下载的软件" class="headerlink" title="3.1首先要下载的软件"></a>3.1首先要下载的软件</h3><blockquote><p>要下载一下软件</p></blockquote><p><img src="https://pic.huangruimin.tech/20211231111128.png"></p><blockquote><p>要配置以下工具</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.huangruimin.tech/20211231111345.png"></p><blockquote><blockquote><p>阅读该路径下的readme_cn.txt文件：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220204223517.png"></p><blockquote><blockquote><p>具体描述如下图，按照描述操作：</p></blockquote></blockquote><p><img src="https://pic.huangruimin.tech/20220204223553.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">注意：eudev-3.2.7工具编译时依赖gperf工具，服务器上需要安装gperf工具。下载网址：http://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz安装说明：<span class="token function">tar</span> <span class="token parameter variable">-xzf</span> gperf-3.1.tar.gz<span class="token builtin class-name">cd</span> gperf-3.1<span class="token function">sudo</span> ./configure<span class="token function">sudo</span> <span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2然后执行编译命令"><a href="#3-2然后执行编译命令" class="headerlink" title="3.2然后执行编译命令"></a>3.2然后执行编译命令</h3><blockquote><p>注意从这里开始，直接看第四部分就行了</p></blockquote><blockquote><p>并且，第三部分只需要做一次就行</p></blockquote><blockquote><p>仅编译的话，就只执行第一条命令，后面两条分别是清理，彻底清理</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300  <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc all<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- clean<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- distclean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3全程的编译流程"><a href="#3-3全程的编译流程" class="headerlink" title="3.3全程的编译流程"></a>3.3全程的编译流程</h3><ul><li>详情见41.1-全程编译笔记</li></ul><h2 id="四、参考全程编译，单独制作Rootfs"><a href="#四、参考全程编译，单独制作Rootfs" class="headerlink" title="四、参考全程编译，单独制作Rootfs"></a>四、参考全程编译，单独制作Rootfs</h2><h3 id="4-1-单独制作过程记录，并且已经成功"><a href="#4-1-单独制作过程记录，并且已经成功" class="headerlink" title="4.1 单独制作过程记录，并且已经成功"></a>4.1 单独制作过程记录，并且已经成功</h3><ul><li><p>先清除记录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- clean<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>编译生成板载工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> hiboardtools <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>解压rootfs.tgz</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc* <span class="token parameter variable">-rf</span><span class="token function">tar</span> xzf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/rootfs_scripts/rootfs.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span class="token function">mv</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>生成lib文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> xzf /opt/hisi-linux/x86-arm/arm-himix200-linux/runtime_glibc/a7_softfp_neon-vfpv4/lib.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>用strip工具缩小体积</p></li></ul><blockquote><p>海思官方使用了这一个步骤，但是朱有鹏的教程中，是没有使用这一条命令的，没有使用这一条命令，测试通过</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibcarm-himix200-linux-strip <span class="token parameter variable">-d</span> ./lib/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>解压busybox，以下几步是为了bin目录</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 <span class="token parameter variable">-rf</span><span class="token function">tar</span> xzf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>配置busybox的.config文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/config_v200_a7_softfp_neon /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/.config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编译busybox</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/<span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>！！！更确切的编译方法是，用的这种方法，测试通过</p></blockquote></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>部署busybox<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token function">install</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/_install/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>！！！更确切的部署方法是，用的这种方法，测试通过</p></blockquote></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token function">install</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/_install/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>复制板载工具到rootfs</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin<span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin<span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/rootfs/. /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>删除非必要的工具，海思官方是删掉了这些工具包的</p></li></ul><blockquote><p>！！！其实，这一个步骤是可以不执行的，保留最好了，制作的时候，选择不删除，测试通过</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/dev/* <span class="token parameter variable">-rf</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himm <span class="token parameter variable">-rf</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himc <span class="token parameter variable">-rf</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himd <span class="token parameter variable">-rf</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himd.l <span class="token parameter variable">-rf</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>对文件设置权限</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token function">ln</span> <span class="token parameter variable">-s</span> sbin/init init<span class="token function">chmod</span> <span class="token number">750</span> * <span class="token parameter variable">-R</span><span class="token function">chmod</span> <span class="token number">750</span> usr/* <span class="token parameter variable">-R</span><span class="token function">chmod</span> <span class="token parameter variable">-w</span> usr/bin <span class="token parameter variable">-R</span><span class="token function">chmod</span> <span class="token parameter variable">-w</span> usr/sbin <span class="token parameter variable">-R</span><span class="token function">chmod</span> <span class="token parameter variable">-w</span> sbin <span class="token parameter variable">-R</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>编译生成make_ext4fs工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils<span class="token function">make</span><span class="token builtin class-name">cd</span> ./bin/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>制作生成rootfs镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./make_ext4fs <span class="token parameter variable">-l</span> 96M <span class="token parameter variable">-s</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_hi3516dv300_96M.ext4 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><blockquote><p>96M只是一个最大的大小，如果小于这个大小，并不会去填充到96M</p></blockquote><blockquote><p>生成的rootfs文件位于：/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.huangruimin.tech/20220218172530.png"></p><h3 id="4-2成功，并成功下载的页面截图"><a href="#4-2成功，并成功下载的页面截图" class="headerlink" title="4.2成功，并成功下载的页面截图"></a>4.2成功，并成功下载的页面截图</h3><p><img src="https://pic.huangruimin.tech/20211231225345.png"><br><img src="https://pic.huangruimin.tech/20211231225434.png"></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_11_编译记录</title>
      <link href="/2021/10/17/hi3516dv300-11-bian-yi-ji-lu/"/>
      <url>/2021/10/17/hi3516dv300-11-bian-yi-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="1、全程编译记录"><a href="#1、全程编译记录" class="headerlink" title="1、全程编译记录"></a>1、全程编译记录</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">book@100ask:~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv$ <span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc all<span class="token function">mkdir</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/hi3516dv300_emmc_smp_image_glibc <span class="token parameter variable">-p</span><span class="token function">mkdir</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibc <span class="token parameter variable">-p</span><span class="token function">mkdir</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc <span class="token parameter variable">-p</span>---------task <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    hiregbin_prepare<span class="token function">tar</span> xzf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools<span class="token function">chmod</span> <span class="token number">777</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1/hiregbin<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/Hi3516DV300-DMEB_4L_FLYBY-DDR3_1800M_512MB_16bitx2-A7_900M-SYSBUS_300M.xlsm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1<span class="token punctuation">;</span>./hiregbin Hi3516DV300-DMEB_4L_FLYBY-DDR3_1800M_512MB_16bitx2-A7_900M-SYSBUS_300M.xlsm reg_info_hi3516dv300.bin<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvGenerate regbin <span class="token function">file</span> successfully.~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">mv</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1/reg_info_hi3516dv300.bin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools<span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/hiregbin-v5.0.1 <span class="token parameter variable">-rf</span>---------task <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>       build boot<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot<span class="token punctuation">;</span><span class="token function">tar</span> xzf secureboot_release.tgz <span class="token parameter variable">-C</span> <span class="token builtin class-name">.</span><span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot<span class="token punctuation">;</span><span class="token function">tar</span> xzf u-boot-2016.11.tgz <span class="token parameter variable">-C</span> <span class="token builtin class-name">.</span><span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11 <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_emmc_configmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11'</span>  HOSTCC  scripts/basic/fixdep  HOSTCC  scripts/kconfig/conf.o  SHIPPED scripts/kconfig/zconf.tab.c  SHIPPED scripts/kconfig/zconf.lex.c  SHIPPED scripts/kconfig/zconf.hash.c  HOSTCC  scripts/kconfig/zconf.tab.o  HOSTLD  scripts/kconfig/conf<span class="token comment">#</span><span class="token comment"># configuration written to .config</span><span class="token comment">#</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11'</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token punctuation">;</span><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span>/dev/null<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvproduct/hiosd/rgb/hi3516cv500/./rgb.c:66:12: warning: <span class="token string">'hi_spi_check_timeout'</span> defined but not used <span class="token punctuation">[</span>-Wunused-function<span class="token punctuation">]</span> static int hi_spi_check_timeout<span class="token punctuation">(</span>void<span class="token punctuation">)</span>            ^~~~~~~~~~~~~~~~~~~~~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip'</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> gzip-1.8.tgz<span class="token builtin class-name">cd</span> gzip-1.8<span class="token function">pushd</span> gzip-1.8<span class="token punctuation">;</span>./configure<span class="token punctuation">;</span><span class="token function">make</span> -j12<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzipchecking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether <span class="token function">make</span> supports the include directive<span class="token punctuation">..</span>. <span class="token function">yes</span> <span class="token punctuation">(</span>GNU style<span class="token punctuation">)</span>checking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether the compiler supports GNU C<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to <span class="token builtin class-name">enable</span> C11 features<span class="token punctuation">..</span>. none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking how to run the C preprocessor<span class="token punctuation">..</span>. gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> nm<span class="token punctuation">..</span>. nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ranlib<span class="token punctuation">..</span>. ranlibchecking <span class="token keyword">for</span> a POSIX-compliant shell<span class="token punctuation">..</span>. /bin/shchecking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/param.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/socket.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dirent.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> features.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> math.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/mman.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wchar.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utime.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> limits.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> minix/config.h<span class="token punctuation">..</span>. nochecking whether it is safe to define __EXTENSIONS__<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether _XOPEN_SOURCE should be defined<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> Minix Amsterdam compiler<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. archecking the archiver <span class="token punctuation">(</span>ar<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. archecking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> archecking <span class="token keyword">for</span> _LARGEFILE_SOURCE value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking build system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token keyword">for</span> special C compiler options needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> _FILE_OFFSET_BITS value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working alloca.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> alloca<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether malloc, realloc, calloc are POSIX compliant<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> _set_invalid_parameter_handler<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> fchdir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fdopendir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strerror_r<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> symlink<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mempcpy<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> vasnprintf<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> snprintf<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fpurge<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> __fpurge<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> __freading<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> __fseterr<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> fstatat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fsync<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getdtablesize<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gettimeofday<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> nanotime<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> lstat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mprotect<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> openat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> __xpg_strerror_r<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strdup<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> catgets<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pipe<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unlinkat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> futimes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> futimesat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> futimens<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utimensat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> lutimes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> chown<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fchmod<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fchown<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> siginterrupt<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether the preprocessor supports include_next<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether system header files limit the line length<span class="token punctuation">..</span>. nochecking how gcc reports undeclared, standard C functions<span class="token punctuation">..</span>. errorchecking whether // is distinct from /<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> complete errno.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether strerror_r is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether strerror_r returns char *<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fchdir is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pid_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mode_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> promoted mode_t type<span class="token punctuation">..</span>. mode_tchecking whether fdatasync is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports size specifiers as <span class="token keyword">in</span> C99<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports <span class="token string">'long double'</span> arguments<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports infinite <span class="token string">'double'</span> arguments<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether byte ordering is bigendian<span class="token punctuation">..</span>. nochecking whether long double and double are the same<span class="token punctuation">..</span>. nochecking whether <span class="token builtin class-name">printf</span> supports infinite <span class="token string">'long double'</span> arguments<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the <span class="token string">'a'</span> and <span class="token string">'A'</span> directives<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the <span class="token string">'F'</span> directive<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the <span class="token string">'n'</span> directive<span class="token punctuation">..</span>. nochecking whether <span class="token builtin class-name">printf</span> supports the <span class="token string">'ls'</span> directive<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports POSIX/XSI <span class="token function">format</span> strings with positions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the grouping flag<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the left-adjust flag correctly<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports the zero flag correctly<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> supports large precisions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token builtin class-name">printf</span> survives out-of-memory conditions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unsigned long long int<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> long long int<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wchar_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wint_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> intmax_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking where to <span class="token function">find</span> the exponent <span class="token keyword">in</span> a <span class="token string">'double'</span><span class="token punctuation">..</span>. word <span class="token number">1</span> bit <span class="token number">20</span>checking whether snprintf returns a byte count as <span class="token keyword">in</span> C99<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> snprintf<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> strnlen<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wcslen<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wcsnlen<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mbrtowc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wcrtomb<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether _snprintf is declared<span class="token punctuation">..</span>. nochecking whether frexp<span class="token punctuation">(</span><span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether alarm is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether stdin defaults to large <span class="token function">file</span> offsets<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fseeko is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fseeko<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fflush works on input streams<span class="token punctuation">..</span>. nochecking whether <span class="token function">stat</span> file-mode macros are broken<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> nlink_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether lstat correctly handles trailing slash<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether ftello is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ftello<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether ftello works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether getcwd <span class="token punctuation">(</span>NULL, <span class="token number">0</span><span class="token punctuation">)</span> allocates memory <span class="token keyword">for</span> result<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getcwd with POSIX signature<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether getdtablesize is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt_long_only<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether getopt is POSIX compatible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working GNU getopt function<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working GNU getopt_long function<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether getenv is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C/C++ restrict keyword<span class="token punctuation">..</span>. __restrictchecking <span class="token keyword">for</span> struct timeval<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wide-enough struct timeval.tv_sec member<span class="token punctuation">..</span>. <span class="token function">yes</span>checking where to <span class="token function">find</span> the exponent <span class="token keyword">in</span> a <span class="token string">'float'</span><span class="token punctuation">..</span>. word <span class="token number">0</span> bit <span class="token number">23</span>checking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> shared library run path origin<span class="token punctuation">..</span>. <span class="token keyword">done</span>checking whether imported symbols can be declared weak<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pthread.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> multithread API to use<span class="token punctuation">..</span>. posixchecking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> mmap<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> MAP_ANONYMOUS<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether memchr works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether memrchr is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether strerror<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> succeeds<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strerror_r with POSIX signature<span class="token punctuation">..</span>. nochecking whether __xpg_strerror_r works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ptrdiff_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether C symbols are prefixed with underscore at the linker level<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> stdbool.h that conforms to C99<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> _Bool<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether stdint.h conforms to C99<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether stdint.h predates C++11<span class="token punctuation">..</span>. nochecking whether strdup is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct timespec <span class="token keyword">in</span> <span class="token operator">&lt;</span>time.h<span class="token operator">&gt;</span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether the utimes <span class="token keyword">function</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct utimbuf<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token operator">&lt;</span>wchar.h<span class="token operator">&gt;</span> uses <span class="token string">'inline'</span> correctly<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> alloca as a compiler built-in<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> GNU libc compatible calloc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether this system has an arbitrary <span class="token function">file</span> name length limit<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> library containing clock_gettime<span class="token punctuation">..</span>. none requiredchecking <span class="token keyword">for</span> clock_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> clock_settime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> closedir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dirfd<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether dirfd is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether dirfd is a macro<span class="token punctuation">..</span>. nochecking whether // is distinct from /<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> nochecking whether dup works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether dup2 works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> error_at_line<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fflush works on input streams<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> nochecking whether fcntl handles F_DUPFD correctly<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fcntl understands F_DUPFD_CLOEXEC<span class="token punctuation">..</span>. needs runtime checkchecking <span class="token keyword">for</span> library containing fdatasync<span class="token punctuation">..</span>. none requiredchecking whether fdopendir is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fdopendir works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether fflush works on input streams<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> nochecking whether conversion from <span class="token string">'int'</span> to <span class="token string">'long double'</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ptrdiff_t<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether fpurge is declared<span class="token punctuation">..</span>. nochecking whether frexp works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether frexpl is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether frexpl<span class="token punctuation">(</span><span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether frexpl works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fseeko<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether fflush works on input streams<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> nochecking <span class="token keyword">for</span> _fseeki64<span class="token punctuation">..</span>. nochecking whether fstatat <span class="token punctuation">(</span><span class="token punctuation">..</span>., <span class="token number">0</span><span class="token punctuation">)</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ftello<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether ftello works<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether getdtablesize works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gettimeofday clobbers localtime buffer<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gettimeofday with POSIX signature<span class="token punctuation">..</span>. almostchecking whether isnan<span class="token punctuation">(</span>double<span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether isnan<span class="token punctuation">(</span>float<span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether isnan<span class="token punctuation">(</span>float<span class="token punctuation">)</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether isnan<span class="token punctuation">(</span>long double<span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether isnanl works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler flag to ignore unused libraries<span class="token punctuation">..</span>. -Wl,--as-neededchecking <span class="token keyword">for</span> pthread_rwlock_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether lseek detects pipes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> GNU libc compatible malloc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether NAN macro works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether HUGE_VAL works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mempcpy<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> memrchr<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">open</span> recognizes a trailing slash<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> opendir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether perror matches strerror<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether frexp works<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether ldexp can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether frexpl<span class="token punctuation">(</span><span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether frexpl works<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether frexpl is declared<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether ldexpl<span class="token punctuation">(</span><span class="token punctuation">)</span> can be used without linking with libm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether ldexpl works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether ldexpl is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> readdir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> GNU libc compatible realloc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">rmdir</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> signbit macro<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> signbit compiler built-ins<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> SIZE_MAX<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ssize_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">stat</span> handles trailing slashes on directories<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">stat</span> handles trailing slashes on files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct stat.st_atim.tv_nsec<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether struct stat.st_atim is of <span class="token builtin class-name">type</span> struct timespec<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct stat.st_birthtimespec.tv_nsec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct stat.st_birthtimensec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct stat.st_birthtim.tv_nsec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> max_align_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether NULL can be used <span class="token keyword">in</span> arbitrary expressions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token function">which</span> flavor of <span class="token builtin class-name">printf</span> attribute matches inttypes macros<span class="token punctuation">..</span>. systemchecking <span class="token keyword">for</span> stpcpy<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working strerror function<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> nlink_t<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether unlink honors trailing slashes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether unlink of a parent directory fails as it should<span class="token punctuation">..</span>. guessing <span class="token function">yes</span>checking <span class="token keyword">for</span> ptrdiff_t<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> ptrdiff_t<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">underline</span> <span class="token keyword">in</span> external names<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> an assembler syntax supported by this package<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> library containing strerror<span class="token punctuation">..</span>. none requiredchecking <span class="token keyword">for</span> an ANSI C-conforming const<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dirent.h that defines DIR<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> library containing opendir<span class="token punctuation">..</span>. none requiredchecking <span class="token builtin class-name">return</span> <span class="token builtin class-name">type</span> of signal handlers<span class="token punctuation">..</span>. voidchecking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> off_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating doc/Makefileconfig.status: creating lib/Makefileconfig.status: creating tests/Makefileconfig.status: creating lib/config.hconfig.status: executing depfiles commandsmake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>  GEN      version.h  GEN      version.c<span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>Making all <span class="token keyword">in</span> libmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/lib'</span>  GEN      alloca.h  GEN      c++defs.h  GEN      arg-nonnull.h  GEN      warn-on-use.h  GEN      unused-parameter.h  GEN      sys/types.h  GEN      dirent.h  GEN      fcntl.h  GEN      math.h  GEN      stdlib.h  GEN      time.h  GEN      unistd.h  GEN      stdio.h  GEN      string.h  GEN      sys/stat.h  GEN      sys/time.h  GEN      wchar.h<span class="token function">make</span>  all-ammake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/lib'</span>  CC       cloexec.o  CC       opendir-safer.o  CC       dirname-lgpl.o  CC       stripslash.o  CC       exitfail.o  CC       fd-hook.o  CC       filenamecat-lgpl.o  CC       basename-lgpl.o  CC       gettime.o  CC       freading.o  CC       creat-safer.o  CC       open-safer.o  CC       openat-safer.o  CC       openat-die.o  CC       math.o  CC       printf-frexp.o  CC       save-cwd.o  CC       printf-frexpl.o  CC       stat-time.o  CC       statat.o  CC       savedir.o  CC       glthread/threadlib.o  CC       timespec.o  CC       unistd.o  CC       dup-safer.o  CC       fd-safer.o  CC       pipe-safer.o  CC       xmalloc.o  CC       utimens.o  CC       xsize.o  CC       xalloc-die.o  CC       yesno.o  CC       asnprintf.o  CC       chdir-long.o  CC       fcntl.o  CC       fclose.o  CC       fflush.o  CC       fprintf.o  CC       fpurge.o  CC       fseeko.o  CC       fseterr.o  CC       openat-proc.o  CC       printf.o  CC       fseek.o  CC       printf-parse.o  CC       printf-args.o  CC       strerror_r.o  CC       vasnprintf.o  CC       glthread/lock.o  CC       vfprintf.o  AR       libgzip.amake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/lib'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/lib'</span>Making all <span class="token keyword">in</span> docmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/doc'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/doc'</span>Making all <span class="token keyword">in</span> <span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>  CC       version.o  CC       bits.o  CC       inflate.o  CC       gzip.o  CC       unlzw.o  CC       unlzh.o  CC       trees.o  CC       lzw.o  CC       unzip.o  CC       deflate.o  CC       unpack.o  CC       util.o  CC       zip.o  GEN      gunzip  GEN      gzexe  GEN      zcat  GEN      zcmp  GEN      zdiff  GEN      zegrep  GEN      zfgrep  GEN      zgrep  GEN      zforce  GEN      zless  GEN      zmore  GEN      znew  AR       libver.a  CCLD     <span class="token function">gzip</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>Making all <span class="token keyword">in</span> testsmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8/tests'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/gzip-1.8'</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip<span class="token function">mkdir</span> bin <span class="token parameter variable">-p</span><span class="token function">cp</span> gzip-1.8/gzip bin<span class="token punctuation">;</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip/bin/gzip /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/arch/arm/cpu/armv7/hi3516dv300/hw_compressed <span class="token parameter variable">-rf</span><span class="token function">chmod</span> +x /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/arch/arm/cpu/armv7/hi3516dv300/hw_compressed/gzip<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/uboot_tools/reg_info_hi3516dv300.bin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/.reg<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token punctuation">;</span><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- u-boot-z.bin <span class="token operator">&gt;</span>/dev/null<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/u-boot-hi3516dv300.bin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/hi3516dv300_emmc_smp_image_glibc<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/u-boot-hi3516dv300.bin  /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/secureboot_release---------task <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> build kernel<span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp <span class="token parameter variable">-rf</span><span class="token function">tar</span> xf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.37.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/<span class="token function">mv</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.37 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp<span class="token punctuation">;</span>patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/linux-4.9.37.patch<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpatching <span class="token function">file</span> Documentation/arm64/silicon-errata.txtpatching <span class="token function">file</span> Documentation/devicetree/bindings/iio/adc/hibvt-lsadc.txtpatching <span class="token function">file</span> Documentation/devicetree/bindings/net/hisilicon-femac.txtpatching <span class="token function">file</span> Documentation/devicetree/bindings/net/hisilicon-gemac-mdio.txtpatching <span class="token function">file</span> Documentation/devicetree/bindings/net/hisilicon-higmac.txtpatching <span class="token function">file</span> Documentation/devicetree/bindings/usb/usb-xhci.txtpatching <span class="token function">file</span> Documentation/networking/ip-sysctl.txtpatching <span class="token function">file</span> Documentation/networking/phy.txtpatching <span class="token function">file</span> Documentation/speculation.txtpatching <span class="token function">file</span> arch/arm/Kconfigpatching <span class="token function">file</span> arch/arm/Kconfig.debugpatching <span class="token function">file</span> arch/arm/Makefilepatching <span class="token function">file</span> arch/arm/boot/Makefilepatching <span class="token function">file</span> arch/arm/boot/compressed/head.Spatching <span class="token function">file</span> arch/arm/boot/dts/Makefilepatching <span class="token function">file</span> arch/arm/boot/dts/hi3516a-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516a.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3516cv500-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516cv500.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3516dv200-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516dv200.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3516dv300-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516dv300.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3516ev200-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516ev200.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3516ev300-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3516ev300.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3518ev20x-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3518ev20x.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3518ev300-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3518ev300.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3519.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100-emmc.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100-flash.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100-smp-emmc.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100-smp-flash.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100-smp.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3519av100.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3521a-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3521a.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3531a-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3531a.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3536dv100-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3536dv100.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3556av100-emmc.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3556av100-flash.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3556av100.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3556av100.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3556v200-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3556v200.dtsipatching <span class="token function">file</span> arch/arm/boot/dts/hi3559v200-demb.dtspatching <span class="token function">file</span> arch/arm/boot/dts/hi3559v200.dtsipatching <span class="token function">file</span> arch/arm/configs/hi3516a_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516a_mini_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516a_spinand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516a_spinand_mini_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516av300_emmc_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516av300_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516cv200_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516cv500_emmc_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516cv500_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516dv200_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516dv200_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516dv300_emmc_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516dv300_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516ev200_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516ev200_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516ev200_mini_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516ev300_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3516ev300_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3518ev200_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3518ev201_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3518ev300_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3518ev300_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3518ev300_mini_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_amp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_amp_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_amp_nand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_smp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_smp_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3519av100_smp_nand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3520dv300_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3521a_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3531a_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3531a_full_slave_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3531a_spinand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3531a_spinand_slave_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3536dv100_full_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556av100_amp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556av100_amp_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556av100_amp_nand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556av100_amp_spi_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556v200_amp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556v200_amp_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3556v200_amp_spinand_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3559v200_amp_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3559v200_amp_emmc_defconfigpatching <span class="token function">file</span> arch/arm/configs/hi3559v200_amp_spinand_defconfigpatching <span class="token function">file</span> arch/arm/include/asm/kvm_psci.hpatching <span class="token function">file</span> arch/arm/include/asm/string.hpatching <span class="token function">file</span> arch/arm/include/asm/uaccess.hpatching <span class="token function">file</span> arch/arm/kernel/armksyms.cpatching <span class="token function">file</span> arch/arm/kernel/head.Spatching <span class="token function">file</span> arch/arm/kvm/handle_exit.cpatching <span class="token function">file</span> arch/arm/lib/memcpy.Spatching <span class="token function">file</span> arch/arm/mach-hibvt/Kconfigpatching <span class="token function">file</span> arch/arm/mach-hibvt/Makefilepatching <span class="token function">file</span> arch/arm/mach-hibvt/Makefile.bootpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3516a_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3516cv500_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3516cv500_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3516dv300_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3516dv300_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3518ev20x_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3519av100_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3519av100_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3521a_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3521a_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3531a_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3531a_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3536dv100_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3536dv100_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3556av100_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3556v200_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3556v200_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3559v200_io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/hi3559v200_platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/io.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/include/mach/platform.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/l2cache.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-common.hpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516a.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516cv500.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516dv200.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516dv300.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516ev200.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3516ev300.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3518ev20x.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3518ev300.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3519av100.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3521a.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3531a.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3536dv100.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3556av100.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3556v200.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/mach-hi3559v200.cpatching <span class="token function">file</span> arch/arm/mach-hibvt/platsmp.cpatching <span class="token function">file</span> arch/arm/mm/dma-mapping.cpatching <span class="token function">file</span> arch/arm/mm/init.cpatching <span class="token function">file</span> arch/arm/plat-hi3519av100/Makefilepatching <span class="token function">file</span> arch/arm/plat-hi3519av100/pll-trainning.cpatching <span class="token function">file</span> arch/arm/plat-hi3556av100/Makefilepatching <span class="token function">file</span> arch/arm/plat-hi3556av100/pll-trainning.cpatching <span class="token function">file</span> arch/arm/vdso/vgettimeofday.cpatching <span class="token function">file</span> arch/arm64/Kconfigpatching <span class="token function">file</span> arch/arm64/Kconfig.platformspatching <span class="token function">file</span> arch/arm64/Makefilepatching <span class="token function">file</span> arch/arm64/boot/Makefilepatching <span class="token function">file</span> arch/arm64/boot/dts/Makefilepatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/Makefilepatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100-demb-amp.dtspatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100-demb-emmc.dtspatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100-demb-flash.dtspatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100-demb-ufs.dtspatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100-demb.dtspatching <span class="token function">file</span> arch/arm64/boot/dts/hisilicon/hi3559av100.dtsipatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_amp_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_emmc_amp_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_emmc_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_nand_amp_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_nand_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_ufs_amp_defconfigpatching <span class="token function">file</span> arch/arm64/configs/hi3559av100_arm64_big_little_ufs_defconfigpatching <span class="token function">file</span> arch/arm64/hisi-lib/Kconfigpatching <span class="token function">file</span> arch/arm64/hisi-lib/Makefilepatching <span class="token function">file</span> arch/arm64/hisi-lib/sample_c.cpatching <span class="token function">file</span> arch/arm64/hisi-lib/sample_s.Spatching <span class="token function">file</span> arch/arm64/include/asm/asm-uaccess.hpatching <span class="token function">file</span> arch/arm64/include/asm/assembler.hpatching <span class="token function">file</span> arch/arm64/include/asm/barrier.hpatching <span class="token function">file</span> arch/arm64/include/asm/cacheflush.hpatching <span class="token function">file</span> arch/arm64/include/asm/cpucaps.hpatching <span class="token function">file</span> arch/arm64/include/asm/cpufeature.hpatching <span class="token function">file</span> arch/arm64/include/asm/cputype.hpatching <span class="token function">file</span> arch/arm64/include/asm/daifflags.hpatching <span class="token function">file</span> arch/arm64/include/asm/efi.hpatching <span class="token function">file</span> arch/arm64/include/asm/esr.hpatching <span class="token function">file</span> arch/arm64/include/asm/fixmap.hpatching <span class="token function">file</span> arch/arm64/include/asm/futex.hpatching <span class="token function">file</span> arch/arm64/include/asm/hw_breakpoint.hpatching <span class="token function">file</span> arch/arm64/include/asm/insn.hpatching <span class="token function">file</span> arch/arm64/include/asm/irqflags.hpatching <span class="token function">file</span> arch/arm64/include/asm/kernel-pgtable.hpatching <span class="token function">file</span> arch/arm64/include/asm/kvm_asm.hpatching <span class="token function">file</span> arch/arm64/include/asm/kvm_host.hpatching <span class="token function">file</span> arch/arm64/include/asm/kvm_mmu.hpatching <span class="token function">file</span> arch/arm64/include/asm/memory.hpatching <span class="token function">file</span> arch/arm64/include/asm/mmu.hpatching <span class="token function">file</span> arch/arm64/include/asm/mmu_context.hpatching <span class="token function">file</span> arch/arm64/include/asm/pgtable-hwdef.hpatching <span class="token function">file</span> arch/arm64/include/asm/pgtable-prot.hpatching <span class="token function">file</span> arch/arm64/include/asm/pgtable.hpatching <span class="token function">file</span> arch/arm64/include/asm/proc-fns.hpatching <span class="token function">file</span> arch/arm64/include/asm/processor.hpatching <span class="token function">file</span> arch/arm64/include/asm/ptrace.hpatching <span class="token function">file</span> arch/arm64/include/asm/sysreg.hpatching <span class="token function">file</span> arch/arm64/include/asm/thread_info.hpatching <span class="token function">file</span> arch/arm64/include/asm/tlbflush.hpatching <span class="token function">file</span> arch/arm64/include/asm/traps.hpatching <span class="token function">file</span> arch/arm64/include/asm/uaccess.hpatching <span class="token function">file</span> arch/arm64/include/mach/platform-hi3559av100.hpatching <span class="token function">file</span> arch/arm64/include/mach/platform.hpatching <span class="token function">file</span> arch/arm64/kernel/Makefilepatching <span class="token function">file</span> arch/arm64/kernel/arm64ksyms.cpatching <span class="token function">file</span> arch/arm64/kernel/armv8_deprecated.cpatching <span class="token function">file</span> arch/arm64/kernel/asm-offsets.cpatching <span class="token function">file</span> arch/arm64/kernel/bpi.Spatching <span class="token function">file</span> arch/arm64/kernel/cpu-reset.Spatching <span class="token function">file</span> arch/arm64/kernel/cpu_errata.cpatching <span class="token function">file</span> arch/arm64/kernel/cpufeature.cpatching <span class="token function">file</span> arch/arm64/kernel/debug-monitors.cpatching <span class="token function">file</span> arch/arm64/kernel/efi.cpatching <span class="token function">file</span> arch/arm64/kernel/entry.Spatching <span class="token function">file</span> arch/arm64/kernel/head.Spatching <span class="token function">file</span> arch/arm64/kernel/hibernate.cpatching <span class="token function">file</span> arch/arm64/kernel/insn.cpatching <span class="token function">file</span> arch/arm64/kernel/io.cpatching <span class="token function">file</span> arch/arm64/kernel/machine_kexec.cpatching <span class="token function">file</span> arch/arm64/kernel/process.cpatching <span class="token function">file</span> arch/arm64/kernel/ptrace.cpatching <span class="token function">file</span> arch/arm64/kernel/setup.cpatching <span class="token function">file</span> arch/arm64/kernel/signal.cpatching <span class="token function">file</span> arch/arm64/kernel/signal32.cpatching <span class="token function">file</span> arch/arm64/kernel/sleep.Spatching <span class="token function">file</span> arch/arm64/kernel/smp.cpatching <span class="token function">file</span> arch/arm64/kernel/suspend.cpatching <span class="token function">file</span> arch/arm64/kernel/traps.cpatching <span class="token function">file</span> arch/arm64/kernel/vmlinux.lds.Spatching <span class="token function">file</span> arch/arm64/kvm/handle_exit.cpatching <span class="token function">file</span> arch/arm64/kvm/hyp/entry.Spatching <span class="token function">file</span> arch/arm64/kvm/hyp/switch.cpatching <span class="token function">file</span> arch/arm64/kvm/reset.cpatching <span class="token function">file</span> arch/arm64/kvm/sys_regs.cpatching <span class="token function">file</span> arch/arm64/lib/clear_user.Spatching <span class="token function">file</span> arch/arm64/lib/copy_from_user.Spatching <span class="token function">file</span> arch/arm64/lib/copy_in_user.Spatching <span class="token function">file</span> arch/arm64/lib/copy_to_user.Spatching <span class="token function">file</span> arch/arm64/mm/cache.Spatching <span class="token function">file</span> arch/arm64/mm/context.cpatching <span class="token function">file</span> arch/arm64/mm/dma-mapping.cpatching <span class="token function">file</span> arch/arm64/mm/fault.cpatching <span class="token function">file</span> arch/arm64/mm/flush.cpatching <span class="token function">file</span> arch/arm64/mm/init.cpatching <span class="token function">file</span> arch/arm64/mm/mmu.cpatching <span class="token function">file</span> arch/arm64/mm/pgd.cpatching <span class="token function">file</span> arch/arm64/mm/proc.Spatching <span class="token function">file</span> drivers/Kconfigpatching <span class="token function">file</span> drivers/Makefilepatching <span class="token function">file</span> drivers/ata/Kconfigpatching <span class="token function">file</span> drivers/ata/Kconfig.hiahcipatching <span class="token function">file</span> drivers/ata/Makefilepatching <span class="token function">file</span> drivers/ata/ahci.hpatching <span class="token function">file</span> drivers/ata/ahci_platform.cpatching <span class="token function">file</span> drivers/ata/hisi_sata_dbg.cpatching <span class="token function">file</span> drivers/ata/hisi_sata_dbg.hpatching <span class="token function">file</span> drivers/ata/libahci.cpatching <span class="token function">file</span> drivers/base/dma-contiguous.cpatching <span class="token function">file</span> drivers/char/random.cpatching <span class="token function">file</span> drivers/clk/Makefilepatching <span class="token function">file</span> drivers/clk/clk-highbank.cpatching <span class="token function">file</span> drivers/clk/hisilicon/Kconfigpatching <span class="token function">file</span> drivers/clk/hisilicon/Makefilepatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516a.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516cv500.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516dv200.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516dv300.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516ev200.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3516ev300.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3518ev20x.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3518ev300.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3519av100.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3521a.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3531a.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3536dv100.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3556av100.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3556v200.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3559av100.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk-hi3559v200.cpatching <span class="token function">file</span> drivers/clk/hisilicon/clk.cpatching <span class="token function">file</span> drivers/clk/hisilicon/crg.hpatching <span class="token function">file</span> drivers/clk/hisilicon/reset.cpatching <span class="token function">file</span> drivers/clk/hisilicon/reset.hpatching <span class="token function">file</span> drivers/clocksource/Kconfigpatching <span class="token function">file</span> drivers/clocksource/Makefilepatching <span class="token function">file</span> drivers/clocksource/arm_arch_timer.cpatching <span class="token function">file</span> drivers/clocksource/timer-hisp804.cpatching <span class="token function">file</span> drivers/clocksource/timer-sp804.cpatching <span class="token function">file</span> drivers/cpuidle/Kconfigpatching <span class="token function">file</span> drivers/cpuidle/Kconfig.arm64patching <span class="token function">file</span> drivers/cpuidle/Makefilepatching <span class="token function">file</span> drivers/cpuidle/cpuidle-arm64.cpatching <span class="token function">file</span> drivers/cpuidle/cpuidle-hi3519av100.cpatching <span class="token function">file</span> drivers/cpuidle/cpuidle-hi3556av100.cpatching <span class="token function">file</span> drivers/crypto/Kconfigpatching <span class="token function">file</span> drivers/crypto/Makefilepatching <span class="token function">file</span> drivers/crypto/hisi-cipher/Kconfigpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/Makefilepatching <span class="token function">file</span> drivers/crypto/hisi-cipher/include/drv_cipher_kapi.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/include/hi_cipher_compat.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/include/hi_common_cipher.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/include/hi_types.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/include/hi_unf_cipher.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/Makefilepatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_initdevice.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/build.makpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/build.makpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/drv_klad.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/drv_klad.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/hal_efuse.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/hal_efuse.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/hi_drv_compat.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/compat/hi_drv_compat.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/build.makpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_hash_v100.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_hash_v100.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_hash_v200.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_hash_v200.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_ifep_rsa_v100.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_ifep_rsa_v100.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_lib.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_symc_v100.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_symc_v100.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_symc_v200.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_symc_v200.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_trng_v100.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_trng_v100.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_trng_v200.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/drv_trng_v200.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/include/drv_hash.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/include/drv_osal_chip.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/include/drv_srsa.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/include/drv_symc.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/core/include/drv_trng.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/cryp_hash.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/cryp_rsa.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/cryp_symc.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/cryp_trng.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/include/cryp_hash.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/include/cryp_rsa.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/include/cryp_symc.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/crypto/include/cryp_trng.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/ext_aead.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/ext_hash.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/ext_sm3.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/ext_sm4.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/ext_symc.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/ext_alg.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/aes.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/aesni.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/asn1.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/asn1write.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/bignum.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/bn_mul.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/ccm.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/check_config.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/cipher.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/cipher_internal.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/config.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/des.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/error.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/gcm.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/md.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/md_internal.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/oid.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/pk.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/pkcs5.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/platform.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/platform_util.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/rsa.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/rsa_internal.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/sha1.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/sha256.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/sha512.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/include/mbedtls/version.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/aes.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/asn1parse.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/bignum.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/ccm.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/cipher.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/cipher_wrap.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/des.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/error.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/gcm.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/md.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/md_wrap.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/oid.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/platform_util.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/rsa.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/rsa_internal.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/sha1.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/sha256.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/extend/mbedtls/sha512.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/kapi_dispatch.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/kapi_hash.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/kapi_rsa.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/kapi_symc.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/drivers/kapi_trng.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/build.makpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/drv_osal_init_linux.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/drv_osal_init_liteos.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/drv_osal_sys_linux.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/drv_osal_sys_liteos.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_hi3516cv500.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_hi3516ev200.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_hi3519av100.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_hi3559.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_hi3559aes.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_lib.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_lib_linux.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/osal/include/drv_osal_lib_liteos.hpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/test/build.makpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/test/kapi_symc_test.cpatching <span class="token function">file</span> drivers/crypto/hisi-cipher/src/drv/cipher_v1.0/test/kapi_test_main.cpatching <span class="token function">file</span> drivers/crypto/hisi-otp/Kconfigpatching <span class="token function">file</span> drivers/crypto/hisi-otp/Makefilepatching <span class="token function">file</span> drivers/crypto/hisi-otp/hal_otp.cpatching <span class="token function">file</span> drivers/crypto/hisi-otp/hal_otp.hpatching <span class="token function">file</span> drivers/dma-buf/_sw_sync.hpatching <span class="token function">file</span> drivers/dma-buf/_sync.hpatching <span class="token function">file</span> drivers/dma-buf/fence.cpatching <span class="token function">file</span> drivers/dma-buf/reservation.cpatching <span class="token function">file</span> drivers/dma-buf/sw_sync.cpatching <span class="token function">file</span> drivers/dma-buf/sw_sync.hpatching <span class="token function">file</span> drivers/dma-buf/sync.cpatching <span class="token function">file</span> drivers/dma-buf/sync.hpatching <span class="token function">file</span> drivers/dma-buf/sync_file.cpatching <span class="token function">file</span> drivers/dma/Kconfigpatching <span class="token function">file</span> drivers/dma/Makefilepatching <span class="token function">file</span> drivers/dma/hiedmacv310.cpatching <span class="token function">file</span> drivers/dma/hiedmacv310.hpatching <span class="token function">file</span> drivers/firmware/psci.cpatching <span class="token function">file</span> drivers/gpio/gpio-pl061.cpatching <span class="token function">file</span> drivers/hi_fence/Kconfigpatching <span class="token function">file</span> drivers/hi_fence/Makefilepatching <span class="token function">file</span> drivers/hi_fence/_sw_sync.hpatching <span class="token function">file</span> drivers/hi_fence/_sync.hpatching <span class="token function">file</span> drivers/hi_fence/sw_sync.cpatching <span class="token function">file</span> drivers/hi_fence/sw_sync.hpatching <span class="token function">file</span> drivers/hi_fence/sync.cpatching <span class="token function">file</span> drivers/hi_fence/sync.hpatching <span class="token function">file</span> drivers/hi_fence/sync_debug.cpatching <span class="token function">file</span> drivers/hi_vdmav100/Kconfigpatching <span class="token function">file</span> drivers/hi_vdmav100/Makefilepatching <span class="token function">file</span> drivers/hi_vdmav100/hi_vdma.hpatching <span class="token function">file</span> drivers/hi_vdmav100/hi_vdmav100.cpatching <span class="token function">file</span> drivers/hi_vdmav100/hi_vdmav100.hpatching <span class="token function">file</span> drivers/hi_vdmav100/hi_vdmav100_misc.cpatching <span class="token function">file</span> drivers/hidmac/Kconfigpatching <span class="token function">file</span> drivers/hidmac/Makefilepatching <span class="token function">file</span> drivers/hidmac/hi_pl08x.cpatching <span class="token function">file</span> drivers/hidmac/hi_pl08x.hpatching <span class="token function">file</span> drivers/hidmac/hidmac_hi3516a.hpatching <span class="token function">file</span> drivers/hidmac/hidmac_hi3518ev20x.hpatching <span class="token function">file</span> drivers/hidmac/hidmac_hi3521a.hpatching <span class="token function">file</span> drivers/hidmac/hidmac_hi3531a.hpatching <span class="token function">file</span> drivers/hidmac/hidmac_hi3536dv100.hpatching <span class="token function">file</span> drivers/hiedmac/Kconfigpatching <span class="token function">file</span> drivers/hiedmac/Makefilepatching <span class="token function">file</span> drivers/hiedmac/hiedma_hi3516cv500.hpatching <span class="token function">file</span> drivers/hiedmac/hiedma_hi3516ev200.hpatching <span class="token function">file</span> drivers/hiedmac/hiedma_hi3519av100.hpatching <span class="token function">file</span> drivers/hiedmac/hiedma_hi3559av100.hpatching <span class="token function">file</span> drivers/hiedmac/hiedmacv310.cpatching <span class="token function">file</span> drivers/hiedmac/hiedmacv310.hpatching <span class="token function">file</span> drivers/hisilicon/Kconfigpatching <span class="token function">file</span> drivers/hisilicon/Makefilepatching <span class="token function">file</span> drivers/hisilicon/cma/Kconfigpatching <span class="token function">file</span> drivers/hisilicon/cma/Makefilepatching <span class="token function">file</span> drivers/hisilicon/cma/hi_cma.cpatching <span class="token function">file</span> drivers/i2c/busses/Kconfigpatching <span class="token function">file</span> drivers/i2c/busses/Makefilepatching <span class="token function">file</span> drivers/i2c/busses/i2c-hibvt.cpatching <span class="token function">file</span> drivers/i2c/busses/i2c-highlander.cpatching <span class="token function">file</span> drivers/i2c/busses/i2c-hisilicon.cpatching <span class="token function">file</span> drivers/i2c/busses/i2c-hisilicon.hpatching <span class="token function">file</span> drivers/i2c/busses/i2c-hix5hd2.cpatching <span class="token function">file</span> drivers/i2c/i2c-core.cpatching <span class="token function">file</span> drivers/i2c/i2c-dev.cpatching <span class="token function">file</span> drivers/iio/adc/Kconfigpatching <span class="token function">file</span> drivers/iio/adc/Makefilepatching <span class="token function">file</span> drivers/iio/adc/hibvt_lsadc.cpatching <span class="token function">file</span> drivers/irqchip/irq-gic-v3.cpatching <span class="token function">file</span> drivers/irqchip/irq-gic.cpatching <span class="token function">file</span> drivers/irqchip/irq-map-hi3559av100.hpatching <span class="token function">file</span> drivers/media/usb/uvc/uvc_video.cpatching <span class="token function">file</span> drivers/mfd/Kconfigpatching <span class="token function">file</span> drivers/mfd/Makefilepatching <span class="token function">file</span> drivers/mfd/hisi_fmc.cpatching <span class="token function">file</span> drivers/mmc/card/block.cpatching <span class="token function">file</span> drivers/mmc/card/queue.cpatching <span class="token function">file</span> drivers/mmc/card/queue.hpatching <span class="token function">file</span> drivers/mmc/core/core.cpatching <span class="token function">file</span> drivers/mmc/core/mmc.cpatching <span class="token function">file</span> drivers/mmc/core/mmc_ops.cpatching <span class="token function">file</span> drivers/mmc/core/mmc_ops.hpatching <span class="token function">file</span> drivers/mmc/core/sd.cpatching <span class="token function">file</span> drivers/mmc/core/sdio.cpatching <span class="token function">file</span> drivers/mmc/host/Kconfigpatching <span class="token function">file</span> drivers/mmc/host/Makefilepatching <span class="token function">file</span> drivers/mmc/host/cmdq_hci.cpatching <span class="token function">file</span> drivers/mmc/host/cmdq_hci.hpatching <span class="token function">file</span> drivers/mmc/host/himci/Kconfigpatching <span class="token function">file</span> drivers/mmc/host/himci/Makefilepatching <span class="token function">file</span> drivers/mmc/host/himci/himci.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci.hpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3516a.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3516cv500.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3516dv300.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3518ev20x.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3556v200.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_hi3559v200.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_proc.cpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_proc.hpatching <span class="token function">file</span> drivers/mmc/host/himci/himci_reg.hpatching <span class="token function">file</span> drivers/mmc/host/mci_proc.cpatching <span class="token function">file</span> drivers/mmc/host/mci_proc.hpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3516dv200.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3516ev200.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3516ev300.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3518ev300.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3519av100.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3556av100.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hi3559av100.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-hisi.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-pltfm.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci-pltfm.hpatching <span class="token function">file</span> drivers/mmc/host/sdhci.cpatching <span class="token function">file</span> drivers/mmc/host/sdhci.hpatching <span class="token function">file</span> drivers/mtd/Makefilepatching <span class="token function">file</span> drivers/mtd/devices/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/Kconfigpatching <span class="token function">file</span> drivers/mtd/nand/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/Kconfigpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/hifmc100.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/hifmc100.hpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/hifmc100_os.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/hifmc100_spi_general.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100/hifmc_spi_nand_ids.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/Kconfigpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/hifmc100_nand.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/hifmc100_nand.hpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/hifmc100_nand_os.cpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/hifmc100_nand_os.hpatching <span class="token function">file</span> drivers/mtd/nand/hifmc100_nand/hifmc_nand_spl_ids.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/Kconfigpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_dump.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_ecc_count.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_ecc_dump.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_erase_count.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_inf.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_inf.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_dbg_read_retry.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_gen.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_gen.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_os.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_os.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_hynix_bg_bdie.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_hynix_bg_cdie.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_hynix_cg_adie.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_micron.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_samsung.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_read_retry_toshiba.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_sync.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_sync.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_sync_onfi_23.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc610_sync_toggle.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc620_gen.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc610/hinfc620_gen.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc_gen.cpatching <span class="token function">file</span> drivers/mtd/nand/hinfc_gen.hpatching <span class="token function">file</span> drivers/mtd/nand/hinfc_spl_ids.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/Kconfigpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/Makefilepatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100.hpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_hi3516a.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_os.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_os.hpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_spi_general.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_spi_ids.cpatching <span class="token function">file</span> drivers/mtd/nand/hisnfc100/hisnfc100_spi_ids.hpatching <span class="token function">file</span> drivers/mtd/nand/match_table.cpatching <span class="token function">file</span> drivers/mtd/nand/match_table.hpatching <span class="token function">file</span> drivers/mtd/nand/nand_base.cpatching <span class="token function">file</span> drivers/mtd/nand/nand_ids.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/Kconfigpatching <span class="token function">file</span> drivers/mtd/spi-nor/Makefilepatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/Kconfigpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/Makefilepatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350.hpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_hi3516a.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_en25q64.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_gd25qxxx.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_general.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_ids.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_micron.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_mx25l25635e.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_n25q256a.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_s25fl256s.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisfc350/hisfc350_spi_w25q256fv.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/hisi-sfc.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/spi-nor.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/spi_ids.cpatching <span class="token function">file</span> drivers/mtd/spi-nor/spi_ids.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/Kconfigpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/Makefilepatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/Kconfigpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/Makefilepatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/autoeee/autoeee.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/autoeee/autoeee.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/autoeee/phy_id_table.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/board.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/higmac.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/higmac.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/pm.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/proc-dev.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/sockioctl.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/tso.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/higmac/util.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/Makefilepatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/festa_s28v115_2c02.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/festa_v272_2723.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/hisi_femac.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/phy_fix.cpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi-femac/phy_fix.hpatching <span class="token function">file</span> drivers/net/ethernet/hisilicon/hisi_femac.cpatching <span class="token function">file</span> drivers/net/phy/Kconfigpatching <span class="token function">file</span> drivers/net/phy/Makefilepatching <span class="token function">file</span> drivers/net/phy/mdio-hisi-femac.cpatching <span class="token function">file</span> drivers/net/phy/mdio-hisi-gemac.cpatching <span class="token function">file</span> drivers/net/phy/phy_device.cpatching <span class="token function">file</span> drivers/net/usb/cdc_ether.cpatching <span class="token function">file</span> drivers/pci/Kconfigpatching <span class="token function">file</span> drivers/pci/Makefilepatching <span class="token function">file</span> drivers/pci/hipcie/Kconfigpatching <span class="token function">file</span> drivers/pci/hipcie/Makefilepatching <span class="token function">file</span> drivers/pci/hipcie/pci.hpatching <span class="token function">file</span> drivers/pci/hipcie/pcie.cpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3519av100.cpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3519av100.hpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3531a.cpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3531a.hpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3559av100.cpatching <span class="token function">file</span> drivers/pci/hipcie/pcie_hi3559av100.hpatching <span class="token function">file</span> drivers/pci/pci-driver.cpatching <span class="token function">file</span> drivers/pci/pcie/Kconfigpatching <span class="token function">file</span> drivers/pci/pcie/aer/Kconfigpatching <span class="token function">file</span> drivers/phy/Kconfigpatching <span class="token function">file</span> drivers/phy/Makefilepatching <span class="token function">file</span> drivers/phy/hibvt/Kconfigpatching <span class="token function">file</span> drivers/phy/hibvt/Makefilepatching <span class="token function">file</span> drivers/phy/hibvt/hiusb-ehci-hi3531a.cpatching <span class="token function">file</span> drivers/phy/hibvt/hiusb-xhci-hi3531a.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3516a-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3516cv500-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3516dv300-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3518ev20x-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3519av100-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3521a-sata.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3521a-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3531a-sata.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3536d-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3536dv100-sata.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3556av100-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3556v200-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3559av100-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hi3559v200-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hisi-sata.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hisi-sata.hpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hisi-usb.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hisi-usb.hpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hisi-usb3.cpatching <span class="token function">file</span> drivers/phy/hibvt/phy-hixvp-hisi-usb.cpatching <span class="token function">file</span> drivers/power/reset/Kconfigpatching <span class="token function">file</span> drivers/regulator/Makefilepatching <span class="token function">file</span> drivers/regulator/hi3559av100-regulator.cpatching <span class="token function">file</span> drivers/rtc/Kconfigpatching <span class="token function">file</span> drivers/rtc/Makefilepatching <span class="token function">file</span> drivers/rtc/rtc-hibvt.cpatching <span class="token function">file</span> drivers/scsi/scsi_lib.cpatching <span class="token function">file</span> drivers/scsi/ufs/Kconfigpatching <span class="token function">file</span> drivers/scsi/ufs/Makefilepatching <span class="token function">file</span> drivers/scsi/ufs/hi3559av100_ufs.cpatching <span class="token function">file</span> drivers/scsi/ufs/hi3559av100_ufs.hpatching <span class="token function">file</span> drivers/scsi/ufs/ufs.hpatching <span class="token function">file</span> drivers/scsi/ufs/ufs_proc.cpatching <span class="token function">file</span> drivers/scsi/ufs/ufs_proc.hpatching <span class="token function">file</span> drivers/scsi/ufs/ufshcd-pltfrm.cpatching <span class="token function">file</span> drivers/scsi/ufs/ufshcd.cpatching <span class="token function">file</span> drivers/scsi/ufs/ufshcd.hpatching <span class="token function">file</span> drivers/scsi/ufs/ufshci.hpatching <span class="token function">file</span> drivers/spi/spi-pl022.cpatching <span class="token function">file</span> drivers/spi/spi.cpatching <span class="token function">file</span> drivers/tty/serial/amba-pl011.cpatching <span class="token function">file</span> drivers/usb/Makefilepatching <span class="token function">file</span> drivers/usb/core/devices.cpatching <span class="token function">file</span> drivers/usb/core/hub.cpatching <span class="token function">file</span> drivers/usb/core/urb.cpatching <span class="token function">file</span> drivers/usb/dwc3/Makefilepatching <span class="token function">file</span> drivers/usb/dwc3/core.cpatching <span class="token function">file</span> drivers/usb/dwc3/core.hpatching <span class="token function">file</span> drivers/usb/dwc3/debug.hpatching <span class="token function">file</span> drivers/usb/dwc3/dwc3-hisi.cpatching <span class="token function">file</span> drivers/usb/dwc3/dwc3-hisi.hpatching <span class="token function">file</span> drivers/usb/dwc3/ep0.cpatching <span class="token function">file</span> drivers/usb/dwc3/gadget.cpatching <span class="token function">file</span> drivers/usb/dwc3/host.cpatching <span class="token function">file</span> drivers/usb/dwc3/io.hpatching <span class="token function">file</span> drivers/usb/dwc3/proc.cpatching <span class="token function">file</span> drivers/usb/dwc3/trace.hpatching <span class="token function">file</span> drivers/usb/gadget/Kconfigpatching <span class="token function">file</span> drivers/usb/gadget/composite.cpatching <span class="token function">file</span> drivers/usb/gadget/epautoconf.cpatching <span class="token function">file</span> drivers/usb/gadget/function/Makefilepatching <span class="token function">file</span> drivers/usb/gadget/function/f_mass_storage.cpatching <span class="token function">file</span> drivers/usb/gadget/function/f_uac1.cpatching <span class="token function">file</span> drivers/usb/gadget/function/f_uac1_legacy.cpatching <span class="token function">file</span> drivers/usb/gadget/function/f_uac2.cpatching <span class="token function">file</span> drivers/usb/gadget/function/f_uvc.cpatching <span class="token function">file</span> drivers/usb/gadget/function/u_audio.cpatching <span class="token function">file</span> drivers/usb/gadget/function/u_audio.hpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uac1.cpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uac1.hpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uac1_legacy.cpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uac1_legacy.hpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uac2.hpatching <span class="token function">file</span> drivers/usb/gadget/function/u_uvc.hpatching <span class="token function">file</span> drivers/usb/gadget/function/uvc.hpatching <span class="token function">file</span> drivers/usb/gadget/function/uvc_configfs.cpatching <span class="token function">file</span> drivers/usb/gadget/function/uvc_v4l2.cpatching <span class="token function">file</span> drivers/usb/gadget/function/uvc_video.cpatching <span class="token function">file</span> drivers/usb/gadget/function/uvc_video.hpatching <span class="token function">file</span> drivers/usb/gadget/legacy/Kconfigpatching <span class="token function">file</span> drivers/usb/gadget/legacy/audio.cpatching <span class="token function">file</span> drivers/usb/gadget/legacy/multi.cpatching <span class="token function">file</span> drivers/usb/gadget/legacy/webcam.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/Kconfigpatching <span class="token function">file</span> drivers/usb/gadget/udc/Makefilepatching <span class="token function">file</span> drivers/usb/gadget/udc/core.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/Makefilepatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_cc.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_cc.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_common_linux.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_crypto.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_crypto.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_dh.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_dh.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_list.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_mem.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_modpow.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_modpow.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_notifier.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_notifier.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_os.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_adp.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_adp.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_attr.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_attr.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_cfi.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_cfi.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_cil.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_cil.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_cil_intr.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_core_if.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_dbg.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_driver.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_driver.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd_ddma.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd_if.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd_intr.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd_linux.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_hcd_queue.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_os_dep.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_pcd.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_pcd.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_pcd_if.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_pcd_intr.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_pcd_linux.cpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/dwc_otg_regs.hpatching <span class="token function">file</span> drivers/usb/gadget/udc/hiudc/usb.hpatching <span class="token function">file</span> drivers/usb/host/xhci-hub.cpatching <span class="token function">file</span> drivers/usb/host/xhci-mem.cpatching <span class="token function">file</span> drivers/usb/host/xhci-plat.cpatching <span class="token function">file</span> drivers/usb/host/xhci.cpatching <span class="token function">file</span> drivers/usb/host/xhci.hpatching <span class="token function">file</span> drivers/video/fbdev/core/fbmem.cpatching <span class="token function">file</span> fs/Kconfigpatching <span class="token function">file</span> fs/Makefilepatching <span class="token function">file</span> fs/buffer.cpatching <span class="token function">file</span> fs/compat_ioctl.cpatching <span class="token function">file</span> fs/dcache.cpatching <span class="token function">file</span> fs/fat/dir.cpatching <span class="token function">file</span> fs/fat/fat.hpatching <span class="token function">file</span> fs/fat/fatent.cpatching <span class="token function">file</span> fs/fat/file.cpatching <span class="token function">file</span> fs/fat/inode.cpatching <span class="token function">file</span> fs/fat/misc.cpatching <span class="token function">file</span> fs/jffs2/Kconfigpatching <span class="token function">file</span> fs/jffs2/Makefilepatching <span class="token function">file</span> fs/jffs2/compr.cpatching <span class="token function">file</span> fs/jffs2/compr.hpatching <span class="token function">file</span> fs/jffs2/compr_lzma.cpatching <span class="token function">file</span> fs/jffs2/super.cpatching <span class="token function">file</span> fs/xfs/xfs_buf.cpatching <span class="token function">file</span> fs/xfs/xfs_icache.cpatching <span class="token function">file</span> fs/yaffs2/Kconfigpatching <span class="token function">file</span> fs/yaffs2/Makefilepatching <span class="token function">file</span> fs/yaffs2/yaffs_allocator.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_allocator.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_attribs.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_attribs.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_bitmap.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_bitmap.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_checkptrw.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_checkptrw.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_ecc.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_ecc.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_endian.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_endian.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_getblockinfo.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_guts.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_guts.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_linux.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_mtdif.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_mtdif.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_nameval.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_nameval.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_nand.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_nand.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_packedtags1.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_packedtags1.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_packedtags2.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_packedtags2.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_summary.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_summary.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_tagscompat.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_tagscompat.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_tagsmarshall.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_tagsmarshall.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_trace.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_verify.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_verify.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_vfs.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_yaffs1.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_yaffs1.hpatching <span class="token function">file</span> fs/yaffs2/yaffs_yaffs2.cpatching <span class="token function">file</span> fs/yaffs2/yaffs_yaffs2.hpatching <span class="token function">file</span> fs/yaffs2/yportenv.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516a-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516cv500-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516dv200-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516dv300-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516ev200-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3516ev300-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3518ev20x-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3518ev300-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3519-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3519av100-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3521a-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3531a-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3536dv100-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3556av100-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3556v200-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3559av100-clock.hpatching <span class="token function">file</span> include/dt-bindings/clock/hi3559v200-clock.hpatching <span class="token function">file</span> include/kvm/arm_psci.hpatching <span class="token function">file</span> include/linux/blkdev.hpatching <span class="token function">file</span> include/linux/cpuidle.hpatching <span class="token function">file</span> include/linux/dma-mapping.hpatching <span class="token function">file</span> include/linux/fb.hpatching <span class="token function">file</span> include/linux/fence.hpatching <span class="token function">file</span> include/linux/fs.hpatching <span class="token function">file</span> include/linux/hidmac.hpatching <span class="token function">file</span> include/linux/hiedmac.hpatching <span class="token function">file</span> include/linux/i2c.hpatching <span class="token function">file</span> include/linux/lzma.hpatching <span class="token function">file</span> include/linux/lzma/LzFind.hpatching <span class="token function">file</span> include/linux/lzma/LzHash.hpatching <span class="token function">file</span> include/linux/lzma/LzmaDec.hpatching <span class="token function">file</span> include/linux/lzma/LzmaEnc.hpatching <span class="token function">file</span> include/linux/lzma/Types.hpatching <span class="token function">file</span> include/linux/mfd/hisi_fmc.hpatching <span class="token function">file</span> include/linux/mm_types.hpatching <span class="token function">file</span> include/linux/mmc/card.hpatching <span class="token function">file</span> include/linux/mmc/core.hpatching <span class="token function">file</span> include/linux/mmc/host.hpatching <span class="token function">file</span> include/linux/mmc/mmc.hpatching <span class="token function">file</span> include/linux/mtd/nand.hpatching <span class="token function">file</span> include/linux/mtd/spi-nor.hpatching <span class="token function">file</span> include/linux/nospec.hpatching <span class="token function">file</span> include/linux/phy.hpatching <span class="token function">file</span> include/linux/psci.hpatching <span class="token function">file</span> include/linux/sched.hpatching <span class="token function">file</span> include/linux/spi/spi.hpatching <span class="token function">file</span> include/linux/tcp.hpatching <span class="token function">file</span> include/linux/usb/usbnet.hpatching <span class="token function">file</span> include/net/netns/ipv4.hpatching <span class="token function">file</span> include/net/tcp.hpatching <span class="token function">file</span> include/uapi/linux/i2c-dev.hpatching <span class="token function">file</span> include/uapi/linux/i2c.hpatching <span class="token function">file</span> include/uapi/linux/jffs2.hpatching <span class="token function">file</span> include/uapi/linux/msdos_fs.hpatching <span class="token function">file</span> include/uapi/linux/psci.hpatching <span class="token function">file</span> include/uapi/linux/snmp.hpatching <span class="token function">file</span> include/uapi/linux/usb/ch9.hpatching <span class="token function">file</span> include/uapi/linux/usb/video.hpatching <span class="token function">file</span> kernel/sched/cputime.cpatching <span class="token function">file</span> lib/Kconfigpatching <span class="token function">file</span> lib/Makefilepatching <span class="token function">file</span> lib/lzma/LzFind.cpatching <span class="token function">file</span> lib/lzma/LzmaDec.cpatching <span class="token function">file</span> lib/lzma/LzmaEnc.cpatching <span class="token function">file</span> lib/lzma/Makefilepatching <span class="token function">file</span> mm/init-mm.cpatching <span class="token function">file</span> mm/page_alloc.cpatching <span class="token function">file</span> net/core/net_namespace.cpatching <span class="token function">file</span> net/core/sock.cpatching <span class="token function">file</span> net/ipv4/ip_output.cpatching <span class="token function">file</span> net/ipv4/proc.cpatching <span class="token function">file</span> net/ipv4/sysctl_net_ipv4.cpatching <span class="token function">file</span> net/ipv4/tcp.cpatching <span class="token function">file</span> net/ipv4/tcp_input.cpatching <span class="token function">file</span> net/ipv4/tcp_ipv4.cpatching <span class="token function">file</span> net/ipv4/tcp_output.cpatching <span class="token function">file</span> net/ipv4/tcp_timer.cpatching <span class="token function">file</span> net/ipv6/output_core.cpatching <span class="token function">file</span> scripts/Makefile.cleanpatching <span class="token function">file</span> scripts/setlocalversion~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_emmc_smp_defconfigmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp'</span>  HOSTCC  scripts/basic/fixdep  HOSTCC  scripts/kconfig/conf.o  SHIPPED scripts/kconfig/zconf.tab.c  SHIPPED scripts/kconfig/zconf.lex.c  SHIPPED scripts/kconfig/zconf.hash.c  HOSTCC  scripts/kconfig/zconf.tab.o  HOSTLD  scripts/kconfig/conf<span class="token comment">#</span><span class="token comment"># configuration written to .config</span><span class="token comment">#</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp'</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- uImage <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span>/dev/null<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y-smp/arch/arm/boot/uImage /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/hi3516dv300_emmc_smp_image_glibc/uImage_hi3516dv300_smp---------task <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> prepare rootfs<span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc* <span class="token parameter variable">-rf</span><span class="token function">tar</span> xzf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/rootfs_scripts/rootfs.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span class="token function">mv</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token function">tar</span> xzf /opt/hisi-linux/x86-arm/arm-himix200-linux/runtime_glibc/a7_softfp_neon-vfpv4/lib.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token punctuation">;</span>arm-himix200-linux-strip <span class="token parameter variable">-d</span> ./lib/*<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvarm-himix200-linux-strip: Warning: <span class="token string">'./lib/a7_softfp_neon-vfpv4'</span> is a directoryarm-himix200-linux-strip:./lib/libgcc_s.so: File <span class="token function">format</span> not recognized~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv---------task <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> build busybox<span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 <span class="token parameter variable">-rf</span><span class="token function">tar</span> xzf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2.tgz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/config_v200_a7_softfp_neon <span class="token punctuation">\</span>        /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/.config<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/<span class="token punctuation">;</span><span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span>/dev/null<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvscripts/basic/split-include.c: In <span class="token keyword">function</span> ‘main’:scripts/basic/split-include.c:134:6: warning: ignoring <span class="token builtin class-name">return</span> value of ‘fgets’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>      fgets<span class="token punctuation">(</span>old_line, buffer_size, fp_target<span class="token punctuation">)</span><span class="token punctuation">;</span>      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~scripts/kconfig/conf.c: In <span class="token keyword">function</span> ‘conf_askvalue’:scripts/kconfig/conf.c:106:3: warning: ignoring <span class="token builtin class-name">return</span> value of ‘fgets’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>   fgets<span class="token punctuation">(</span>line, <span class="token number">128</span>, stdin<span class="token punctuation">)</span><span class="token punctuation">;</span>   ^~~~~~~~~~~~~~~~~~~~~~~scripts/kconfig/conf.c: In <span class="token keyword">function</span> ‘conf_choice’:scripts/kconfig/conf.c:354:4: warning: ignoring <span class="token builtin class-name">return</span> value of ‘fgets’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>    fgets<span class="token punctuation">(</span>line, <span class="token number">128</span>, stdin<span class="token punctuation">)</span><span class="token punctuation">;</span>    ^~~~~~~~~~~~~~~~~~~~~~~scripts/kconfig/mconf.c: In <span class="token keyword">function</span> ‘show_textbox’:scripts/kconfig/mconf.c:847:2: warning: ignoring <span class="token builtin class-name">return</span> value of ‘write’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>  write<span class="token punctuation">(</span>fd, text, strlen<span class="token punctuation">(</span>text<span class="token punctuation">))</span><span class="token punctuation">;</span>  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~scripts/kconfig/mconf.c: In <span class="token keyword">function</span> ‘exec_conf’:scripts/kconfig/mconf.c:481:2: warning: ignoring <span class="token builtin class-name">return</span> value of ‘pipe’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>  pipe<span class="token punctuation">(</span>pipefd<span class="token punctuation">)</span><span class="token punctuation">;</span>  ^~~~~~~~~~~~applets/usage.c: In <span class="token keyword">function</span> ‘main’:applets/usage.c:52:3: warning: ignoring <span class="token builtin class-name">return</span> value of ‘write’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>   write<span class="token punctuation">(</span>STDOUT_FILENO, usage_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.usage, strlen<span class="token punctuation">(</span>usage_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.usage<span class="token punctuation">)</span> + <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~applets/usage_pod.c: In <span class="token keyword">function</span> ‘main’:applets/usage_pod.c:74:3: warning: <span class="token function">format</span> not a string literal and no <span class="token function">format</span> arguments <span class="token punctuation">[</span>-Wformat-security<span class="token punctuation">]</span>   printf<span class="token punctuation">(</span>usage_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.aname<span class="token punctuation">)</span><span class="token punctuation">;</span>   ^~~~~~~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2 <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2'</span>  ./_install//bin/ash -<span class="token operator">&gt;</span> busybox  ./_install//bin/base64 -<span class="token operator">&gt;</span> busybox  ./_install//bin/cat -<span class="token operator">&gt;</span> busybox  ./_install//bin/catv -<span class="token operator">&gt;</span> busybox  ./_install//bin/chgrp -<span class="token operator">&gt;</span> busybox  ./_install//bin/chmod -<span class="token operator">&gt;</span> busybox  ./_install//bin/chown -<span class="token operator">&gt;</span> busybox  ./_install//bin/conspy -<span class="token operator">&gt;</span> busybox  ./_install//bin/cp -<span class="token operator">&gt;</span> busybox  ./_install//bin/cpio -<span class="token operator">&gt;</span> busybox  ./_install//bin/cttyhack -<span class="token operator">&gt;</span> busybox  ./_install//bin/date -<span class="token operator">&gt;</span> busybox  ./_install//bin/dd -<span class="token operator">&gt;</span> busybox  ./_install//bin/df -<span class="token operator">&gt;</span> busybox  ./_install//bin/dmesg -<span class="token operator">&gt;</span> busybox  ./_install//bin/dnsdomainname -<span class="token operator">&gt;</span> busybox  ./_install//bin/dumpkmap -<span class="token operator">&gt;</span> busybox  ./_install//bin/echo -<span class="token operator">&gt;</span> busybox  ./_install//bin/ed -<span class="token operator">&gt;</span> busybox  ./_install//bin/egrep -<span class="token operator">&gt;</span> busybox  ./_install//bin/false -<span class="token operator">&gt;</span> busybox  ./_install//bin/fatattr -<span class="token operator">&gt;</span> busybox  ./_install//bin/fdflush -<span class="token operator">&gt;</span> busybox  ./_install//bin/fgrep -<span class="token operator">&gt;</span> busybox  ./_install//bin/fsync -<span class="token operator">&gt;</span> busybox  ./_install//bin/getopt -<span class="token operator">&gt;</span> busybox  ./_install//bin/grep -<span class="token operator">&gt;</span> busybox  ./_install//bin/gunzip -<span class="token operator">&gt;</span> busybox  ./_install//bin/gzip -<span class="token operator">&gt;</span> busybox  ./_install//bin/hostname -<span class="token operator">&gt;</span> busybox  ./_install//bin/hush -<span class="token operator">&gt;</span> busybox  ./_install//bin/ionice -<span class="token operator">&gt;</span> busybox  ./_install//bin/iostat -<span class="token operator">&gt;</span> busybox  ./_install//bin/ipcalc -<span class="token operator">&gt;</span> busybox  ./_install//bin/kbd_mode -<span class="token operator">&gt;</span> busybox  ./_install//bin/kill -<span class="token operator">&gt;</span> busybox  ./_install//bin/linux32 -<span class="token operator">&gt;</span> busybox  ./_install//bin/linux64 -<span class="token operator">&gt;</span> busybox  ./_install//bin/ln -<span class="token operator">&gt;</span> busybox  ./_install//bin/login -<span class="token operator">&gt;</span> busybox  ./_install//bin/ls -<span class="token operator">&gt;</span> busybox  ./_install//bin/lzop -<span class="token operator">&gt;</span> busybox  ./_install//bin/makemime -<span class="token operator">&gt;</span> busybox  ./_install//bin/mkdir -<span class="token operator">&gt;</span> busybox  ./_install//bin/mknod -<span class="token operator">&gt;</span> busybox  ./_install//bin/mktemp -<span class="token operator">&gt;</span> busybox  ./_install//bin/more -<span class="token operator">&gt;</span> busybox  ./_install//bin/mount -<span class="token operator">&gt;</span> busybox  ./_install//bin/mountpoint -<span class="token operator">&gt;</span> busybox  ./_install//bin/mpstat -<span class="token operator">&gt;</span> busybox  ./_install//bin/mt -<span class="token operator">&gt;</span> busybox  ./_install//bin/mv -<span class="token operator">&gt;</span> busybox  ./_install//bin/netstat -<span class="token operator">&gt;</span> busybox  ./_install//bin/nice -<span class="token operator">&gt;</span> busybox  ./_install//bin/pidof -<span class="token operator">&gt;</span> busybox  ./_install//bin/ping -<span class="token operator">&gt;</span> busybox  ./_install//bin/ping6 -<span class="token operator">&gt;</span> busybox  ./_install//bin/pipe_progress -<span class="token operator">&gt;</span> busybox  ./_install//bin/printenv -<span class="token operator">&gt;</span> busybox  ./_install//bin/ps -<span class="token operator">&gt;</span> busybox  ./_install//bin/pwd -<span class="token operator">&gt;</span> busybox  ./_install//bin/reformime -<span class="token operator">&gt;</span> busybox  ./_install//bin/rev -<span class="token operator">&gt;</span> busybox  ./_install//bin/rm -<span class="token operator">&gt;</span> busybox  ./_install//bin/rmdir -<span class="token operator">&gt;</span> busybox  ./_install//bin/rpm -<span class="token operator">&gt;</span> busybox  ./_install//bin/run-parts -<span class="token operator">&gt;</span> busybox  ./_install//bin/scriptreplay -<span class="token operator">&gt;</span> busybox  ./_install//bin/sed -<span class="token operator">&gt;</span> busybox  ./_install//bin/setarch -<span class="token operator">&gt;</span> busybox  ./_install//bin/setserial -<span class="token operator">&gt;</span> busybox  ./_install//bin/sh -<span class="token operator">&gt;</span> busybox  ./_install//bin/sleep -<span class="token operator">&gt;</span> busybox  ./_install//bin/stat -<span class="token operator">&gt;</span> busybox  ./_install//bin/stty -<span class="token operator">&gt;</span> busybox  ./_install//bin/su -<span class="token operator">&gt;</span> busybox  ./_install//bin/sync -<span class="token operator">&gt;</span> busybox  ./_install//bin/tar -<span class="token operator">&gt;</span> busybox  ./_install//bin/touch -<span class="token operator">&gt;</span> busybox  ./_install//bin/true -<span class="token operator">&gt;</span> busybox  ./_install//bin/umount -<span class="token operator">&gt;</span> busybox  ./_install//bin/uname -<span class="token operator">&gt;</span> busybox  ./_install//bin/usleep -<span class="token operator">&gt;</span> busybox  ./_install//bin/vi -<span class="token operator">&gt;</span> busybox  ./_install//bin/watch -<span class="token operator">&gt;</span> busybox  ./_install//bin/zcat -<span class="token operator">&gt;</span> busybox  ./_install//linuxrc -<span class="token operator">&gt;</span> bin/busybox  ./_install//sbin/acpid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/adjtimex -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/arp -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/blkid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/blockdev -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/bootchartd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/depmod -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/devmem -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/fbsplash -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/fdisk -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/findfs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/freeramdisk -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/fsck.minix -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/fstrim -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/getty -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/halt -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/hdparm -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/hwclock -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ifconfig -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ifdown -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ifenslave -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ifup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/init -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/insmod -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ip -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ipaddr -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/iplink -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/ipneigh -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/iproute -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/iprule -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/iptunnel -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/klogd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/loadkmap -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/logread -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/losetup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/lsmod -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/makedevs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mdev -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mkdosfs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mke2fs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mkfs.minix -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mkfs.vfat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/mkswap -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/modinfo -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/modprobe -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/nameif -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/pivot_root -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/poweroff -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/raidautorun -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/reboot -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/rmmod -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/route -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/runlevel -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/setconsole -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/slattach -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/start-stop-daemon -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/sulogin -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/swapoff -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/swapon -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/switch_root -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/sysctl -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/syslogd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/tunctl -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/uevent -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/vconfig -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/watchdog -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//sbin/zcip -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/<span class="token punctuation">[</span> -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/<span class="token punctuation">[</span><span class="token punctuation">[</span> -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/awk -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/basename -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/beep -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/blkdiscard -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/bunzip2 -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/bzcat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/bzip2 -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/cal -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/chpst -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/chrt -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/chvt -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/cksum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/clear -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/cmp -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/comm -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/crontab -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/cryptpw -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/cut -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/dc -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/deallocvt -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/diff -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/dirname -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/dos2unix -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/du -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/dumpleases -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/eject -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/env -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/envdir -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/envuidgid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/expand -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/expr -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/fgconsole -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/find -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/flock -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/fold -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/free -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/ftpget -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/ftpput -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/fuser -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/groups -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/hd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/head -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/hexdump -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/hostid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/id -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/install -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/ipcrm -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/ipcs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/killall -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/last -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/less -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/logger -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/logname -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lpq -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lpr -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lsof -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lspci -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lsusb -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lzcat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lzma -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/lzopcat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/man -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/md5sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/mesg -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/microcom -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/mkfifo -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/mkpasswd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/nc -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/nmeter -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/nohup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/nslookup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/od -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/openvt -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/passwd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/patch -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pgrep -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pkill -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pmap -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/printf -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pscan -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pstree -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/pwdx -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/readlink -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/realpath -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/renice -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/reset -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/resize -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/rpm2cpio -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/runsv -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/runsvdir -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/rx -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/script -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/seq -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/setkeycodes -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/setsid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/setuidgid -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sha1sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sha256sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sha3sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sha512sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/showkey -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/shuf -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/smemcap -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/softlimit -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sort -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/split -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/strings -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sum -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/sv -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/svc -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tac -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tail -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tcpsvd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tee -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/telnet -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/test -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tftp -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/time -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/timeout -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/top -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tr -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/traceroute -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/traceroute6 -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/truncate -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/tty -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/ttysize -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/udpsvd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unexpand -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/uniq -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unix2dos -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unlink -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unlzma -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unlzop -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unshare -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unxz -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/unzip -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/uptime -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/users -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/uudecode -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/uuencode -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/vlock -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/volname -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/wall -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/wc -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/which -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/who -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/whoami -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/whois -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/xargs -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/xz -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/xzcat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/bin/yes -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/add-shell -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/addgroup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/adduser -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/arping -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/brctl -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/chat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/chpasswd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/chroot -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/crond -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/delgroup -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/deluser -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/dhcprelay -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/dnsd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ether-wake -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/fakeidentd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/fbset -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/fdformat -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ftpd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/httpd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/i2cdetect -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/i2cdump -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/i2cget -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/i2cset -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ifplugd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/inetd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/killall5 -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/loadfont -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/lpd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/nanddump -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/nandwrite -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/nbd-client -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ntpd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/popmaildir -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/powertop -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/rdate -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/rdev -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/readahead -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/readprofile -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/remove-shell -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/rtcwake -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/sendmail -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/setfont -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/setlogcons -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/svlogd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/telnetd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/tftpd -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubiattach -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubidetach -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubimkvol -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubirename -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubirmvol -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubirsvol -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox  ./_install//usr/sbin/ubiupdatevol -<span class="token operator">&gt;</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/bin/busybox--------------------------------------------------You will probably need to <span class="token function">make</span> your busybox binarysetuid root to ensure all configured applets willwork properly.--------------------------------------------------make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2'</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/busybox/busybox-1.26.2/_install/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc---------task <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> build tools <span class="token function">which</span> run on pc<span class="token function">tar</span> xf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9<span class="token punctuation">;</span>patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/hi_yaffs2utils.patch<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpatching <span class="token function">file</span> Makefilepatching <span class="token function">file</span> mkyaffs2.cpatching <span class="token function">file</span> oob_config.hpatching <span class="token function">file</span> oob_config_v100.cpatching <span class="token function">file</span> oob_config_v100_nand.cpatching <span class="token function">file</span> oob_config_v610.cpatching <span class="token function">file</span> progress_bar.c~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9'</span>gcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> yaffs2/yaffs_hweight.c <span class="token parameter variable">-o</span> yaffs2/yaffs_hweight.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> yaffs2/yaffs_ecc.c <span class="token parameter variable">-o</span> yaffs2/yaffs_ecc.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> yaffs2/yaffs_packedtags1.c <span class="token parameter variable">-o</span> yaffs2/yaffs_packedtags1.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> yaffs2/yaffs_packedtags2.c <span class="token parameter variable">-o</span> yaffs2/yaffs_packedtags2.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> safe_rw.c <span class="token parameter variable">-o</span> safe_rw.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> endian_convert.c <span class="token parameter variable">-o</span> endian_convert.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> progress_bar.c <span class="token parameter variable">-o</span> progress_bar.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> mkyaffs2.c <span class="token parameter variable">-o</span> mkyaffs2.ogcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> oob_config_v100.c <span class="token parameter variable">-o</span> oob_config_v100.ogcc <span class="token parameter variable">-o</span> mkyaffs2image100 yaffs2/yaffs_hweight.o yaffs2/yaffs_ecc.o yaffs2/yaffs_packedtags1.o yaffs2/yaffs_packedtags2.o safe_rw.o endian_convert.o progress_bar.o mkyaffs2.o <span class="token parameter variable">-lm</span> oob_config_v100.o <span class="token parameter variable">-static</span>gcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> unyaffs2.c <span class="token parameter variable">-o</span> unyaffs2.ounyaffs2.c: In <span class="token keyword">function</span> ‘unyaffs2_obj_chattr’:unyaffs2.c:711:2: warning: ignoring <span class="token builtin class-name">return</span> value of ‘lchown’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>  lchown<span class="token punctuation">(</span>fpath, obj-<span class="token operator">&gt;</span>uid, obj-<span class="token operator">&gt;</span>gid<span class="token punctuation">)</span><span class="token punctuation">;</span>  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In <span class="token function">file</span> included from /usr/include/string.h:494:0,                 from unyaffs2.c:26:In <span class="token keyword">function</span> ‘memcpy’,    inlined from ‘unyaffs2_extract_hardlink.constprop’ at unyaffs2.c:1151:2,    inlined from ‘unyaffs2_extract_obj’ at unyaffs2.c:1218:10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:10: warning: ‘__builtin___memcpy_chk’ writing <span class="token number">16</span> bytes into a region of size <span class="token number">8</span> overflows the destination <span class="token punctuation">[</span>-Wstringop-overflow<span class="token operator">=</span><span class="token punctuation">]</span>   <span class="token builtin class-name">return</span> __builtin___memcpy_chk <span class="token punctuation">(</span>__dest, __src, __len, __bos0 <span class="token punctuation">(</span>__dest<span class="token punctuation">))</span><span class="token punctuation">;</span>          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~gcc <span class="token parameter variable">-o</span> unyaffs2 yaffs2/yaffs_hweight.o yaffs2/yaffs_ecc.o yaffs2/yaffs_packedtags1.o yaffs2/yaffs_packedtags2.o safe_rw.o endian_convert.o progress_bar.o unyaffs2.o <span class="token parameter variable">-lm</span>gcc <span class="token parameter variable">-c</span> -I. -I./yaffs2 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wshadow</span> <span class="token parameter variable">-Winline</span> -Wpointer-arith -Wnested-externs -Wwrite-strings -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes -Wredundant-decls <span class="token parameter variable">-D_HAVE_MMAP</span> unspare2.c <span class="token parameter variable">-o</span> unspare2.ogcc <span class="token parameter variable">-o</span> unspare2 yaffs2/yaffs_hweight.o yaffs2/yaffs_ecc.o yaffs2/yaffs_packedtags1.o yaffs2/yaffs_packedtags2.o safe_rw.o endian_convert.o progress_bar.o unspare2.o <span class="token parameter variable">-lm</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/bin<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/yaffs2utils-0.2.9/mkyaffs2image100 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/binmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/mkyaffs2image/bin/mkyaffs2image100 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib'</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> zlib-1.2.11.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/zlib-1.2.11 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/../zlib/tmp"</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -Checking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>.Checking <span class="token keyword">for</span> shared library support<span class="token punctuation">..</span>.Building shared library libz.so.1.2.11 with gcc.Checking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> off64_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> fseeko<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> strerror<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> stdarg.h<span class="token punctuation">..</span>. Yes.Checking whether to use vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span> or s<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. using vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span>.Checking <span class="token keyword">for</span> vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> stdio.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> <span class="token builtin class-name">return</span> value of vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> attribute<span class="token punctuation">(</span>visibility<span class="token punctuation">)</span> support<span class="token punctuation">..</span>. Yes.make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib/tmp/zlib-1.2.11'</span>gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> example.o test/example.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> adler32.o adler32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> crc32.o crc32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> deflate.o deflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> infback.o infback.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inffast.o inffast.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inflate.o inflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inftrees.o inftrees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> trees.o trees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> zutil.o zutil.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> compress.o compress.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> uncompr.o uncompr.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzclose.o gzclose.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzlib.o gzlib.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzread.o gzread.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzwrite.o gzwrite.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> minigzip.o test/minigzip.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/adler32.o adler32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/crc32.o crc32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/deflate.o deflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/inffast.o inffast.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/infback.o infback.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/inflate.o inflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/inftrees.o inftrees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/trees.o trees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/zutil.o zutil.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/compress.o compress.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/uncompr.o uncompr.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/gzclose.o gzclose.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/gzlib.o gzlib.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/gzread.o gzread.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> example64.o test/example.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> minigzip64.o test/minigzip.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> objs/gzwrite.o gzwrite.car rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.ogcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> example example.o -L. libz.agcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> minigzip minigzip.o -L. libz.agcc <span class="token parameter variable">-shared</span> -Wl,-soname,libz.so.1,--version-script,zlib.map <span class="token parameter variable">-O3</span> <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> libz.so.1.2.11 adler32.lo crc32.lo deflate.lo infback.lo inffast.lo inflate.lo inftrees.lo trees.lo zutil.lo compress.lo uncompr.lo gzclose.lo gzlib.lo gzread.lo gzwrite.lo  <span class="token parameter variable">-lc</span>gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> example64 example64.o -L. libz.agcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> minigzip64 minigzip64.o -L. libz.a<span class="token function">rm</span> <span class="token parameter variable">-f</span> libz.so libz.so.1<span class="token function">ln</span> <span class="token parameter variable">-s</span> libz.so.1.2.11 libz.so<span class="token function">ln</span> <span class="token parameter variable">-s</span> libz.so.1.2.11 libz.so.1gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> examplesh example.o -L. libz.so.1.2.11gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> minigzipsh minigzip.o -L. libz.so.1.2.11make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib/tmp/zlib-1.2.11'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib/tmp/zlib-1.2.11'</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/libz.a<span class="token function">cp</span> libz.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/libz.a<span class="token function">cp</span> libz.so.1.2.11 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib<span class="token function">chmod</span> <span class="token number">755</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/libz.so.1.2.11<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/share/man/man3/zlib.3<span class="token function">cp</span> zlib.3 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/share/man/man3<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/share/man/man3/zlib.3<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/pkgconfig/zlib.pc<span class="token function">cp</span> zlib.pc /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/pkgconfig<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/lib/pkgconfig/zlib.pc<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/include/zlib.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/include/zconf.h<span class="token function">cp</span> zlib.h zconf.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/include<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/include/zlib.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/<span class="token punctuation">..</span>/zlib/tmp/include/zconf.hmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib/tmp/zlib-1.2.11'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlibmake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/zlib'</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-d</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09 <span class="token operator">||</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09<span class="token function">tar</span> <span class="token parameter variable">-xf</span> lzo-2.09.tar.* <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -configure: Configuring LZO <span class="token number">2.09</span>checking build system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuchecking target system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuchecking whether to <span class="token builtin class-name">enable</span> maintainer-specific portions of Makefiles<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. archecking the archiver <span class="token punctuation">(</span>ar<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. archecking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking how to run the C preprocessor<span class="token punctuation">..</span>. gcc <span class="token parameter variable">-E</span>checking whether the C preprocessor needs special flags<span class="token punctuation">..</span>. none neededchecking <span class="token keyword">for</span> an ANSI C-conforming const<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether byte ordering is bigendian<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> special C compiler options needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> _FILE_OFFSET_BITS value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /usr/bin/nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/usr/bin/nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to x86_64-unknown-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /usr/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> objdump<span class="token punctuation">..</span>. objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> strip<span class="token punctuation">..</span>. stripchecking <span class="token keyword">for</span> ranlib<span class="token punctuation">..</span>. ranlibchecking <span class="token builtin class-name">command</span> to parse /usr/bin/nm <span class="token parameter variable">-B</span> output from gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the gcc linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. nochecking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether time.h and sys/time.h may both be included<span class="token punctuation">..</span>. <span class="token function">yes</span>checking assert.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking assert.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> assert.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking ctype.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking ctype.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ctype.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dirent.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dirent.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dirent.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking errno.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking errno.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> errno.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking float.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking float.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> float.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking limits.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking limits.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> limits.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking malloc.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking malloc.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> malloc.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking setjmp.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking setjmp.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> setjmp.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking signal.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking signal.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> signal.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stdarg.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stdarg.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdarg.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stddef.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stddef.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stddef.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking stdio.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stdio.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdio.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking time.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking time.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking utime.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking utime.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utime.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/mman.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/mman.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/mman.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/resource.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/resource.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/resource.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking sys/time.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking sys/wait.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/wait.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/wait.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether limits.h is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> off_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ptrdiff_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token builtin class-name">return</span> <span class="token builtin class-name">type</span> of signal handlers<span class="token punctuation">..</span>. voidchecking size of short<span class="token punctuation">..</span>. <span class="token number">2</span>checking size of int<span class="token punctuation">..</span>. <span class="token number">4</span>checking size of long<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of long long<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of __int16<span class="token punctuation">..</span>. <span class="token number">0</span>checking size of __int32<span class="token punctuation">..</span>. <span class="token number">0</span>checking size of __int64<span class="token punctuation">..</span>. <span class="token number">0</span>checking size of void *<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of size_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of ptrdiff_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of __int32<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token number">0</span>checking size of intmax_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of uintmax_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of intptr_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of uintptr_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of float<span class="token punctuation">..</span>. <span class="token number">4</span>checking size of double<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of long double<span class="token punctuation">..</span>. <span class="token number">16</span>checking size of dev_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of fpos_t<span class="token punctuation">..</span>. <span class="token number">16</span>checking size of mode_t<span class="token punctuation">..</span>. <span class="token number">4</span>checking size of off_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of ssize_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of time_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking <span class="token keyword">for</span> access<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> alloca<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> atexit<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> atoi<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> atol<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> chmod<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> chown<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> clock_getcpuclockid<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> clock_getres<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> clock_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ctime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> difftime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fstat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getenv<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getpagesize<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getrusage<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gettimeofday<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gmtime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> isatty<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> localtime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> longjmp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> lstat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memcmp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memcpy<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memmove<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memset<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mkdir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mktime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mmap<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mprotect<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> munmap<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> qsort<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> raise<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> rmdir<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> setjmp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> signal<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> snprintf<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strcasecmp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strchr<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strdup<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strerror<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strftime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stricmp<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> strncasecmp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strnicmp<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> strrchr<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strstr<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> time<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> umask<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> vsnprintf<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build assembly versions<span class="token punctuation">..</span>. nochecking whether your compiler passes the LZO conformance test<span class="token punctuation">..</span>. <span class="token function">yes</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commands   LZO configuration summary   -------------------------   LZO version                <span class="token builtin class-name">:</span> <span class="token number">2.09</span>   configured <span class="token keyword">for</span> <span class="token function">host</span>        <span class="token builtin class-name">:</span> x86_64-unknown-linux-gnu   <span class="token builtin class-name">source</span> code location       <span class="token builtin class-name">:</span> <span class="token builtin class-name">.</span>   compiler                   <span class="token builtin class-name">:</span> gcc   preprocessor definitions   <span class="token builtin class-name">:</span> <span class="token parameter variable">-DLZO_HAVE_CONFIG_H</span><span class="token operator">=</span><span class="token number">1</span>   preprocessor flags         <span class="token builtin class-name">:</span>   compiler flags             <span class="token builtin class-name">:</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   build static library       <span class="token builtin class-name">:</span> <span class="token function">yes</span>   build shared library       <span class="token builtin class-name">:</span> no   <span class="token builtin class-name">enable</span> i386 assembly code  <span class="token builtin class-name">:</span> no   LZO <span class="token number">2.09</span> configured.   Copyright <span class="token punctuation">(</span>C<span class="token punctuation">)</span> <span class="token number">1996</span>-2015 Markus Franz Xaver Johannes Oberhumer   All Rights Reserved.   The LZO library is <span class="token function">free</span> software<span class="token punctuation">;</span> you can redistribute it and/or   modify it under the terms of the GNU General Public License as   published by the Free Software Foundation<span class="token punctuation">;</span> either version <span class="token number">2</span> of   the License, or <span class="token punctuation">(</span>at your option<span class="token punctuation">)</span> any later version.   The LZO library is distributed <span class="token keyword">in</span> the hope that it will be useful,   but WITHOUT ANY WARRANTY<span class="token punctuation">;</span> without even the implied warranty of   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   GNU General Public License <span class="token keyword">for</span> <span class="token function">more</span> details.   Markus F.X.J. Oberhumer   <span class="token operator">&lt;</span>markus@oberhumer.com<span class="token operator">&gt;</span>   http://www.oberhumer.com/opensource/lzo/Type <span class="token string">'make'</span> to build LZO.Type <span class="token string">'make check'</span> and <span class="token string">'make test'</span> to <span class="token builtin class-name">test</span> LZO.Type <span class="token string">'make install'</span> to <span class="token function">install</span> LZO.After installing LZO, please have a <span class="token function">look</span> at <span class="token string">'examples/simple.c'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span><span class="token function">make</span>  all-ammake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>  CC       src/lzo1.lo  CC       src/lzo1a.lo  CC       src/lzo1_99.lo  CC       src/lzo1b_1.lo  CC       src/lzo1b_2.lo  CC       src/lzo1a_99.lo  CC       src/lzo1b_3.lo  CC       src/lzo1b_5.lo  CC       src/lzo1b_4.lo  CC       src/lzo1b_9.lo  CC       src/lzo1b_8.lo  CC       src/lzo1b_7.lo  CC       src/lzo1b_6.lo  CC       src/lzo1b_9x.lo  CC       src/lzo1b_99.lo  CC       src/lzo1b_cc.lo  CC       src/lzo1b_d1.lo  CC       src/lzo1b_d2.lo  CC       src/lzo1b_rr.lo  CC       src/lzo1b_xx.lo  CC       src/lzo1c_1.lo  CC       src/lzo1c_2.lo  CC       src/lzo1c_3.lo  CC       src/lzo1c_4.lo  CC       src/lzo1c_5.lo  CC       src/lzo1c_6.lo  CC       src/lzo1c_7.lo  CC       src/lzo1c_8.lo  CC       src/lzo1c_9.lo  CC       src/lzo1c_99.lo  CC       src/lzo1c_9x.lo  CC       src/lzo1c_cc.lo  CC       src/lzo1c_d2.lo  CC       src/lzo1c_d1.lo  CC       src/lzo1c_rr.lo  CC       src/lzo1c_xx.lo  CC       src/lzo1f_1.lo  CC       src/lzo1f_9x.lo  CC       src/lzo1f_d1.lo  CC       src/lzo1f_d2.lo  CC       src/lzo1x_1.lo  CC       src/lzo1x_1k.lo  CC       src/lzo1x_1l.lo  CC       src/lzo1x_1o.lo  CC       src/lzo1x_9x.lo  CC       src/lzo1x_d1.lo  CC       src/lzo1x_d2.lo  CC       src/lzo1x_d3.lo  CC       src/lzo1x_o.lo  CC       src/lzo1y_1.lo  CC       src/lzo1y_9x.lo  CC       src/lzo1y_d1.lo  CC       src/lzo1y_d2.lo  CC       src/lzo1y_d3.lo  CC       src/lzo1y_o.lo  CC       src/lzo1z_9x.lo  CC       src/lzo1z_d1.lo  CC       src/lzo1z_d2.lo  CC       src/lzo1z_d3.lo  CC       src/lzo2a_9x.lo  CC       src/lzo2a_d1.lo  CC       src/lzo2a_d2.lo  CC       src/lzo_crc.lo  CC       src/lzo_init.lo  CC       src/lzo_ptr.lo  CC       src/lzo_str.lo  CC       src/lzo_util.lo  CC       examples/dict.o  CC       examples/lzopack.o  CC       examples/overlap.o  CC       examples/precomp.o  CC       examples/precomp2.o  CC       examples/simple.o  CC       tests/align.o  CC       lzotest/lzotest.o  CC       tests/chksum.o  CC       minilzo/t-testmini.o  CC       tests/promote.o  CC       tests/sizes.o  CC       minilzo/t-minilzo.o  CCLD     tests/promote  CCLD     tests/sizes  CCLD     src/liblzo2.la  CCLD     minilzo/testminiar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CCLD     examples/dict  CCLD     examples/lzopack  CCLD     examples/simple  CCLD     examples/overlap  CCLD     examples/precomp  CCLD     examples/precomp2  CCLD     tests/chksum  CCLD     tests/align  CCLD     lzotest/lzotestmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib'</span> /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span>   src/liblzo2.la <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> src/.libs/liblzo2.lai /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib/liblzo2.lalibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> src/.libs/liblzo2.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib/liblzo2.alibtool: install: <span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib/liblzo2.alibtool: install: ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib/liblzo2.alibtool: finish: <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/sbin"</span> ldconfig <span class="token parameter variable">-n</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib----------------------------------------------------------------------Libraries have been installed in:   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/libIf you ever happen to want to <span class="token function">link</span> against installed libraries<span class="token keyword">in</span> a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the <span class="token string">'-LLIBDIR'</span>flag during linking and <span class="token keyword">do</span> at least one of the following:   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_LIBRARY_PATH'</span> environment variable     during execution   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_RUN_PATH'</span> environment variable     during linking   - use the <span class="token string">'-Wl,-rpath -Wl,LIBDIR'</span> linker flag   - have your system administrator <span class="token function">add</span> LIBDIR to <span class="token string">'/etc/ld.so.conf'</span>See any operating system documentation about shared libraries <span class="token keyword">for</span><span class="token function">more</span> information, such as the ld<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> and ld.so<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> manual pages.---------------------------------------------------------------------- /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/doc/lzo'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> AUTHORS COPYING NEWS THANKS doc/LZO.FAQ doc/LZO.TXT doc/LZOAPI.TXT <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/doc/lzo'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/include/lzo'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> include/lzo/lzo1.h include/lzo/lzo1a.h include/lzo/lzo1b.h include/lzo/lzo1c.h include/lzo/lzo1f.h include/lzo/lzo1x.h include/lzo/lzo1y.h include/lzo/lzo1z.h include/lzo/lzo2a.h include/lzo/lzo_asm.h include/lzo/lzoconf.h include/lzo/lzodefs.h include/lzo/lzoutil.h <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/include/lzo'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lzo-2.09'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool<span class="token builtin class-name">test</span> <span class="token parameter variable">-d</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2 <span class="token operator">||</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2<span class="token function">tar</span> <span class="token parameter variable">-xf</span> mtd-utils-2.0.2.tar.* <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp <span class="token assign-left variable">CC</span><span class="token operator">=</span>gcc <span class="token punctuation">\</span>            --without-xattr <span class="token punctuation">\</span>            <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/include"</span>  <span class="token punctuation">\</span>                <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib"</span> <span class="token punctuation">\</span>                <span class="token assign-left variable">ZLIBCPPFLAGS</span><span class="token operator">=</span><span class="token string">"-I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/include"</span> <span class="token punctuation">\</span>                <span class="token assign-left variable">ZLIBLDFLAGS</span><span class="token operator">=</span><span class="token string">"-L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/lib"</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -checking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking build system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /usr/bin/nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/usr/bin/nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to x86_64-pc-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /usr/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> objdump<span class="token punctuation">..</span>. objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. archecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> strip<span class="token punctuation">..</span>. stripchecking <span class="token keyword">for</span> ranlib<span class="token punctuation">..</span>. ranlibchecking <span class="token builtin class-name">command</span> to parse /usr/bin/nm <span class="token parameter variable">-B</span> output from gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a working dd<span class="token punctuation">..</span>. /bin/ddchecking how to truncate binary pipes<span class="token punctuation">..</span>. /bin/dd <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span>checking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking how to run the C preprocessor<span class="token punctuation">..</span>. gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the gcc linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token parameter variable">-lc</span> should be explicitly linked in<span class="token punctuation">..</span>. nochecking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> gccchecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C89<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking dependency style of gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> gcc3checking whether compiler handles -Wall<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wextra<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-declarations<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wwrite-strings<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wjump-misses-init<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wuninitialized<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Winit-self<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wlogical-op<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-result<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wduplicated-cond<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wduplicated-branches<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wrestrict<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wnull-dereference<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-shadow<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-sign-compare<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pkg-config<span class="token punctuation">..</span>. /usr/bin/pkg-configchecking pkg-config is at least version <span class="token number">0.9</span>.0<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ZLIB<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> UUID<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> library containing clock_gettime<span class="token punctuation">..</span>. none requiredchecking <span class="token keyword">for</span> clock_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc is Clang<span class="token punctuation">..</span>. nochecking whether pthreads work with -pthread<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> joinable pthread attribute<span class="token punctuation">..</span>. PTHREAD_CREATE_JOINABLEchecking whether <span class="token function">more</span> special flags are required <span class="token keyword">for</span> pthreads<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> PTHREAD_PRIO_INHERIT<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">lzo1x_1_15_compress</span> <span class="token keyword">in</span> -llzo2<span class="token punctuation">..</span>. <span class="token function">yes</span>checking execinfo.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking execinfo.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> execinfo.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking size of off_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking size of loff_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating tests/fs-tests/fs_help_all.shconfig.status: creating tests/fs-tests/fs_run_all.shconfig.status: creating tests/fs-tests/stress/fs_stress00.shconfig.status: creating tests/fs-tests/stress/fs_stress01.shconfig.status: creating tests/ubi-tests/runubitests.shconfig.status: creating tests/ubi-tests/ubi-stress-test.shconfig.status: creating Makefileconfig.status: creating include/config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commandsmake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span>  CC       lib/libmtd.o  CC       lib/libfec.o  CC       lib/common.o  CC       lib/libcrc32.o  CC       lib/libmtd_legacy.o  AR       libmtd.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       lib/execinfo.o  AR       libmissing.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       lib/libubi.o  AR       libubi.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       lib/libubigen.o  AR       libubigen.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       lib/libscan.o  AR       libscan.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       lib/libiniparser.o  CC       lib/dictionary.o  AR       libiniparser.aar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CC       tests/ubi-tests/io_basic-io_basic.o  CC       tests/ubi-tests/io_basic-helpers.o  CCLD     io_basic  CC       tests/ubi-tests/io_update-io_update.o  CC       tests/ubi-tests/io_update-helpers.o  CCLD     io_update  CC       tests/ubi-tests/io_paral-io_paral.o  CC       tests/ubi-tests/io_paral-helpers.o  CCLD     io_paral  CC       tests/ubi-tests/io_read-io_read.o  CC       tests/ubi-tests/io_read-helpers.o  CCLD     io_read  CC       tests/ubi-tests/volrefcnt-volrefcnt.o  CC       tests/ubi-tests/volrefcnt-helpers.o  CCLD     volrefcnt  CC       tests/ubi-tests/integ-integ.o  CC       tests/ubi-tests/integ-helpers.o  CCLD     integ  CC       tests/ubi-tests/mkvol_basic-mkvol_basic.o  CC       tests/ubi-tests/mkvol_basic-helpers.o  CCLD     mkvol_basic  CC       tests/ubi-tests/mkvol_bad-mkvol_bad.o  CC       tests/ubi-tests/mkvol_bad-helpers.o  CCLD     mkvol_bad  CC       tests/ubi-tests/mkvol_paral-mkvol_paral.o  CC       tests/ubi-tests/mkvol_paral-helpers.o  CCLD     mkvol_paral  CC       tests/ubi-tests/rsvol-rsvol.o  CC       tests/ubi-tests/rsvol-helpers.o  CCLD     rsvol  CC       tests/jittertest/JitterTest-JitterTest.o  CCLD     JitterTest  CC       tests/jittertest/plotJittervsFill-plotJittervsFill.o  CCLD     plotJittervsFill  CC       tests/checkfs/makefiles-makefiles.o  CCLD     makefiles  CC       tests/checkfs/checkfs-checkfs.o  CC       tests/checkfs/checkfs-comm.otests/checkfs/comm.c:37:5: warning: no previous prototype <span class="token keyword">for</span> ‘do_pwr_dn’ <span class="token punctuation">[</span>-Wmissing-prototypes<span class="token punctuation">]</span> int do_pwr_dn<span class="token punctuation">(</span>int fd, int cycleCnt<span class="token punctuation">)</span>     ^~~~~~~~~  CCLD     checkfs  CC       tests/fs-tests/integrity/integck-integck.o  CCLD     integck  CC       tests/fs-tests/simple/test_1-test_1.o  CC       tests/fs-tests/lib/test_1-tests.o  CCLD     test_1  CC       tests/fs-tests/simple/test_2-test_2.o  CC       tests/fs-tests/lib/test_2-tests.o  CCLD     test_2  CC       tests/fs-tests/simple/ftrunc-ftrunc.o  CC       tests/fs-tests/lib/ftrunc-tests.o  CCLD     ftrunc  CC       tests/fs-tests/simple/perf-perf.o  CC       tests/fs-tests/lib/perf-tests.o  CCLD     perf  CC       tests/fs-tests/simple/orph-orph.o  CC       tests/fs-tests/lib/orph-tests.o  CCLD     orph  CC       tests/fs-tests/stress/atoms/stress_1-stress_1.o  CC       tests/fs-tests/lib/stress_1-tests.o  CCLD     stress_1  CC       tests/fs-tests/stress/atoms/stress_2-stress_2.o  CC       tests/fs-tests/lib/stress_2-tests.o  CCLD     stress_2  CC       tests/fs-tests/stress/atoms/stress_3-stress_3.o  CC       tests/fs-tests/lib/stress_3-tests.o  CCLD     stress_3  CC       tests/fs-tests/stress/atoms/pdfrun-pdfrun.o  CC       tests/fs-tests/lib/pdfrun-tests.o  CCLD     pdfrun  CC       tests/fs-tests/stress/atoms/gcd_hupper-gcd_hupper.o  CC       tests/fs-tests/lib/gcd_hupper-tests.o  CCLD     gcd_hupper  CC       tests/fs-tests/stress/atoms/rndwrite00-rndwrite00.o  CC       tests/fs-tests/lib/rndwrite00-tests.o  CCLD     rndwrite00  CC       tests/fs-tests/stress/atoms/fwrite00-fwrite00.o  CC       tests/fs-tests/lib/fwrite00-tests.o  CCLD     fwrite00  CC       tests/fs-tests/stress/atoms/rmdir00-rmdir00.o  CC       tests/fs-tests/lib/rmdir00-tests.o  CCLD     rmdir00  CC       tests/fs-tests/stress/atoms/rndrm00-rndrm00.o  CC       tests/fs-tests/lib/rndrm00-tests.o  CCLD     rndrm00  CC       tests/fs-tests/stress/atoms/rndrm99-rndrm99.o  CC       tests/fs-tests/lib/rndrm99-tests.o  CCLD     rndrm99  CC       tests/fs-tests/utils/fstest_monitor.o  CCLD     fstest_monitor  CC       tests/fs-tests/utils/free_space.o  CCLD     free_space  CC       tests/mtd-tests/flash_torture-flash_torture.o  CCLD     flash_torture  CC       tests/mtd-tests/flash_stress-flash_stress.o  CCLD     flash_stress  CC       tests/mtd-tests/flash_speed-flash_speed.o  CCLD     flash_speed  CC       tests/mtd-tests/nandbiterrs-nandbiterrs.o  CCLD     nandbiterrs  CC       tests/mtd-tests/flash_readtest-flash_readtest.o  CCLD     flash_readtest  CC       tests/mtd-tests/nandpagetest-nandpagetest.o  CCLD     nandpagetest  CC       tests/mtd-tests/nandsubpagetest-nandsubpagetest.o  CCLD     nandsubpagetest  CC       ubi-utils/ubiupdatevol.o  CCLD     ubiupdatevol  CC       ubi-utils/ubimkvol.o  CCLD     ubimkvol  CC       ubi-utils/ubirmvol.o  CCLD     ubirmvol  CC       ubi-utils/ubicrc32.o  CCLD     ubicrc32  CC       ubi-utils/ubinfo.o  CCLD     ubinfo  CC       ubi-utils/ubiattach.o  CCLD     ubiattach  CC       ubi-utils/ubidetach.o  CCLD     ubidetach  CC       ubi-utils/ubinize.o  CCLD     ubinize  CC       ubi-utils/ubiformat.o  CCLD     ubiformat  CC       ubi-utils/ubirename.o  CCLD     ubirename  CC       ubi-utils/mtdinfo.o  CCLD     mtdinfo  CC       ubi-utils/ubirsvol.o  CCLD     ubirsvol  CC       ubi-utils/ubiblock.o  CCLD     ubiblock  CC       misc-utils/ftl_format.o  CCLD     ftl_format  CC       misc-utils/doc_loadbios.o  CCLD     doc_loadbios  CC       misc-utils/ftl_check.o  CCLD     ftl_check  CC       misc-utils/mtd_debug.o  CCLD     mtd_debug  CC       misc-utils/docfdisk.o  CCLD     docfdisk  CC       misc-utils/serve_image.o  CCLD     serve_image  CC       misc-utils/recv_image.o  CCLD     recv_image  CC       misc-utils/flash_erase.o  CCLD     flash_erase  CC       misc-utils/flash_lock.o  CCLD     flash_lock  CC       misc-utils/flash_unlock.o  CCLD     flash_unlock  CC       misc-utils/flash_otp_info.o  CCLD     flash_otp_info  CC       misc-utils/flash_otp_dump.o  CCLD     flash_otp_dump  CC       misc-utils/flash_otp_lock.o  CCLD     flash_otp_lock  CC       misc-utils/flash_otp_write.o  CCLD     flash_otp_write  CC       misc-utils/flashcp.omisc-utils/flashcp.c: In <span class="token keyword">function</span> ‘main’:misc-utils/flashcp.c:257:2: warning: <span class="token comment">#warning "Check for smaller erase regions" [-Wcpp]</span> <span class="token comment">#warning "Check for smaller erase regions"</span>  ^~~~~~~  CCLD     flashcp  CC       misc-utils/mtdpart.o  CCLD     mtdpart  CC       nand-utils/nanddump.o  CCLD     nanddump  CC       nand-utils/nandwrite.o  CCLD     nandwrite  CC       nand-utils/nandtest.o  CCLD     nandtest  CC       nand-utils/nftldump.o  CCLD     nftldump  CC       nand-utils/nftl_format.o  CCLD     nftl_format  CC       nor-utils/rfddump.o  CCLD     rfddump  CC       nor-utils/rfdformat.o  CCLD     rfdformat  CC       ubifs-utils/mkfs.ubifs/mkfs_ubifs-mkfs.ubifs.o  CC       ubifs-utils/mkfs.ubifs/mkfs_ubifs-crc16.o  CC       ubifs-utils/mkfs.ubifs/mkfs_ubifs-lpt.o  CC       ubifs-utils/mkfs.ubifs/mkfs_ubifs-compr.o  CC       ubifs-utils/mkfs.ubifs/hashtable/mkfs_ubifs-hashtable.o  CC       ubifs-utils/mkfs.ubifs/hashtable/mkfs_ubifs-hashtable_itr.o  CC       ubifs-utils/mkfs.ubifs/mkfs_ubifs-devtable.o  CCLD     mkfs.ubifs  CC       jffsX-utils/mkfs_jffs2-mkfs.jffs2.o  CC       jffsX-utils/mkfs_jffs2-compr_zlib.o  CC       jffsX-utils/mkfs_jffs2-rbtree.o  CC       jffsX-utils/mkfs_jffs2-compr_lzo.o  CC       jffsX-utils/mkfs_jffs2-compr.o  CC       jffsX-utils/mkfs_jffs2-compr_rtime.o  CCLD     mkfs.jffs2  CC       jffsX-utils/jffs2dump.o  CCLD     jffs2dump  CC       jffsX-utils/jffs2reader.o  CCLD     jffs2reader  CC       jffsX-utils/sumtool.o  CCLD     sumtoolmake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin'</span>  /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> ubiupdatevol ubimkvol ubirmvol ubicrc32 ubinfo ubiattach ubidetach ubinize ubiformat ubirename mtdinfo ubirsvol ubiblock ftl_format doc_loadbios ftl_check mtd_debug docfdisk serve_image recv_image flash_erase flash_lock flash_unlock flash_otp_info flash_otp_dump flash_otp_lock flash_otp_write flashcp mtdpart nanddump nandwrite nandtest nftldump nftl_format rfddump rfdformat mkfs.ubifs mkfs.jffs2 jffs2dump jffs2reader sumtool <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubiupdatevol /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubiupdatevollibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubimkvol /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubimkvollibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubirmvol /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubirmvollibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubicrc32 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubicrc32libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubinfo /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubinfolibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubiattach /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubiattachlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubidetach /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubidetachlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubinize /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubinizelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubiformat /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubiformatlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubirename /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubirenamelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mtdinfo /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mtdinfolibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubirsvol /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubirsvollibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ubiblock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ubiblocklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ftl_format /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ftl_formatlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> doc_loadbios /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/doc_loadbioslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ftl_check /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/ftl_checklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mtd_debug /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mtd_debuglibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> docfdisk /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/docfdisklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> serve_image /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/serve_imagelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> recv_image /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/recv_imagelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_erase /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_eraselibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_lock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_locklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_unlock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_unlocklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_otp_info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_otp_infolibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_otp_dump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_otp_dumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_otp_lock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_otp_locklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flash_otp_write /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flash_otp_writelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flashcp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/flashcplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mtdpart /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mtdpartlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nanddump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/nanddumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nandwrite /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/nandwritelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nandtest /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/nandtestlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nftldump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/nftldumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nftl_format /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/nftl_formatlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> rfddump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/rfddumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> rfdformat /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/rfdformatlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mkfs.ubifs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mkfs.ubifslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mkfs.jffs2 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mkfs.jffs2libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> jffs2dump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/jffs2dumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> jffs2reader /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/jffs2readerlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> sumtool /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/sumtool /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin'</span> /usr/bin/install <span class="token parameter variable">-c</span> misc-utils/flash_eraseall <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> jffsX-utils/mkfs.jffs2.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/man/man1'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/man/man8'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ubi-utils/ubinize.8 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/share/man/man8'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/mtd-utils-2.0.2'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool<span class="token function">install</span> <span class="token parameter variable">-vs</span> <span class="token parameter variable">-t</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mkfs.jffs2<span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mkfs.jffs2'</span> -<span class="token operator">&gt;</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/mkfs.jffs2'</span>strip /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/tmp/sbin/mkfs.jffs2<span class="token function">cp</span> <span class="token parameter variable">-rf</span> ./tmp/sbin/mkfs.ubifs <span class="token builtin class-name">.</span><span class="token function">cp</span> <span class="token parameter variable">-rf</span> ./tmp/sbin/ubinize <span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/mkfs.jffs2 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/mkfs.ubifs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/jffs2_tool/ubinize /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool'</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> util-linux-2.31.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp"</span> <span class="token punctuation">\</span>         --disable-libuuid --disable-libblkid --disable-libmount <span class="token punctuation">\</span>         --disable-mount --disable-losetup --disable-fsck <span class="token punctuation">\</span>         --disable-partx --disable-uuidd --disable-mountpoint <span class="token punctuation">\</span>         --disable-fallocate --disable-unshare --disable-eject <span class="token punctuation">\</span>         --disable-agetty --disable-switch_root --disable-pivot_root <span class="token punctuation">\</span>         --disable-kill --disable-utmpdump --disable-rename <span class="token punctuation">\</span>         --disable-login --disable-sulogin --disable-su <span class="token punctuation">\</span>         --disable-schedutils --disable-wall <span class="token punctuation">\</span>         --disable-bash-completion <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -checking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking how to run the C preprocessor<span class="token punctuation">..</span>. gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking minix/config.h usability<span class="token punctuation">..</span>. nochecking minix/config.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> minix/config.h<span class="token punctuation">..</span>. nochecking whether it is safe to define __EXTENSIONS__<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking how to create a pax <span class="token function">tar</span> archive<span class="token punctuation">..</span>. gnutarchecking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C99<span class="token punctuation">..</span>. none neededchecking <span class="token keyword">for</span> gcc option to accept ISO Standard C<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> none neededchecking <span class="token keyword">for</span> bison<span class="token punctuation">..</span>. bison <span class="token parameter variable">-y</span>checking build system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token keyword">for</span> an ANSI C-conforming const<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> working volatile<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether byte ordering is bigendian<span class="token punctuation">..</span>. nochecking whether compiler handles -fno-common<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wall<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles <span class="token parameter variable">-Werror</span><span class="token operator">=</span>sequence-point<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wextra<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wextra-semi<span class="token punctuation">..</span>. nochecking whether compiler handles -Wembedded-directive<span class="token punctuation">..</span>. nochecking whether compiler handles -Wmissing-declarations<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-parameter-type<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-missing-field-initializers<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wredundant-decls<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wsign-compare<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wtype-limits<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wuninitialized<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-result<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wnested-externs<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wpointer-arith<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wstrict-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wformat-security<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wimplicit-function-declaration<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-clobbered<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-unused-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /usr/bin/nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/usr/bin/nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to x86_64-pc-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /usr/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> objdump<span class="token punctuation">..</span>. objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. archecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> strip<span class="token punctuation">..</span>. stripchecking <span class="token keyword">for</span> ranlib<span class="token punctuation">..</span>. ranlibchecking <span class="token builtin class-name">command</span> to parse /usr/bin/nm <span class="token parameter variable">-B</span> output from gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a working dd<span class="token punctuation">..</span>. /bin/ddchecking how to truncate binary pipes<span class="token punctuation">..</span>. /bin/dd <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span>checking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the gcc linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token parameter variable">-lc</span> should be explicitly linked in<span class="token punctuation">..</span>. nochecking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linker version script flag<span class="token punctuation">..</span>. --version-scriptchecking <span class="token keyword">if</span> version scripts can use complex wildcards<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pkg-config<span class="token punctuation">..</span>. /usr/bin/pkg-configchecking pkg-config is at least version <span class="token number">0.9</span>.0<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build gtk-doc documentation<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gtkdoc-check<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> xsltproc<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> special C compiler options needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> _FILE_OFFSET_BITS value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking whether to <span class="token builtin class-name">enable</span> assertions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether struct tm is <span class="token keyword">in</span> sys/time.h or time.h<span class="token punctuation">..</span>. time.hchecking <span class="token keyword">for</span> struct tm.tm_zone<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether NLS is requested<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> msgfmt<span class="token punctuation">..</span>. /usr/bin/msgfmtchecking <span class="token keyword">for</span> gmsgfmt<span class="token punctuation">..</span>. /usr/bin/msgfmtchecking <span class="token keyword">for</span> xgettext<span class="token punctuation">..</span>. /usr/bin/xgettextchecking <span class="token keyword">for</span> msgmerge<span class="token punctuation">..</span>. /usr/bin/msgmergechecking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64checking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> shared library run path origin<span class="token punctuation">..</span>. <span class="token keyword">done</span>checking <span class="token keyword">for</span> CFPreferencesCopyAppValue<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> CFLocaleCopyCurrent<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> GNU gettext <span class="token keyword">in</span> libc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to use NLS<span class="token punctuation">..</span>. <span class="token function">yes</span>checking where the gettext <span class="token keyword">function</span> comes from<span class="token punctuation">..</span>. libcchecking <span class="token keyword">for</span> linux/compiler.h<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> linux/blkpg.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/major.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking asm/io.h usability<span class="token punctuation">..</span>. nochecking asm/io.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> asm/io.h<span class="token punctuation">..</span>. nochecking err.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking err.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> err.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking errno.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking errno.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> errno.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking getopt.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking getopt.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking lastlog.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking lastlog.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> lastlog.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking libutil.h usability<span class="token punctuation">..</span>. nochecking libutil.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> libutil.h<span class="token punctuation">..</span>. nochecking linux/btrfs.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/btrfs.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/btrfs.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/cdrom.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/cdrom.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/cdrom.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/falloc.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/falloc.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/falloc.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/watchdog.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/watchdog.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/watchdog.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/fd.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/fd.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/fd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/raw.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/raw.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/raw.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/tiocl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/tiocl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/tiocl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/version.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/version.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/version.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/securebits.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/securebits.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/securebits.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking locale.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking locale.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> locale.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking mntent.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking mntent.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mntent.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking net/if.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking net/if.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> net/if.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking net/if_dl.h usability<span class="token punctuation">..</span>. nochecking net/if_dl.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> net/if_dl.h<span class="token punctuation">..</span>. nochecking netinet/in.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking netinet/in.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> netinet/in.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking paths.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking paths.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> paths.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking pty.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking pty.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pty.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking security/pam_appl.h usability<span class="token punctuation">..</span>. nochecking security/pam_appl.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> security/pam_appl.h<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking stdio_ext.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking stdio_ext.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdio_ext.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking endian.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking endian.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> endian.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking byteswap.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking byteswap.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> byteswap.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/endian.h usability<span class="token punctuation">..</span>. nochecking sys/endian.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/endian.h<span class="token punctuation">..</span>. nochecking sys/disk.h usability<span class="token punctuation">..</span>. nochecking sys/disk.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/disk.h<span class="token punctuation">..</span>. nochecking sys/disklabel.h usability<span class="token punctuation">..</span>. nochecking sys/disklabel.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/disklabel.h<span class="token punctuation">..</span>. nochecking sys/file.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/file.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/file.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/io.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/io.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/io.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ioccom.h usability<span class="token punctuation">..</span>. nochecking sys/ioccom.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/ioccom.h<span class="token punctuation">..</span>. nochecking sys/ioctl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ioctl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/ioctl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/mkdev.h usability<span class="token punctuation">..</span>. nochecking sys/mkdev.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/mkdev.h<span class="token punctuation">..</span>. nochecking sys/mount.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/mount.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/mount.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/param.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/param.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/param.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/prctl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/prctl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/prctl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/resource.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/resource.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/resource.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/signalfd.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/signalfd.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/signalfd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/socket.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/socket.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/socket.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/sockio.h usability<span class="token punctuation">..</span>. nochecking sys/sockio.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/sockio.h<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking sys/sysmacros.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/sysmacros.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/sysmacros.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/swap.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/swap.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/swap.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/syscall.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/syscall.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/syscall.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/timex.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/timex.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/timex.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ttydefaults.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ttydefaults.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/ttydefaults.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking sys/ucred.h usability<span class="token punctuation">..</span>. nochecking sys/ucred.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/ucred.h<span class="token punctuation">..</span>. nochecking sys/un.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/un.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/un.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking shadow.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking shadow.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> shadow.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking utmp.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking utmp.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utmp.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking utmpx.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking utmpx.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utmpx.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/gsmmux.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> security/pam_misc.h<span class="token punctuation">..</span>. nochecking linux/blkzoned.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking linux/blkzoned.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> linux/blkzoned.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> security/openpam.h<span class="token punctuation">..</span>. nochecking langinfo.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking langinfo.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> langinfo.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct termios.c_line<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct stat.st_mtim.tv_nsec<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether _NL_TIME_WEEK_1STDAY is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether llseek is declared<span class="token punctuation">..</span>. nochecking whether lseek64 is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether environ is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether strsignal is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether TIOCGLCKTRMIOS is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether SOCK_CLOEXEC is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether SOCK_NONBLOCK is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether SO_PASSCRED is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> __fpending<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> secure_getenv<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> __secure_getenv<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> err<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> errx<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> explicit_bzero<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fsync<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> utimensat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getdomainname<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getdtablesize<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getexecname<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> getmntinfo<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> getrandom<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getrlimit<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getsgnam<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inotify_init<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> jrand48<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> lchown<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> llseek<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> lseek64<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mempcpy<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mkostemp<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> nanosleep<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ntp_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> personality<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> posix_fadvise<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> prctl<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> qsort_r<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> rpmatch<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> scandirat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> setprogname<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> setresgid<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> setresuid<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sched_setattr<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sched_setscheduler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sigqueue<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> srandom<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strnchr<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> strndup<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strnlen<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sysconf<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sysinfo<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> timegm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> usleep<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> vwarnx<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> warn<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> warnx<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> _LARGEFILE_SOURCE value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> openat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fstatat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unlinkat<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ioperm<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> iopl<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> futimens<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inotify_init1<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> open_memstream<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> reboot<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> updwtmpx<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> updwtmpx<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> getusershell<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> isnan<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> clock_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> timer_create<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> <span class="token for-or-select variable">timer_create</span> <span class="token keyword">in</span> -lrt<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">rtas_get_sysparm</span> <span class="token keyword">in</span> -lrtas<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct sockaddr.sa_len<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> library containing socket<span class="token punctuation">..</span>. none requiredchecking <span class="token keyword">for</span> dirfd<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether program_invocation_short_name is defined<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether __progname is defined<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether the target supports thread-local storage<span class="token punctuation">..</span>. <span class="token function">yes</span>checking scanf string alloc modifiers<span class="token punctuation">..</span>. <span class="token punctuation">(</span>%ms<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">openpty</span> <span class="token keyword">in</span> -lutil<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> union semun<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> loff_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking wchar_t support<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> cpu_set_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sighandler_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether CPU_ALLOC is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking crypt.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking crypt.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> crypt.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">udev_new</span> <span class="token keyword">in</span> -ludev<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> ncursesw6-config<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> ncursesw5-config<span class="token punctuation">..</span>. ncursesw5-configchecking ncursesw/ncurses.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking ncursesw/ncurses.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ncursesw/ncurses.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking ncursesw/term.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking ncursesw/term.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ncursesw/term.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">use_default_colors</span> <span class="token keyword">in</span> -lncursesw<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">resizeterm</span> <span class="token keyword">in</span> -lncursesw<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> TINFOW<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> <span class="token for-or-select variable">tgetent</span> <span class="token keyword">in</span> -ltinfow<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> TINFO<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">readline</span> <span class="token keyword">in</span> -lreadline<span class="token punctuation">..</span>. noconfigure: WARNING: libuuid disabled<span class="token punctuation">;</span> not building libfdiskconfigure: WARNING: libfdisk disabled<span class="token punctuation">;</span> not building <span class="token function">fdisk</span>configure: WARNING: libfdisk disabled<span class="token punctuation">;</span> not building sfdiskconfigure: WARNING: libfdisk disabled<span class="token punctuation">;</span> not building <span class="token function">cfdisk</span>configure: WARNING: libuuid disabled<span class="token punctuation">;</span> not building uuidgenconfigure: WARNING: libuuid disabled<span class="token punctuation">;</span> not building uuidparseconfigure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building blkidconfigure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building findfsconfigure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building wipefsconfigure: WARNING: libmount disabled<span class="token punctuation">;</span> not building findmntchecking <span class="token keyword">for</span> unshare<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> syscall setns<span class="token punctuation">..</span>. SYS_setnschecking <span class="token keyword">for</span> setns<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> <span class="token for-or-select variable">capng_apply</span> <span class="token keyword">in</span> -lcap-ng<span class="token punctuation">..</span>. noconfigure: WARNING: libcap-ng library not found<span class="token punctuation">;</span> not building setprivchecking <span class="token keyword">for</span> <span class="token for-or-select variable">crc32</span> <span class="token keyword">in</span> -lz<span class="token punctuation">..</span>. <span class="token function">yes</span>configure: WARNING: libmount disabled<span class="token punctuation">;</span> not building fstrimconfigure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building <span class="token function">swapon</span>configure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building lsblkconfigure: WARNING: libblkid disabled<span class="token punctuation">;</span> not building swaplabelconfigure: WARNING: uuid library is not found<span class="token punctuation">;</span> mkswap<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> will not generate UUIDschecking <span class="token keyword">for</span> syscall prlimit64<span class="token punctuation">..</span>. SYS_prlimit64checking <span class="token keyword">for</span> prlimit<span class="token punctuation">..</span>. <span class="token function">yes</span>configure: WARNING: libmount disabled<span class="token punctuation">;</span> not building lslockschecking <span class="token keyword">for</span> LIBUSER<span class="token punctuation">..</span>. noconfigure: WARNING: PAM header <span class="token function">file</span> not found<span class="token punctuation">;</span> not building chfn_chshconfigure: WARNING: PAM header <span class="token function">file</span> not found<span class="token punctuation">;</span> not building runuserchecking <span class="token keyword">for</span> SYSTEMD<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> SYSTEMD_DAEMON<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> SYSTEMD_JOURNAL<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a Python interpreter with version <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">..</span>. pythonchecking <span class="token keyword">for</span> python<span class="token punctuation">..</span>. /usr/bin/pythonchecking <span class="token keyword">for</span> python version<span class="token punctuation">..</span>. <span class="token number">2.7</span>checking <span class="token keyword">for</span> python platform<span class="token punctuation">..</span>. linux2checking <span class="token keyword">for</span> python script directory<span class="token punctuation">..</span>. <span class="token variable">${prefix}</span>/lib/python2.7/site-packageschecking <span class="token keyword">for</span> python extension module directory<span class="token punctuation">..</span>. <span class="token variable">${exec_prefix}</span>/lib/python2.7/site-packageschecking <span class="token keyword">for</span> PYTHON<span class="token punctuation">..</span>. <span class="token function">yes</span>configure: WARNING: libmount disabled<span class="token punctuation">;</span> not building pylibmountchecking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating libblkid/docs/Makefileconfig.status: creating libblkid/docs/version.xmlconfig.status: creating libblkid/src/blkid.hconfig.status: creating libfdisk/docs/Makefileconfig.status: creating libfdisk/docs/version.xmlconfig.status: creating libfdisk/src/libfdisk.hconfig.status: creating libmount/docs/Makefileconfig.status: creating libmount/docs/version.xmlconfig.status: creating libmount/src/libmount.hconfig.status: creating libsmartcols/docs/Makefileconfig.status: creating libsmartcols/docs/version.xmlconfig.status: creating libsmartcols/src/libsmartcols.hconfig.status: creating po/Makefile.inconfig.status: creating config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commandsconfig.status: executing po-directories commandsconfig.status: creating po/POTFILESconfig.status: creating po/Makefile        util-linux  <span class="token number">2.31</span>        prefix:            /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp        <span class="token builtin class-name">exec</span> prefix:       <span class="token variable">${prefix}</span>        runstatedir:       <span class="token variable">${localstatedir}</span>/run        bindir:            <span class="token variable">${exec_prefix}</span>/bin        sbindir:           <span class="token variable">${exec_prefix}</span>/sbin        libdir:            <span class="token variable">${exec_prefix}</span>/lib        includedir:        <span class="token variable">${prefix}</span>/include        usrbin_execdir:    <span class="token variable">${exec_prefix}</span>/bin        usrsbin_execdir:   <span class="token variable">${exec_prefix}</span>/sbin        usrlib_execdir:    <span class="token variable">${exec_prefix}</span>/lib        compiler:          gcc        cflags:            <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>        suid cflags:        ldflags:        suid ldflags:        Python:            /usr/bin/python        Python version:    <span class="token number">2.7</span>        Python libs:       <span class="token variable">${exec_prefix}</span>/lib/python2.7/site-packages        Bash completions:  /usr/share/bash-completion/completions        Systemd support:   no        Btrfs support:     <span class="token function">yes</span>        Wide-char support: <span class="token function">yes</span>        warnings: -fno-common <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Werror</span><span class="token operator">=</span>sequence-point <span class="token parameter variable">-Wextra</span> -Wmissing-declarations -Wmissing-parameter-type -Wmissing-prototypes -Wno-missing-field-initializers -Wredundant-decls -Wsign-compare -Wtype-limits <span class="token parameter variable">-Wuninitialized</span> -Wunused-but-set-parameter -Wunused-but-set-variable -Wunused-parameter -Wunused-result -Wunused-variable -Wnested-externs -Wpointer-arith -Wstrict-prototypes -Wformat-security -Wimplicit-function-declaration        Type <span class="token string">'make'</span> or <span class="token string">'make &lt;utilname&gt;'</span> to compile.make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>Making all <span class="token keyword">in</span> pomake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31/po'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31/po'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>  CC       lib/script-monotonic.o  CC       sys-utils/lsmem-lsmem.o  CC       sys-utils/chmem.o  CC       sys-utils/flock.o  CC       lib/timer.o  CC       sys-utils/ipcrm.o  CC       sys-utils/ipcmk.o  CC       sys-utils/ipcs.o  CC       sys-utils/ipcutils.o  CC       sys-utils/rfkill-rfkill.o  CC       sys-utils/lsipc-ipcutils.o  CC       sys-utils/setsid.o  CC       sys-utils/lsipc-lsipc.o  CC       sys-utils/renice.o  CC       sys-utils/setarch.o  CC       sys-utils/prlimit-prlimit.o  CC       sys-utils/lsns-lsns.o  CC       sys-utils/lscpu-lscpu.o  CC       sys-utils/lscpu-lscpu-dmi.o  CC       sys-utils/nsenter.o  CC       lib/logger-strutils.o  CC       lib/md5.o  CC       lib/logger-strv.o  CC       lib/strutils.o  CC       lib/idcache.o  CC       misc-utils/whereis.o  CC       misc-utils/getopt.o  CC       misc-utils/fincore-fincore.o  CC       disk-utils/isosize.o  CC       sys-utils/readprofile.o  CC       sys-utils/ldattach.o  CC       sys-utils/rtcwake.o  CC       disk-utils/fdformat.o  GEN      sys-utils/rtcwake.8  GEN      sys-utils/uname26.8  GEN      sys-utils/hwclock.8  GEN      sys-utils/linux64.8  GEN      sys-utils/linux32.8  GEN      sys-utils/i386.8  CC       lib/libcommon_la-blkdev.lo  CC       lib/libcommon_la-crc32.lo  GEN      sys-utils/x86_64.8  CC       lib/libcommon_la-canonicalize.lo  CC       lib/libcommon_la-idcache.lo  GEN      libsmartcols/smartcols.pc  CC       lib/libcommon_la-fileutils.lo  CC       lib/libcommon_la-env.lo  CC       lib/libcommon_la-ismounted.lo  CC       lib/libcommon_la-color-names.lo  CC       lib/libcommon_la-mangle.lo  CC       lib/libcommon_la-match.lo  CC       lib/libcommon_la-mbsalign.lo  CC       lib/libcommon_la-mbsedit.lo  CC       lib/libcommon_la-md5.lo  CC       lib/libcommon_la-pager.lo  CC       lib/libcommon_la-parse-date.lo  CC       lib/libcommon_la-path.lo  CC       lib/libcommon_la-pwdutils.lo  CC       lib/libcommon_la-randutils.lo  CC       lib/libcommon_la-setproctitle.lo  CC       lib/libcommon_la-strutils.lo  CC       lib/libcommon_la-timeutils.lo  CC       lib/libcommon_la-ttyutils.lo  CC       lib/libcommon_la-exec_shell.lo  CC       lib/libcommon_la-strv.lo  CC       lib/libcommon_la-sha1.lo  CC       lib/libcommon_la-linux_version.lo  CC       lib/libcommon_la-loopdev.lo  CC       lib/libcommon_la-plymouth-ctrl.lo  CC       lib/libcommon_la-cpuset.lo  CC       lib/libcommon_la-procutils.lo  CC       lib/libcommon_la-sysfs.lo  CC       lib/libtcolors_la-colors.lo  CC       lib/libtcolors_la-color-names.lo  CC       libsmartcols/src/libsmartcols_la-iter.lo  CC       libsmartcols/src/libsmartcols_la-symbols.lo  CC       libsmartcols/src/libsmartcols_la-cell.lo  CC       libsmartcols/src/libsmartcols_la-column.lo  CC       libsmartcols/src/libsmartcols_la-line.lo  CC       libsmartcols/src/libsmartcols_la-table.lo  CC       libsmartcols/src/libsmartcols_la-table_print.lo  CC       libsmartcols/src/libsmartcols_la-version.lo  CC       libsmartcols/src/libsmartcols_la-init.lo  CC       text-utils/more-more.o  CC       sys-utils/dmesg-dmesg.o  CC       lib/dmesg-monotonic.o  CC       sys-utils/wdctl-wdctl.o  CC       sys-utils/ctrlaltdel.o  CC       login-utils/nologin.o  CC       sys-utils/fsfreeze.o  CC       sys-utils/blkdiscard.o  CC       lib/monotonic.o  CC       sys-utils/blkzone.o  CC       sys-utils/zramctl-zramctl.o  CC       sys-utils/chcpu.o  CC       sys-utils/hwclock.o  CC       sys-utils/hwclock-cmos.o  CC       sys-utils/hwclock-rtc.o  CC       disk-utils/fsck.minix.o  CC       disk-utils/mkfs.minix.o  CC       disk-utils/mkfs.o  CC       disk-utils/mkfs.bfs.o  CC       disk-utils/raw.o  CC       disk-utils/mkswap-mkswap.o  CC       disk-utils/fsck.cramfs.o  CC       disk-utils/cramfs_common.o  CC       disk-utils/mkfs.cramfs.o  CC       text-utils/col.o  CC       disk-utils/blockdev.o  CC       text-utils/colcrt.o  CC       text-utils/colrm.o  CC       text-utils/column-column.o  CC       text-utils/hexdump-conv.o  CC       text-utils/hexdump-display.o  CC       text-utils/hexdump.o  CC       text-utils/hexdump-parse.o  CC       text-utils/rev.o  CC       text-utils/ul-ul.o  CC       term-utils/script-script.o  CC       term-utils/scriptreplay.o  CC       term-utils/setterm-setterm.o  CC       term-utils/mesg.o  CC       login-utils/last.o  CC       login-utils/lslogins-lslogins.o  CC       login-utils/lslogins-logindefs.o  CCLD     <span class="token function">renice</span>  CCLD     setsid  CCLD     setarch  CC       misc-utils/cal-cal.o  CC       misc-utils/logger-logger.o  CC       misc-utils/look.o  CC       misc-utils/mcookie.o  CC       misc-utils/namei.o  CCLD     getopt  CCLD     readprofile  CCLD     libcommon.la  CCLD     libtcolors.la  CCLD     <span class="token function">more</span>  CCLD     fsfreeze  CCLD     nologin  CCLD     <span class="token function">mkfs</span>  CCLD     raw  CCLD     colcrt  CCLD     <span class="token function">rev</span>  CCLD     ul  CCLD     mesg  CCLD     <span class="token function">look</span>  CCLD     nameiar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CCLD     loggerar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CCLD     libsmartcols.la  CCLD     hwclock  CCLD     chcpu  CCLD     ctrlaltdel  CCLD     <span class="token function">dmesg</span>  CCLD     mkfs.minix  CCLD     blkdiscard  CCLD     fsck.cramfs  CCLD     blkzone  CCLD     <span class="token function">mkswap</span>  CCLD     fsck.minix  CCLD     mkfs.cramfs  CCLD     blockdev  CCLD     mkfs.bfs  CCLD     col  CCLD     colrm  CCLD     hexdump  CCLD     script  CCLD     scriptreplay  CCLD     ipcmk  CCLD     ipcrm  CCLD     last  CCLD     setterm  CCLD     ipcs  CCLD     flock  CCLD     chmem  CCLD     <span class="token function">cal</span>  CCLD     nsenter  CCLD     mcookie  CCLD     <span class="token function">whereis</span>  CCLD     isosize  CCLD     ldattachar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>  CCLD     rtcwake  CCLD     <span class="token function">fdformat</span>  CCLD     wdctl  CCLD     <span class="token function">column</span>  CCLD     lscpu  CCLD     lsns  CCLD     prlimit  CCLD     zramctl  CCLD     lslogins  CCLD     fincore  CCLD     rfkill  CCLD     lsmem  CCLD     lsipcmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span><span class="token function">make</span>  install-recursivemake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> pomake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31/po'</span>installing ca.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/ca/LC_MESSAGES/util-linux.moinstalling cs.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/cs/LC_MESSAGES/util-linux.moinstalling da.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/da/LC_MESSAGES/util-linux.moinstalling de.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/de/LC_MESSAGES/util-linux.moinstalling es.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/es/LC_MESSAGES/util-linux.moinstalling et.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/et/LC_MESSAGES/util-linux.moinstalling eu.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/eu/LC_MESSAGES/util-linux.moinstalling fi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/fi/LC_MESSAGES/util-linux.moinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/fr/LC_MESSAGES/util-linux.moinstalling gl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/gl/LC_MESSAGES/util-linux.moinstalling hr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/hr/LC_MESSAGES/util-linux.moinstalling hu.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/hu/LC_MESSAGES/util-linux.moinstalling id.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/id/LC_MESSAGES/util-linux.moinstalling it.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/it/LC_MESSAGES/util-linux.moinstalling ja.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/ja/LC_MESSAGES/util-linux.moinstalling nl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/nl/LC_MESSAGES/util-linux.moinstalling pl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/pl/LC_MESSAGES/util-linux.moinstalling pt_BR.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/pt_BR/LC_MESSAGES/util-linux.moinstalling ru.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/ru/LC_MESSAGES/util-linux.moinstalling sl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/sl/LC_MESSAGES/util-linux.moinstalling sv.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/sv/LC_MESSAGES/util-linux.moinstalling tr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/tr/LC_MESSAGES/util-linux.moinstalling uk.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/uk/LC_MESSAGES/util-linux.moinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/vi/LC_MESSAGES/util-linux.moinstalling zh_CN.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/zh_CN/LC_MESSAGES/util-linux.moinstalling zh_TW.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/locale/zh_TW/LC_MESSAGES/util-linux.mo<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token string">"util-linux"</span> <span class="token operator">=</span> <span class="token string">"gettext-tools"</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  /bin/mkdir <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/gettext/po<span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> Makefile.in.in remove-potcdate.sin quot.sed boldquot.sed en@quot.header en@boldquot.header insert-header.sin Rules-quot   Makevars.template<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./<span class="token variable">$file</span> <span class="token punctuation">\</span>                    /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/gettext/po/<span class="token variable">$file</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> Makevars<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/gettext/po/<span class="token variable">$file</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token builtin class-name">:</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31/po'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin'</span>  /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">more</span> <span class="token function">dmesg</span> wdctl <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">more</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/morelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">dmesg</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/dmesglibtool: warning: <span class="token string">'libsmartcols.la'</span> has not been installed <span class="token keyword">in</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/wdctl /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/wdctl /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib'</span> /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span>   libsmartcols.la <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libsmartcols.so.1.1.0 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.so.1.1.0libtool: install: <span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> libsmartcols.so.1.1.0 libsmartcols.so.1 <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> libsmartcols.so.1 <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libsmartcols.so.1.1.0 libsmartcols.so.1<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>libtool: install: <span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> libsmartcols.so.1.1.0 libsmartcols.so <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> libsmartcols.so <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> libsmartcols.so.1.1.0 libsmartcols.so<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libsmartcols.lai /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.lalibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libsmartcols.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.alibtool: install: <span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.alibtool: install: ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.alibtool: finish: <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/sbin"</span> ldconfig <span class="token parameter variable">-n</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib----------------------------------------------------------------------Libraries have been installed in:   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/libIf you ever happen to want to <span class="token function">link</span> against installed libraries<span class="token keyword">in</span> a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the <span class="token string">'-LLIBDIR'</span>flag during linking and <span class="token keyword">do</span> at least one of the following:   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_LIBRARY_PATH'</span> environment variable     during execution   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_RUN_PATH'</span> environment variable     during linking   - use the <span class="token string">'-Wl,-rpath -Wl,LIBDIR'</span> linker flag   - have your system administrator <span class="token function">add</span> LIBDIR to <span class="token string">'/etc/ld.so.conf'</span>See any operating system documentation about shared libraries <span class="token keyword">for</span><span class="token function">more</span> information, such as the ld<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> and ld.so<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> manual pages.---------------------------------------------------------------------- /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin'</span>  /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> nologin ctrlaltdel fsfreeze blkdiscard blkzone zramctl chcpu hwclock fsck.minix mkfs.minix <span class="token function">mkfs</span> mkfs.bfs <span class="token function">mkswap</span> raw fsck.cramfs mkfs.cramfs blockdev <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nologin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/nologinlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ctrlaltdel /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/ctrlaltdellibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> fsfreeze /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/fsfreezelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> blkdiscard /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/blkdiscardlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> blkzone /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/blkzonelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/zramctl /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/zramctllibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> chcpu /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/chcpulibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> hwclock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/hwclocklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> fsck.minix /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/fsck.minixlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mkfs.minix /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfs.minixlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">mkfs</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mkfs.bfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfs.bfslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">mkswap</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkswaplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> raw /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/rawlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> fsck.cramfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/fsck.cramfslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mkfs.cramfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfs.cramfslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> blockdev /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/blockdev /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin'</span>  /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> col colcrt colrm <span class="token function">column</span> hexdump <span class="token function">rev</span> ul script scriptreplay setterm mesg last lslogins lsmem chmem flock ipcmk ipcrm ipcs lsipc <span class="token function">renice</span> rfkill setsid setarch prlimit lsns lscpu nsenter <span class="token function">cal</span> logger <span class="token function">look</span> mcookie namei <span class="token function">whereis</span> getopt fincore isosize <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> col /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/collibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> colcrt /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/colcrtlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> colrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/colrmlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/column /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/columnlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> hexdump /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/hexdumplibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">rev</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/revlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ul /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/ullibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> script /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/scriptlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> scriptreplay /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/scriptreplaylibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> setterm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/settermlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mesg /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/mesglibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> last /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lastlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lslogins /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lsloginslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lsmem /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lsmemlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> chmem /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/chmemlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> flock /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/flocklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ipcmk /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/ipcmklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ipcrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/ipcrmlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ipcs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/ipcslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lsipc /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lsipclibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">renice</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/renicelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/rfkill /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/rfkilllibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> setsid /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/setsidlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> setarch /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/setarchlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/prlimit /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/prlimitlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lsns /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lsnslibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lscpu /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/lscpulibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> nsenter /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/nsenterlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">cal</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/callibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> logger /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/loggerlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">look</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/looklibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> mcookie /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/mcookielibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> namei /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/nameilibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">whereis</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/whereislibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> getopt /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/getoptlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/fincore /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/fincorelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> isosize /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin/isosize /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin'</span>  /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> readprofile ldattach rtcwake <span class="token function">fdformat</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> readprofile /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/readprofilelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> ldattach /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/ldattachlibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> rtcwake /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/rtcwakelibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">fdformat</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/fdformat<span class="token function">make</span>  install-exec-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib"</span> <span class="token operator">!=</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib"</span> <span class="token parameter variable">-a</span> <span class="token parameter variable">-f</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.so"</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>        /bin/mkdir <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.so.* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">so_img_name</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>readlink /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/libsmartcols.so<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">so_img_rel_target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,\(^/\|\)[^/][^/]*,..,g'</span><span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>                <span class="token function">rm</span> <span class="token parameter variable">-f</span> libsmartcols.so <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>                <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$so_img_rel_target</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/<span class="token variable">$so_img_name</span> libsmartcols.so<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-sf</span> last lastb<span class="token keyword">for</span> <span class="token for-or-select variable">I</span> <span class="token keyword">in</span> uname26 linux32 linux64   i386 x86_64     <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>        <span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/bin <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-sf</span> setarch <span class="token variable">$I</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/usr/share/bash-completion/completions'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/doc/util-linux/getopt/'</span> /usr/bin/install <span class="token parameter variable">-c</span> misc-utils/getopt-parse.bash misc-utils/getopt-parse.tcsh <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/doc/util-linux/getopt/'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> text-utils/col.1 text-utils/colcrt.1 text-utils/colrm.1 text-utils/column.1 text-utils/hexdump.1 text-utils/rev.1 text-utils/ul.1 text-utils/more.1 term-utils/script.1 term-utils/scriptreplay.1 term-utils/setterm.1 term-utils/mesg.1 login-utils/last.1 login-utils/lastb.1 login-utils/lslogins.1 sys-utils/lsmem.1 sys-utils/flock.1 sys-utils/ipcmk.1 sys-utils/ipcrm.1 sys-utils/ipcs.1 sys-utils/lsipc.1 sys-utils/renice.1 sys-utils/setsid.1 sys-utils/dmesg.1 sys-utils/prlimit.1 sys-utils/lscpu.1 sys-utils/nsenter.1 misc-utils/cal.1 misc-utils/logger.1 misc-utils/look.1 misc-utils/mcookie.1 misc-utils/namei.1 misc-utils/whereis.1 misc-utils/getopt.1 misc-utils/fincore.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man1'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man3'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man5'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> lib/terminal-colors.d.5 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man5'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man8'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> login-utils/nologin.8 sys-utils/chmem.8 sys-utils/rfkill.8 sys-utils/readprofile.8 sys-utils/ctrlaltdel.8 sys-utils/fsfreeze.8 sys-utils/blkdiscard.8 sys-utils/blkzone.8 sys-utils/ldattach.8 sys-utils/rtcwake.8 sys-utils/setarch.8 sys-utils/zramctl.8 sys-utils/lsns.8 sys-utils/chcpu.8 sys-utils/wdctl.8 sys-utils/hwclock.8 disk-utils/fsck.minix.8 disk-utils/mkfs.minix.8 disk-utils/mkfs.8 disk-utils/isosize.8 disk-utils/mkfs.bfs.8 disk-utils/mkswap.8 disk-utils/raw.8 disk-utils/fsck.cramfs.8 disk-utils/mkfs.cramfs.8 disk-utils/fdformat.8 disk-utils/blockdev.8 sys-utils/uname26.8 sys-utils/linux32.8 sys-utils/linux64.8 sys-utils/i386.8 sys-utils/x86_64.8 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/share/man/man8'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/include/libsmartcols'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./libsmartcols/src/libsmartcols.h <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/include/libsmartcols'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/pkgconfig'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> libsmartcols/smartcols.pc <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/lib/pkgconfig'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/lib/systemd/system'</span><span class="token function">make</span>  install-data-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-data-hook'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/util-linux-2.31'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool<span class="token function">install</span> <span class="token parameter variable">-vs</span> <span class="token parameter variable">-t</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfs.cramfs<span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/tmp/sbin/mkfs.cramfs'</span> -<span class="token operator">&gt;</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/mkfs.cramfs'</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/cramfs_tool/mkfs.cramfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3'</span><span class="token function">tar</span> <span class="token parameter variable">-xjf</span> xz-5.2.2.tar.bz2 <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp"</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -XZ Utils <span class="token number">5.2</span>.2System type:checking build system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuConfigure options:checking <span class="token keyword">if</span> debugging code should be compiled<span class="token punctuation">..</span>. nochecking <span class="token function">which</span> encoders to build<span class="token punctuation">..</span>. lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparcchecking <span class="token function">which</span> decoders to build<span class="token punctuation">..</span>. lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparcchecking <span class="token function">which</span> match finders to build<span class="token punctuation">..</span>. hc3 hc4 bt2 bt3 bt4checking <span class="token function">which</span> integrity checks to build<span class="token punctuation">..</span>. crc32 crc64 sha256checking <span class="token keyword">if</span> assembler optimizations should be used<span class="token punctuation">..</span>. x86_64checking <span class="token keyword">if</span> small size is preferred over speed<span class="token punctuation">..</span>. nochecking <span class="token keyword">if</span> threading support is wanted<span class="token punctuation">..</span>. yes, posixchecking how much RAM to assume <span class="token keyword">if</span> the real amount is unknown<span class="token punctuation">..</span>. <span class="token number">128</span> MiBchecking <span class="token keyword">if</span> library symbol versioning should be used<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a shell that conforms to POSIX<span class="token punctuation">..</span>. /bin/shInitializing Automake:checking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>. gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking whether gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking <span class="token keyword">for</span> gcc option to accept ISO C99<span class="token punctuation">..</span>. none neededchecking dependency style of gcc<span class="token punctuation">..</span>. gcc3checking how to run the C preprocessor<span class="token punctuation">..</span>. gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking minix/config.h usability<span class="token punctuation">..</span>. nochecking minix/config.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> minix/config.h<span class="token punctuation">..</span>. nochecking whether it is safe to define __EXTENSIONS__<span class="token punctuation">..</span>. <span class="token function">yes</span>POSIX threading support:checking <span class="token keyword">if</span> compiler needs <span class="token parameter variable">-Werror</span> to reject unknown flags<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> the pthreads library -lpthreads<span class="token punctuation">..</span>. nochecking whether pthreads work without any flags<span class="token punctuation">..</span>. nochecking whether pthreads work with -Kthread<span class="token punctuation">..</span>. nochecking whether pthreads work with -kthread<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> the pthreads library -llthread<span class="token punctuation">..</span>. nochecking whether pthreads work with -pthread<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> joinable pthread attribute<span class="token punctuation">..</span>. PTHREAD_CREATE_JOINABLEchecking <span class="token keyword">if</span> <span class="token function">more</span> special flags are required <span class="token keyword">for</span> pthreads<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> PTHREAD_PRIO_INHERIT<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> library containing clock_gettime<span class="token punctuation">..</span>. none requiredchecking <span class="token keyword">for</span> clock_gettime<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> pthread_condattr_setclock<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether CLOCK_MONOTONIC is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>Initializing Libtool:checking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by gcc<span class="token punctuation">..</span>. /usr/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /usr/bin/nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/usr/bin/nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to x86_64-unknown-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /usr/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> objdump<span class="token punctuation">..</span>. objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> ar<span class="token punctuation">..</span>. archecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> strip<span class="token punctuation">..</span>. stripchecking <span class="token keyword">for</span> ranlib<span class="token punctuation">..</span>. ranlibchecking <span class="token builtin class-name">command</span> to parse /usr/bin/nm <span class="token parameter variable">-B</span> output from gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a working dd<span class="token punctuation">..</span>. /bin/ddchecking how to truncate binary pipes<span class="token punctuation">..</span>. /bin/dd <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span>checking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the gcc linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token parameter variable">-lc</span> should be explicitly linked in<span class="token punctuation">..</span>. nochecking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> windres<span class="token punctuation">..</span>. noInitializing gettext:checking whether NLS is requested<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> msgfmt<span class="token punctuation">..</span>. /usr/bin/msgfmtchecking <span class="token keyword">for</span> gmsgfmt<span class="token punctuation">..</span>. /usr/bin/msgfmtchecking <span class="token keyword">for</span> xgettext<span class="token punctuation">..</span>. /usr/bin/xgettextchecking <span class="token keyword">for</span> msgmerge<span class="token punctuation">..</span>. /usr/bin/msgmergechecking <span class="token keyword">for</span> ld used by GCC<span class="token punctuation">..</span>. /usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64checking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/usr/bin/ld <span class="token parameter variable">-m</span> elf_x86_64<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> shared library run path origin<span class="token punctuation">..</span>. <span class="token keyword">done</span>checking <span class="token keyword">for</span> CFPreferencesCopyAppValue<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> CFLocaleCopyCurrent<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> GNU gettext <span class="token keyword">in</span> libc<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to use NLS<span class="token punctuation">..</span>. <span class="token function">yes</span>checking where the gettext <span class="token keyword">function</span> comes from<span class="token punctuation">..</span>. libcSystem headers and functions:checking fcntl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking limits.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking limits.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> limits.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking immintrin.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking immintrin.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> immintrin.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdbool.h that conforms to C99<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> _Bool<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint8_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint16_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> int32_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint32_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> int64_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint64_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uintptr_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking size of size_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking <span class="token keyword">for</span> struct stat.st_atim.tv_nsec<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> struct stat.st_atimespec.tv_nsec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct stat.st_atimensec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct stat.st_uatime<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> struct stat.st_atim.st__tim.tv_nsec<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> special C compiler options needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> _FILE_OFFSET_BITS value needed <span class="token keyword">for</span> large files<span class="token punctuation">..</span>. nochecking whether byte ordering is bigendian<span class="token punctuation">..</span>. nochecking getopt.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking getopt.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> getopt_long<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether optreset is declared<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> futimens<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> posix_fadvise<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether program_invocation_name is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking byteswap.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking byteswap.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> byteswap.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> bswap_16 is available<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> bswap_32 is available<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> bswap_64 is available<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> unaligned memory access should be used<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/param.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/param.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/param.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking how to detect the amount of physical memory<span class="token punctuation">..</span>. sysconfchecking <span class="token keyword">for</span> sys/param.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking how to detect the number of available CPU cores<span class="token punctuation">..</span>. sysconfchecking whether mbrtowc and mbstate_t are properly declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> wcwidth<span class="token punctuation">..</span>. <span class="token function">yes</span>checking CommonCrypto/CommonDigest.h usability<span class="token punctuation">..</span>. nochecking CommonCrypto/CommonDigest.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> CommonCrypto/CommonDigest.h<span class="token punctuation">..</span>. nochecking sha256.h usability<span class="token punctuation">..</span>. nochecking sha256.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sha256.h<span class="token punctuation">..</span>. nochecking sha2.h usability<span class="token punctuation">..</span>. nochecking sha2.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sha2.h<span class="token punctuation">..</span>. nochecking minix/sha2.h usability<span class="token punctuation">..</span>. nochecking minix/sha2.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> minix/sha2.h<span class="token punctuation">..</span>. nochecking whether _mm_movemask_epi8 is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>GCC extensions:checking whether the <span class="token parameter variable">-Werror</span> option is usable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> simple visibility declarations<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wall<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wextra<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wvla<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Winit-self<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wmissing-include-dirs<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wstrict-aliasing<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wfloat-equal<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wundef<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wshadow<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wpointer-arith<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wbad-function-cast<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wwrite-strings<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wlogical-op<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Waggregate-return<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wstrict-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wold-style-definition<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wmissing-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wmissing-declarations<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wmissing-noreturn<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> gcc accepts -Wredundant-decls<span class="token punctuation">..</span>. <span class="token function">yes</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating Doxyfileconfig.status: creating Makefileconfig.status: creating po/Makefile.inconfig.status: creating lib/Makefileconfig.status: creating src/Makefileconfig.status: creating src/liblzma/Makefileconfig.status: creating src/liblzma/api/Makefileconfig.status: creating src/xz/Makefileconfig.status: creating src/xzdec/Makefileconfig.status: creating src/lzmainfo/Makefileconfig.status: creating src/scripts/Makefileconfig.status: creating tests/Makefileconfig.status: creating debug/Makefileconfig.status: creating src/scripts/xzdiffconfig.status: creating src/scripts/xzgrepconfig.status: creating src/scripts/xzmoreconfig.status: creating src/scripts/xzlessconfig.status: creating config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commandsconfig.status: executing po-directories commandsconfig.status: creating po/POTFILESconfig.status: creating po/Makefilemake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>Making all <span class="token keyword">in</span> srcmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>Making all <span class="token keyword">in</span> liblzmamake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>Making all <span class="token keyword">in</span> apimake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_physmem.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-tuklib_physmem.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_physmem.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_physmem.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_cpucores.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_cpucores.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-tuklib_cpucores.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_cpucores.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_cpucores.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-common.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-common.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/common.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/common.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_util.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_util.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_util.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_util.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_util.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_preset.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_preset.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-easy_preset.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/easy_preset.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/easy_preset.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_common.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_common.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_common.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_common.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_physmem.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-hardware_physmem.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/hardware_physmem.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/hardware_physmem.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-index.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/index.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/index.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_common.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_flags_common.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_flags_common.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_flags_common.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_size.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_size.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-vli_size.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/vli_size.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/vli_size.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-alone_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/alone_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/alone_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_buffer_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_buffer_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_buffer_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_header_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_header_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_header_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_buffer_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-easy_buffer_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/easy_buffer_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/easy_buffer_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-easy_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/easy_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/easy_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder.Tpo <span class="token parameter variable">-c</span> common/easy_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-easy_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_encoder.Tpo <span class="token parameter variable">-c</span> common/block_header_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_header_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_cpucores.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_cpucores.Tpo <span class="token parameter variable">-c</span> <span class="token punctuation">..</span>/common/tuklib_cpucores.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-tuklib_cpucores.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_physmem.Tpo <span class="token parameter variable">-c</span> <span class="token punctuation">..</span>/common/tuklib_physmem.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-tuklib_physmem.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/block_buffer_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_buffer_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_preset.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_preset.Tpo <span class="token parameter variable">-c</span> common/easy_preset.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-easy_preset.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_physmem.Tpo <span class="token parameter variable">-c</span> common/hardware_physmem.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-hardware_physmem.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_util.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_util.Tpo <span class="token parameter variable">-c</span> common/block_util.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_util.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_common.Tpo <span class="token parameter variable">-c</span> common/stream_flags_common.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_flags_common.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-common.Tpo <span class="token parameter variable">-c</span> common/common.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-common.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_size.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_size.Tpo <span class="token parameter variable">-c</span> common/vli_size.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-vli_size.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_encoder.Tpo <span class="token parameter variable">-c</span> common/block_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_encoder.Tpo <span class="token parameter variable">-c</span> common/alone_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-alone_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_common.Tpo <span class="token parameter variable">-c</span> common/filter_common.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_common.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/easy_buffer_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-easy_buffer_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index.Tpo <span class="token parameter variable">-c</span> common/index.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-index.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_physmem.Tpo <span class="token parameter variable">-c</span> <span class="token punctuation">..</span>/common/tuklib_physmem.c <span class="token parameter variable">-o</span> liblzma_la-tuklib_physmem.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_encoder.Tpo <span class="token parameter variable">-c</span> common/block_header_encoder.c <span class="token parameter variable">-o</span> liblzma_la-block_header_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder.Tpo <span class="token parameter variable">-c</span> common/easy_encoder.c <span class="token parameter variable">-o</span> liblzma_la-easy_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/easy_buffer_encoder.c <span class="token parameter variable">-o</span> liblzma_la-easy_buffer_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_preset.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_preset.Tpo <span class="token parameter variable">-c</span> common/easy_preset.c <span class="token parameter variable">-o</span> liblzma_la-easy_preset.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-tuklib_physmem.Tpo .deps/liblzma_la-tuklib_physmem.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder_memusage.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-easy_encoder_memusage.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/easy_encoder_memusage.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/easy_encoder_memusage.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-tuklib_cpucores.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-tuklib_cpucores.Tpo <span class="token parameter variable">-c</span> <span class="token punctuation">..</span>/common/tuklib_cpucores.c <span class="token parameter variable">-o</span> liblzma_la-tuklib_cpucores.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_physmem.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_physmem.Tpo <span class="token parameter variable">-c</span> common/hardware_physmem.c <span class="token parameter variable">-o</span> liblzma_la-hardware_physmem.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_size.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_size.Tpo <span class="token parameter variable">-c</span> common/vli_size.c <span class="token parameter variable">-o</span> liblzma_la-vli_size.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_util.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_util.Tpo <span class="token parameter variable">-c</span> common/block_util.c <span class="token parameter variable">-o</span> liblzma_la-block_util.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_common.Tpo <span class="token parameter variable">-c</span> common/stream_flags_common.c <span class="token parameter variable">-o</span> liblzma_la-stream_flags_common.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-easy_encoder.Tpo .deps/liblzma_la-easy_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_encoder.Tpo <span class="token parameter variable">-c</span> common/block_encoder.c <span class="token parameter variable">-o</span> liblzma_la-block_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_encoder.Tpo <span class="token parameter variable">-c</span> common/alone_encoder.c <span class="token parameter variable">-o</span> liblzma_la-alone_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_buffer_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_buffer_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_buffer_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_header_encoder.Tpo .deps/liblzma_la-block_header_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-easy_preset.Tpo .deps/liblzma_la-easy_preset.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index.Tpo <span class="token parameter variable">-c</span> common/index.c <span class="token parameter variable">-o</span> liblzma_la-index.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_flags_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_flags_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_flags_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_common.Tpo <span class="token parameter variable">-c</span> common/filter_common.c <span class="token parameter variable">-o</span> liblzma_la-filter_common.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-tuklib_cpucores.Tpo .deps/liblzma_la-tuklib_cpucores.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-hardware_physmem.Tpo .deps/liblzma_la-hardware_physmem.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-index_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/index_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/index_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-easy_buffer_encoder.Tpo .deps/liblzma_la-easy_buffer_encoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_util.Tpo .deps/liblzma_la-block_util.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_buffer_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_buffer_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_buffer_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-vli_size.Tpo .deps/liblzma_la-vli_size.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/block_buffer_encoder.c <span class="token parameter variable">-o</span> liblzma_la-block_buffer_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_flags_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_flags_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_flags_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-common.Tpo <span class="token parameter variable">-c</span> common/common.c <span class="token parameter variable">-o</span> liblzma_la-common.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-vli_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/vli_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/vli_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-alone_encoder.Tpo .deps/liblzma_la-alone_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_cputhreads.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_cputhreads.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-hardware_cputhreads.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/hardware_cputhreads.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/hardware_cputhreads.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_flags_common.Tpo .deps/liblzma_la-stream_flags_common.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-outqueue.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-outqueue.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-outqueue.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/outqueue.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/outqueue.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder_memusage.Tpo <span class="token parameter variable">-c</span> common/easy_encoder_memusage.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-easy_encoder_memusage.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_encoder.Tpo .deps/liblzma_la-block_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder_mt.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder_mt.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_encoder_mt.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_encoder_mt.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_encoder_mt.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_encoder.Tpo <span class="token parameter variable">-c</span> common/vli_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-vli_encoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_common.Tpo .deps/liblzma_la-filter_common.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_buffer_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_buffer_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_encoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_buffer_encoder.Tpo .deps/liblzma_la-block_buffer_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-alone_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/alone_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/alone_decoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-auto_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-auto_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-auto_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/auto_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/auto_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_flags_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_flags_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_encoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_encoder_memusage.Tpo <span class="token parameter variable">-c</span> common/easy_encoder_memusage.c <span class="token parameter variable">-o</span> liblzma_la-easy_encoder_memusage.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-common.Tpo .deps/liblzma_la-common.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_buffer_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_buffer_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_encoder.Tpo <span class="token parameter variable">-c</span> common/index_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-index_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_cputhreads.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_cputhreads.Tpo <span class="token parameter variable">-c</span> common/hardware_cputhreads.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-hardware_cputhreads.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_flags_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_flags_encoder.o/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_buffer_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_buffer_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_buffer_decoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-index.Tpo .deps/liblzma_la-index.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_buffer_encoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_buffer_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_flags_encoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_flags_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-outqueue.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-outqueue.Tpo <span class="token parameter variable">-c</span> common/outqueue.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-outqueue.o/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_encoder.Tpo <span class="token parameter variable">-c</span> common/vli_encoder.c <span class="token parameter variable">-o</span> liblzma_la-vli_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_encoder.Tpo <span class="token parameter variable">-c</span> common/filter_encoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-hardware_cputhreads.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-hardware_cputhreads.Tpo <span class="token parameter variable">-c</span> common/hardware_cputhreads.c <span class="token parameter variable">-o</span> liblzma_la-hardware_cputhreads.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-easy_encoder_memusage.Tpo .deps/liblzma_la-easy_encoder_memusage.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-block_header_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/block_header_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/block_header_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_buffer_encoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_buffer_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_encoder.Tpo <span class="token parameter variable">-c</span> common/index_encoder.c <span class="token parameter variable">-o</span> liblzma_la-index_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_buffer_encoder.Tpo .deps/liblzma_la-filter_buffer_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_flags_encoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_flags_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_decoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_decoder_memusage.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-easy_decoder_memusage.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/easy_decoder_memusage.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/easy_decoder_memusage.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder.Tpo <span class="token parameter variable">-c</span> common/stream_encoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder_mt.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder_mt.Tpo <span class="token parameter variable">-c</span> common/stream_encoder_mt.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_encoder_mt.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_flags_encoder.Tpo .deps/liblzma_la-filter_flags_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-outqueue.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-outqueue.Tpo <span class="token parameter variable">-c</span> common/outqueue.c <span class="token parameter variable">-o</span> liblzma_la-outqueue.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-vli_encoder.Tpo .deps/liblzma_la-vli_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_buffer_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_buffer_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_buffer_decoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-auto_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-auto_decoder.Tpo <span class="token parameter variable">-c</span> common/auto_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-auto_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_decoder.Tpo <span class="token parameter variable">-c</span> common/alone_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-alone_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/block_buffer_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_buffer_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_buffer_encoder.Tpo .deps/liblzma_la-stream_buffer_encoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_flags_encoder.Tpo .deps/liblzma_la-stream_flags_encoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-hardware_cputhreads.Tpo .deps/liblzma_la-hardware_cputhreads.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-filter_flags_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/filter_flags_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/filter_flags_decoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-index_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/index_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/index_decoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_encoder.Tpo .deps/liblzma_la-filter_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_hash.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_hash.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-index_hash.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/index_hash.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/index_hash.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_buffer_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_buffer_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_buffer_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_decoder.Tpo <span class="token parameter variable">-c</span> common/block_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-index_encoder.Tpo .deps/liblzma_la-index_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-auto_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-auto_decoder.Tpo <span class="token parameter variable">-c</span> common/auto_decoder.c <span class="token parameter variable">-o</span> liblzma_la-auto_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-alone_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-alone_decoder.Tpo <span class="token parameter variable">-c</span> common/alone_decoder.c <span class="token parameter variable">-o</span> liblzma_la-alone_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/block_buffer_decoder.c <span class="token parameter variable">-o</span> liblzma_la-block_buffer_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_buffer_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_buffer_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_decoder.Tpo <span class="token parameter variable">-c</span> common/block_header_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-block_header_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_decoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_decoder_memusage.Tpo <span class="token parameter variable">-c</span> common/easy_decoder_memusage.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-easy_decoder_memusage.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-outqueue.Tpo .deps/liblzma_la-outqueue.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-stream_flags_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/stream_flags_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/stream_flags_decoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_encoder.Tpo .deps/liblzma_la-stream_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-vli_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'common/vli_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>common/vli_decoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-auto_decoder.Tpo .deps/liblzma_la-auto_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-check.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-check.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-check.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/check.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/check.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_hash.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_hash.Tpo <span class="token parameter variable">-c</span> common/index_hash.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-index_hash.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_decoder.Tpo <span class="token parameter variable">-c</span> common/block_decoder.c <span class="token parameter variable">-o</span> liblzma_la-block_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_flags_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-filter_flags_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-block_header_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-block_header_decoder.Tpo <span class="token parameter variable">-c</span> common/block_header_decoder.c <span class="token parameter variable">-o</span> liblzma_la-block_header_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-alone_decoder.Tpo .deps/liblzma_la-alone_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_table.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-crc32_table.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/crc32_table.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/crc32_table.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-easy_decoder_memusage.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-easy_decoder_memusage.Tpo <span class="token parameter variable">-c</span> common/easy_decoder_memusage.c <span class="token parameter variable">-o</span> liblzma_la-easy_decoder_memusage.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_buffer_decoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_buffer_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_decoder.Tpo <span class="token parameter variable">-c</span> common/index_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-index_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_decoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_buffer_decoder.Tpo .deps/liblzma_la-block_buffer_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_buffer_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_buffer_decoder.o/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_fast.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-crc32_fast.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/crc32_fast.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/crc32_fast.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_encoder_mt.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_encoder_mt.Tpo <span class="token parameter variable">-c</span> common/stream_encoder_mt.c <span class="token parameter variable">-o</span> liblzma_la-stream_encoder_mt.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_hash.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_hash.Tpo <span class="token parameter variable">-c</span> common/index_hash.c <span class="token parameter variable">-o</span> liblzma_la-index_hash.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_decoder.Tpo <span class="token parameter variable">-c</span> common/vli_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-vli_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-filter_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-filter_flags_decoder.Tpo <span class="token parameter variable">-c</span> common/filter_flags_decoder.c <span class="token parameter variable">-o</span> liblzma_la-filter_flags_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_decoder.Tpo .deps/liblzma_la-block_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_table.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-crc64_table.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/crc64_table.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/crc64_table.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-easy_decoder_memusage.Tpo .deps/liblzma_la-easy_decoder_memusage.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_fast.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-crc64_fast.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/crc64_fast.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/crc64_fast.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-check.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-check.Tpo <span class="token parameter variable">-c</span> check/check.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-check.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_flags_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-stream_flags_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-block_header_decoder.Tpo .deps/liblzma_la-block_header_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-index_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-index_decoder.Tpo <span class="token parameter variable">-c</span> common/index_decoder.c <span class="token parameter variable">-o</span> liblzma_la-index_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sha256.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sha256.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-sha256.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'check/sha256.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>check/sha256.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_buffer_decoder.Tpo .deps/liblzma_la-filter_buffer_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-vli_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-vli_decoder.Tpo <span class="token parameter variable">-c</span> common/vli_decoder.c <span class="token parameter variable">-o</span> liblzma_la-vli_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lz_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lz/lz_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lz/lz_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_table.Tpo <span class="token parameter variable">-c</span> check/crc32_table.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-crc32_table.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_decoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_decoder.Tpo .deps/liblzma_la-filter_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder_mf.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder_mf.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lz_encoder_mf.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lz/lz_encoder_mf.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lz/lz_encoder_mf.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-check.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-check.Tpo <span class="token parameter variable">-c</span> check/check.c <span class="token parameter variable">-o</span> liblzma_la-check.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-index_hash.Tpo .deps/liblzma_la-index_hash.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_buffer_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_buffer_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_buffer_decoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_buffer_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lz_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lz/lz_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lz/lz_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-stream_flags_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-stream_flags_decoder.Tpo <span class="token parameter variable">-c</span> common/stream_flags_decoder.c <span class="token parameter variable">-o</span> liblzma_la-stream_flags_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_fast.Tpo <span class="token parameter variable">-c</span> check/crc32_fast.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-crc32_fast.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-filter_flags_decoder.Tpo .deps/liblzma_la-filter_flags_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_table.Tpo <span class="token parameter variable">-c</span> check/crc32_table.c <span class="token parameter variable">-o</span> liblzma_la-crc32_table.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma_encoder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-vli_decoder.Tpo .deps/liblzma_la-vli_decoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_buffer_decoder.Tpo .deps/liblzma_la-stream_buffer_decoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_decoder.Tpo .deps/liblzma_la-stream_decoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-check.Tpo .deps/liblzma_la-check.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_presets.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_presets.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_presets.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma_encoder_presets.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma_encoder_presets.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_fast.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_optimum_fast.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma_encoder_optimum_fast.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma_encoder_optimum_fast.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_table.Tpo <span class="token parameter variable">-c</span> check/crc64_table.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-crc64_table.o/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_normal.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_normal.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_optimum_normal.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma_encoder_optimum_normal.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma_encoder_optimum_normal.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-fastpos_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-fastpos_table.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-fastpos_table.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/fastpos_table.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/fastpos_table.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-index_decoder.Tpo .deps/liblzma_la-index_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_fast.Tpo <span class="token parameter variable">-c</span> check/crc64_fast.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-crc64_fast.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_flags_decoder.Tpo .deps/liblzma_la-stream_flags_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma_decoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma2_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma2_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma2_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sha256.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sha256.Tpo <span class="token parameter variable">-c</span> check/sha256.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-sha256.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc32_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc32_fast.Tpo <span class="token parameter variable">-c</span> check/crc32_fast.c <span class="token parameter variable">-o</span> liblzma_la-crc32_fast.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder_mf.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder_mf.Tpo <span class="token parameter variable">-c</span> lz/lz_encoder_mf.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lz_encoder_mf.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_decoder.Tpo <span class="token parameter variable">-c</span> lz/lz_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lz_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-crc32_table.Tpo .deps/liblzma_la-crc32_table.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-lzma2_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzma/lzma2_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzma/lzma2_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder.Tpo <span class="token parameter variable">-c</span> lz/lz_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lz_encoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-stream_encoder_mt.Tpo .deps/liblzma_la-stream_encoder_mt.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_table.Tpo <span class="token parameter variable">-c</span> check/crc64_table.c <span class="token parameter variable">-o</span> liblzma_la-crc64_table.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-price_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-price_table.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-price_table.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'rangecoder/price_table.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>rangecoder/price_table.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-crc64_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-crc64_fast.Tpo <span class="token parameter variable">-c</span> check/crc64_fast.c <span class="token parameter variable">-o</span> liblzma_la-crc64_fast.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-crc32_fast.Tpo .deps/liblzma_la-crc32_fast.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_common.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-delta_common.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'delta/delta_common.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>delta/delta_common.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-fastpos_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-fastpos_table.Tpo <span class="token parameter variable">-c</span> lzma/fastpos_table.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-fastpos_table.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_fast.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_optimum_fast.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma_encoder_optimum_fast.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_decoder.Tpo <span class="token parameter variable">-c</span> lz/lz_decoder.c <span class="token parameter variable">-o</span> liblzma_la-lz_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_presets.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_presets.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_presets.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma_encoder_presets.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_normal.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_normal.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_optimum_normal.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma_encoder_optimum_normal.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_decoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-crc64_table.Tpo .deps/liblzma_la-crc64_table.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_encoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma2_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma2_encoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-crc64_fast.Tpo .deps/liblzma_la-crc64_fast.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-delta_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'delta/delta_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>delta/delta_encoder.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-delta_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'delta/delta_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>delta/delta_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-fastpos_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-fastpos_table.Tpo <span class="token parameter variable">-c</span> lzma/fastpos_table.c <span class="token parameter variable">-o</span> liblzma_la-fastpos_table.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_decoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma2_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-lzma2_decoder.olzma/lzma_decoder.c: In <span class="token keyword">function</span> ‘lzma_decode’:lzma/lzma_decoder.c:575:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>       --limit<span class="token punctuation">;</span>       ^~~~~~~lzma/lzma_decoder.c:576:6: note: here      <span class="token keyword">case</span> <span class="token number">4</span>:      ^~~~lzma/lzma_decoder.c:581:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>       --limit<span class="token punctuation">;</span>       ^~~~~~~lzma/lzma_decoder.c:582:6: note: here      <span class="token keyword">case</span> <span class="token number">3</span>:      ^~~~lzma/lzma_decoder.c:587:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>       --limit<span class="token punctuation">;</span>       ^~~~~~~lzma/lzma_decoder.c:588:6: note: here      <span class="token keyword">case</span> <span class="token number">2</span>:      ^~~~lzma/lzma_decoder.c:593:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>       --limit<span class="token punctuation">;</span>       ^~~~~~~lzma/lzma_decoder.c:594:6: note: here      <span class="token keyword">case</span> <span class="token number">1</span>:      ^~~~lzma/lzma_decoder.c:352:13: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>   pos_state <span class="token operator">=</span> dict.pos <span class="token operator">&amp;</span> pos_mask<span class="token punctuation">;</span>   ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~lzma/lzma_decoder.c:354:2: note: here  <span class="token keyword">case</span> SEQ_NORMALIZE:  ^~~~In <span class="token function">file</span> included from lzma/lzma_decoder.c:17:0:<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:132:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  prob -<span class="token operator">=</span> <span class="token punctuation">(</span>prob<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RC_MOVE_BITS<span class="token punctuation">;</span> <span class="token punctuation">\</span>lzma/lzma_decoder.c:489:3: note: <span class="token keyword">in</span> expansion of macro ‘rc_update_1’   rc_update_1<span class="token punctuation">(</span>coder-<span class="token operator">&gt;</span>is_match<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">[</span>pos_state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   ^~~~~~~~~~~lzma/lzma_decoder.c:491:2: note: here  <span class="token keyword">case</span> SEQ_IS_REP:  ^~~~lzma/lzma_decoder.c:690:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>unlikely<span class="token punctuation">(</span><span class="token operator">!</span>dict_is_distance_valid<span class="token punctuation">(</span><span class="token operator">&amp;</span>dict, <span class="token number">0</span><span class="token punctuation">))</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       ^lzma/lzma_decoder.c:695:2: note: here  <span class="token keyword">case</span> SEQ_IS_REP0:  ^~~~In <span class="token function">file</span> included from lzma/lzma_decoder.c:17:0:<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:132:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  prob -<span class="token operator">=</span> <span class="token punctuation">(</span>prob<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RC_MOVE_BITS<span class="token punctuation">;</span> <span class="token punctuation">\</span>lzma/lzma_decoder.c:724:5: note: <span class="token keyword">in</span> expansion of macro ‘rc_update_1’     rc_update_1<span class="token punctuation">(</span>coder-<span class="token operator">&gt;</span>is_rep0<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     ^~~~~~~~~~~lzma/lzma_decoder.c:726:2: note: here  <span class="token keyword">case</span> SEQ_IS_REP1:  ^~~~In <span class="token function">file</span> included from lzma/lzma_decoder.c:17:0:<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:132:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  prob -<span class="token operator">=</span> <span class="token punctuation">(</span>prob<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RC_MOVE_BITS<span class="token punctuation">;</span> <span class="token punctuation">\</span>lzma/lzma_decoder.c:739:6: note: <span class="token keyword">in</span> expansion of macro ‘rc_update_1’      rc_update_1<span class="token punctuation">(</span>coder-<span class="token operator">&gt;</span>is_rep1<span class="token punctuation">[</span>state<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      ^~~~~~~~~~~lzma/lzma_decoder.c:740:2: note: here  <span class="token keyword">case</span> SEQ_IS_REP2:  ^~~~lzma/lzma_decoder.c:113:9: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  symbol <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  ~~~~~~~^~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~lzma/lzma_decoder.c:114:1: note: here <span class="token keyword">case</span> <span class="token function">seq</span> <span class="token comment">## _CHOICE: \</span> ^lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~In <span class="token function">file</span> included from lzma/lzma_decoder.c:17:0:<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:132:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  prob -<span class="token operator">=</span> <span class="token punctuation">(</span>prob<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RC_MOVE_BITS<span class="token punctuation">;</span> <span class="token punctuation">\</span>lzma/lzma_decoder.c:122:3: note: <span class="token keyword">in</span> expansion of macro ‘rc_update_1’   rc_update_1<span class="token punctuation">(</span>ld.choice<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>   ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~lzma/lzma_decoder.c:123:1: note: here <span class="token keyword">case</span> <span class="token function">seq</span> <span class="token comment">## _CHOICE2: \</span> ^lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~In <span class="token function">file</span> included from lzma/lzma_decoder.c:17:0:<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:132:7: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  prob -<span class="token operator">=</span> <span class="token punctuation">(</span>prob<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> RC_MOVE_BITS<span class="token punctuation">;</span> <span class="token punctuation">\</span>lzma/lzma_decoder.c:135:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_update_1’    rc_update_1<span class="token punctuation">(</span>ld.choice2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:136:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH0); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:136:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH0); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:137:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH1); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:137:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH1); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:138:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH2); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:138:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH2); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:139:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH3); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:139:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH3); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:140:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH4); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:140:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH4); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:141:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH5); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:141:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH5); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:142:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH6); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:114:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rc.code <span class="token operator">&lt;</span> rc_bound<span class="token punctuation">)</span>     ^<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:142:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_if_0’  rc_if_0<span class="token punctuation">(</span>prob, <span class="token function">seq</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">\</span>  ^~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:155:2: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_last’  rc_bit_last<span class="token punctuation">(</span>prob, <span class="token punctuation">\</span>  ^~~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:12: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit’  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>            ^~~~~~lzma/lzma_decoder.c:142:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH6); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder/range_decoder.h:167:2: note: here  <span class="token keyword">case</span> seq: rc_bit<span class="token punctuation">(</span>prob, action0, action1, <span class="token function">seq</span><span class="token punctuation">)</span>  ^lzma/lzma_decoder.c:143:4: note: <span class="token keyword">in</span> expansion of macro ‘rc_bit_case’    rc_bit_case<span class="token punctuation">(</span>ld.high<span class="token punctuation">[</span>symbol<span class="token punctuation">]</span>, , , <span class="token function">seq</span> <span class="token comment">## _HIGH7); \</span>    ^~~~~~~~~~~lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~lzma/lzma_decoder.c:144:11: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>    target <span class="token operator">=</span> symbol - LEN_HIGH_SYMBOLS <span class="token punctuation">\</span>lzma/lzma_decoder.c:767:4: note: <span class="token keyword">in</span> expansion of macro ‘len_decode’    len_decode<span class="token punctuation">(</span>len, coder-<span class="token operator">&gt;</span>rep_len_decoder,    ^~~~~~~~~~lzma/lzma_decoder.c:780:2: note: here  <span class="token keyword">case</span> SEQ_COPY:  ^~~~libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-price_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-price_table.Tpo <span class="token parameter variable">-c</span> rangecoder/price_table.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-price_table.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_common.Tpo <span class="token parameter variable">-c</span> delta/delta_common.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-delta_common.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sha256.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sha256.Tpo <span class="token parameter variable">-c</span> check/sha256.c <span class="token parameter variable">-o</span> liblzma_la-sha256.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lz_decoder.Tpo .deps/liblzma_la-lz_decoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_presets.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_presets.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_presets.c <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_presets.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_coder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_coder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-simple_coder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/simple_coder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/simple_coder.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-fastpos_table.Tpo .deps/liblzma_la-fastpos_table.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_encoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma2_encoder.c <span class="token parameter variable">-o</span> liblzma_la-lzma2_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_encoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-simple_encoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/simple_encoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/simple_encoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-price_table.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-price_table.Tpo <span class="token parameter variable">-c</span> rangecoder/price_table.c <span class="token parameter variable">-o</span> liblzma_la-price_table.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma2_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma2_decoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma2_decoder.c <span class="token parameter variable">-o</span> liblzma_la-lzma2_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_encoder.Tpo <span class="token parameter variable">-c</span> delta/delta_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-delta_encoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_decoder.Tpo <span class="token parameter variable">-c</span> delta/delta_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-delta_decoder.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_common.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_common.Tpo <span class="token parameter variable">-c</span> delta/delta_common.c <span class="token parameter variable">-o</span> liblzma_la-delta_common.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder.Tpo <span class="token parameter variable">-c</span> lz/lz_encoder.c <span class="token parameter variable">-o</span> liblzma_la-lz_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma_encoder_presets.Tpo .deps/liblzma_la-lzma_encoder_presets.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_decoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-simple_decoder.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/simple_decoder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/simple_decoder.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lz_encoder_mf.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lz_encoder_mf.Tpo <span class="token parameter variable">-c</span> lz/lz_encoder_mf.c <span class="token parameter variable">-o</span> liblzma_la-lz_encoder_mf.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder.c <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-price_table.Tpo .deps/liblzma_la-price_table.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_coder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_coder.Tpo <span class="token parameter variable">-c</span> simple/simple_coder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-simple_coder.o/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-x86.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-x86.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-x86.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/x86.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/x86.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_encoder.Tpo <span class="token parameter variable">-c</span> simple/simple_encoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-simple_encoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-delta_common.Tpo .deps/liblzma_la-delta_common.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_decoder.Tpo <span class="token parameter variable">-c</span> delta/delta_decoder.c <span class="token parameter variable">-o</span> liblzma_la-delta_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-powerpc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-powerpc.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-powerpc.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/powerpc.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/powerpc.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_fast.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_fast.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_optimum_fast.c <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_optimum_fast.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-delta_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-delta_encoder.Tpo <span class="token parameter variable">-c</span> delta/delta_encoder.c <span class="token parameter variable">-o</span> liblzma_la-delta_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma2_decoder.Tpo .deps/liblzma_la-lzma2_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-ia64.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-ia64.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-ia64.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/ia64.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/ia64.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_decoder.Tpo <span class="token parameter variable">-c</span> simple/simple_decoder.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-simple_decoder.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-sha256.Tpo .deps/liblzma_la-sha256.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma2_encoder.Tpo .deps/liblzma_la-lzma2_encoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-arm.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-arm.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-arm.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/arm.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/arm.c/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-armthumb.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-armthumb.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-armthumb.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/armthumb.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/armthumb.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_encoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_encoder.Tpo <span class="token parameter variable">-c</span> simple/simple_encoder.c <span class="token parameter variable">-o</span> liblzma_la-simple_encoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_coder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_coder.Tpo <span class="token parameter variable">-c</span> simple/simple_coder.c <span class="token parameter variable">-o</span> liblzma_la-simple_coder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-simple_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-simple_decoder.Tpo <span class="token parameter variable">-c</span> simple/simple_decoder.c <span class="token parameter variable">-o</span> liblzma_la-simple_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-delta_decoder.Tpo .deps/liblzma_la-delta_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sparc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sparc.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> liblzma_la-sparc.lo <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'simple/sparc.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>simple/sparc.clibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-x86.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-x86.Tpo <span class="token parameter variable">-c</span> simple/x86.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-x86.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-delta_encoder.Tpo .deps/liblzma_la-delta_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-powerpc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-powerpc.Tpo <span class="token parameter variable">-c</span> simple/powerpc.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-powerpc.o<span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzma.pc<span class="token function">sed</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@prefix[@],/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@exec_prefix[@],/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@libdir[@],/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@includedir[@],/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@PACKAGE_URL[@],http://tukaani.org/xz/,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@PACKAGE_VERSION[@],5.2.2,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@PTHREAD_CFLAGS[@],-pthread,g'</span> <span class="token punctuation">\</span>        <span class="token parameter variable">-e</span> <span class="token string">'s,@LIBS[@],,g'</span> <span class="token punctuation">\</span>        <span class="token operator">&lt;</span> ./liblzma.pc.in <span class="token operator">&gt;</span> liblzma.pc <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzma.pc<span class="token punctuation">;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_encoder_optimum_normal.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_encoder_optimum_normal.Tpo <span class="token parameter variable">-c</span> lzma/lzma_encoder_optimum_normal.c <span class="token parameter variable">-o</span> liblzma_la-lzma_encoder_optimum_normal.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-simple_encoder.Tpo .deps/liblzma_la-simple_encoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-simple_decoder.Tpo .deps/liblzma_la-simple_decoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lz_encoder_mf.Tpo .deps/liblzma_la-lz_encoder_mf.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-x86.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-x86.Tpo <span class="token parameter variable">-c</span> simple/x86.c <span class="token parameter variable">-o</span> liblzma_la-x86.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lz_encoder.Tpo .deps/liblzma_la-lz_encoder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-ia64.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-ia64.Tpo <span class="token parameter variable">-c</span> simple/ia64.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-ia64.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-powerpc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-powerpc.Tpo <span class="token parameter variable">-c</span> simple/powerpc.c <span class="token parameter variable">-o</span> liblzma_la-powerpc.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-arm.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-arm.Tpo <span class="token parameter variable">-c</span> simple/arm.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-arm.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-armthumb.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-armthumb.Tpo <span class="token parameter variable">-c</span> simple/armthumb.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-armthumb.o<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma_encoder_optimum_fast.Tpo .deps/liblzma_la-lzma_encoder_optimum_fast.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-ia64.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-ia64.Tpo <span class="token parameter variable">-c</span> simple/ia64.c <span class="token parameter variable">-o</span> liblzma_la-ia64.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-simple_coder.Tpo .deps/liblzma_la-simple_coder.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-armthumb.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-armthumb.Tpo <span class="token parameter variable">-c</span> simple/armthumb.c <span class="token parameter variable">-o</span> liblzma_la-armthumb.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>libtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sparc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sparc.Tpo <span class="token parameter variable">-c</span> simple/sparc.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/liblzma_la-sparc.olibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-arm.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-arm.Tpo <span class="token parameter variable">-c</span> simple/arm.c <span class="token parameter variable">-o</span> liblzma_la-arm.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-powerpc.Tpo .deps/liblzma_la-powerpc.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma_encoder.Tpo .deps/liblzma_la-lzma_encoder.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-x86.Tpo .deps/liblzma_la-x86.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-ia64.Tpo .deps/liblzma_la-ia64.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-lzma_decoder.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-lzma_decoder.Tpo <span class="token parameter variable">-c</span> lzma/lzma_decoder.c <span class="token parameter variable">-o</span> liblzma_la-lzma_decoder.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-armthumb.Tpo .deps/liblzma_la-armthumb.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-arm.Tpo .deps/liblzma_la-arm.Plolibtool: compile:  gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/check -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lz -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/rangecoder -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/lzma -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/delta -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/simple -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common <span class="token parameter variable">-DTUKLIB_SYMBOL_PREFIX</span><span class="token operator">=</span>lzma_ <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> liblzma_la-sparc.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/liblzma_la-sparc.Tpo <span class="token parameter variable">-c</span> simple/sparc.c <span class="token parameter variable">-o</span> liblzma_la-sparc.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-sparc.Tpo .deps/liblzma_la-sparc.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma_encoder_optimum_normal.Tpo .deps/liblzma_la-lzma_encoder_optimum_normal.Plo<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/liblzma_la-lzma_decoder.Tpo .deps/liblzma_la-lzma_decoder.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> -no-undefined -version-info <span class="token number">7</span>:2:2 -Wl,--version-script<span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.map   <span class="token parameter variable">-o</span> liblzma.la <span class="token parameter variable">-rpath</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib liblzma_la-tuklib_physmem.lo liblzma_la-tuklib_cpucores.lo liblzma_la-common.lo liblzma_la-block_util.lo liblzma_la-easy_preset.lo liblzma_la-filter_common.lo liblzma_la-hardware_physmem.lo liblzma_la-index.lo liblzma_la-stream_flags_common.lo liblzma_la-vli_size.lo liblzma_la-alone_encoder.lo liblzma_la-block_buffer_encoder.lo liblzma_la-block_encoder.lo liblzma_la-block_header_encoder.lo liblzma_la-easy_buffer_encoder.lo liblzma_la-easy_encoder.lo liblzma_la-easy_encoder_memusage.lo liblzma_la-filter_buffer_encoder.lo liblzma_la-filter_encoder.lo liblzma_la-filter_flags_encoder.lo liblzma_la-index_encoder.lo liblzma_la-stream_buffer_encoder.lo liblzma_la-stream_encoder.lo liblzma_la-stream_flags_encoder.lo liblzma_la-vli_encoder.lo liblzma_la-hardware_cputhreads.lo liblzma_la-outqueue.lo liblzma_la-stream_encoder_mt.lo liblzma_la-alone_decoder.lo liblzma_la-auto_decoder.lo liblzma_la-block_buffer_decoder.lo liblzma_la-block_decoder.lo liblzma_la-block_header_decoder.lo liblzma_la-easy_decoder_memusage.lo liblzma_la-filter_buffer_decoder.lo liblzma_la-filter_decoder.lo liblzma_la-filter_flags_decoder.lo liblzma_la-index_decoder.lo liblzma_la-index_hash.lo liblzma_la-stream_buffer_decoder.lo liblzma_la-stream_decoder.lo liblzma_la-stream_flags_decoder.lo liblzma_la-vli_decoder.lo liblzma_la-check.lo  liblzma_la-crc32_table.lo  liblzma_la-crc32_fast.lo  liblzma_la-crc64_table.lo  liblzma_la-crc64_fast.lo liblzma_la-sha256.lo liblzma_la-lz_encoder.lo liblzma_la-lz_encoder_mf.lo liblzma_la-lz_decoder.lo  liblzma_la-lzma_encoder.lo liblzma_la-lzma_encoder_presets.lo liblzma_la-lzma_encoder_optimum_fast.lo liblzma_la-lzma_encoder_optimum_normal.lo liblzma_la-fastpos_table.lo liblzma_la-lzma_decoder.lo liblzma_la-lzma2_encoder.lo liblzma_la-lzma2_decoder.lo  liblzma_la-price_table.lo  liblzma_la-delta_common.lo liblzma_la-delta_encoder.lo liblzma_la-delta_decoder.lo liblzma_la-simple_coder.lo liblzma_la-simple_encoder.lo liblzma_la-simple_decoder.lo liblzma_la-x86.lo liblzma_la-powerpc.lo liblzma_la-ia64.lo liblzma_la-arm.lo liblzma_la-armthumb.lo liblzma_la-sparc.lolibtool: link: gcc <span class="token parameter variable">-shared</span>  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>  .libs/liblzma_la-tuklib_physmem.o .libs/liblzma_la-tuklib_cpucores.o .libs/liblzma_la-common.o .libs/liblzma_la-block_util.o .libs/liblzma_la-easy_preset.o .libs/liblzma_la-filter_common.o .libs/liblzma_la-hardware_physmem.o .libs/liblzma_la-index.o .libs/liblzma_la-stream_flags_common.o .libs/liblzma_la-vli_size.o .libs/liblzma_la-alone_encoder.o .libs/liblzma_la-block_buffer_encoder.o .libs/liblzma_la-block_encoder.o .libs/liblzma_la-block_header_encoder.o .libs/liblzma_la-easy_buffer_encoder.o .libs/liblzma_la-easy_encoder.o .libs/liblzma_la-easy_encoder_memusage.o .libs/liblzma_la-filter_buffer_encoder.o .libs/liblzma_la-filter_encoder.o .libs/liblzma_la-filter_flags_encoder.o .libs/liblzma_la-index_encoder.o .libs/liblzma_la-stream_buffer_encoder.o .libs/liblzma_la-stream_encoder.o .libs/liblzma_la-stream_flags_encoder.o .libs/liblzma_la-vli_encoder.o .libs/liblzma_la-hardware_cputhreads.o .libs/liblzma_la-outqueue.o .libs/liblzma_la-stream_encoder_mt.o .libs/liblzma_la-alone_decoder.o .libs/liblzma_la-auto_decoder.o .libs/liblzma_la-block_buffer_decoder.o .libs/liblzma_la-block_decoder.o .libs/liblzma_la-block_header_decoder.o .libs/liblzma_la-easy_decoder_memusage.o .libs/liblzma_la-filter_buffer_decoder.o .libs/liblzma_la-filter_decoder.o .libs/liblzma_la-filter_flags_decoder.o .libs/liblzma_la-index_decoder.o .libs/liblzma_la-index_hash.o .libs/liblzma_la-stream_buffer_decoder.o .libs/liblzma_la-stream_decoder.o .libs/liblzma_la-stream_flags_decoder.o .libs/liblzma_la-vli_decoder.o .libs/liblzma_la-check.o .libs/liblzma_la-crc32_table.o .libs/liblzma_la-crc32_fast.o .libs/liblzma_la-crc64_table.o .libs/liblzma_la-crc64_fast.o .libs/liblzma_la-sha256.o .libs/liblzma_la-lz_encoder.o .libs/liblzma_la-lz_encoder_mf.o .libs/liblzma_la-lz_decoder.o .libs/liblzma_la-lzma_encoder.o .libs/liblzma_la-lzma_encoder_presets.o .libs/liblzma_la-lzma_encoder_optimum_fast.o .libs/liblzma_la-lzma_encoder_optimum_normal.o .libs/liblzma_la-fastpos_table.o .libs/liblzma_la-lzma_decoder.o .libs/liblzma_la-lzma2_encoder.o .libs/liblzma_la-lzma2_decoder.o .libs/liblzma_la-price_table.o .libs/liblzma_la-delta_common.o .libs/liblzma_la-delta_encoder.o .libs/liblzma_la-delta_decoder.o .libs/liblzma_la-simple_coder.o .libs/liblzma_la-simple_encoder.o .libs/liblzma_la-simple_decoder.o .libs/liblzma_la-x86.o .libs/liblzma_la-powerpc.o .libs/liblzma_la-ia64.o .libs/liblzma_la-arm.o .libs/liblzma_la-armthumb.o .libs/liblzma_la-sparc.o    <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> -Wl,--version-script<span class="token operator">=</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.map   <span class="token parameter variable">-pthread</span> -Wl,-soname -Wl,liblzma.so.5 <span class="token parameter variable">-o</span> .libs/liblzma.so.5.2.2libtool: link: <span class="token punctuation">(</span>cd <span class="token string">".libs"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">"liblzma.so.5"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token string">"liblzma.so.5.2.2"</span> <span class="token string">"liblzma.so.5"</span><span class="token punctuation">)</span>libtool: link: <span class="token punctuation">(</span>cd <span class="token string">".libs"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">"liblzma.so"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token string">"liblzma.so.5.2.2"</span> <span class="token string">"liblzma.so"</span><span class="token punctuation">)</span>libtool: link: ar cru .libs/liblzma.a  liblzma_la-tuklib_physmem.o liblzma_la-tuklib_cpucores.o liblzma_la-common.o liblzma_la-block_util.o liblzma_la-easy_preset.o liblzma_la-filter_common.o liblzma_la-hardware_physmem.o liblzma_la-index.o liblzma_la-stream_flags_common.o liblzma_la-vli_size.o liblzma_la-alone_encoder.o liblzma_la-block_buffer_encoder.o liblzma_la-block_encoder.o liblzma_la-block_header_encoder.o liblzma_la-easy_buffer_encoder.o liblzma_la-easy_encoder.o liblzma_la-easy_encoder_memusage.o liblzma_la-filter_buffer_encoder.o liblzma_la-filter_encoder.o liblzma_la-filter_flags_encoder.o liblzma_la-index_encoder.o liblzma_la-stream_buffer_encoder.o liblzma_la-stream_encoder.o liblzma_la-stream_flags_encoder.o liblzma_la-vli_encoder.o liblzma_la-hardware_cputhreads.o liblzma_la-outqueue.o liblzma_la-stream_encoder_mt.o liblzma_la-alone_decoder.o liblzma_la-auto_decoder.o liblzma_la-block_buffer_decoder.o liblzma_la-block_decoder.o liblzma_la-block_header_decoder.o liblzma_la-easy_decoder_memusage.o liblzma_la-filter_buffer_decoder.o liblzma_la-filter_decoder.o liblzma_la-filter_flags_decoder.o liblzma_la-index_decoder.o liblzma_la-index_hash.o liblzma_la-stream_buffer_decoder.o liblzma_la-stream_decoder.o liblzma_la-stream_flags_decoder.o liblzma_la-vli_decoder.o liblzma_la-check.o liblzma_la-crc32_table.o liblzma_la-crc32_fast.o liblzma_la-crc64_table.o liblzma_la-crc64_fast.o liblzma_la-sha256.o liblzma_la-lz_encoder.o liblzma_la-lz_encoder_mf.o liblzma_la-lz_decoder.o liblzma_la-lzma_encoder.o liblzma_la-lzma_encoder_presets.o liblzma_la-lzma_encoder_optimum_fast.o liblzma_la-lzma_encoder_optimum_normal.o liblzma_la-fastpos_table.o liblzma_la-lzma_decoder.o liblzma_la-lzma2_encoder.o liblzma_la-lzma2_decoder.o liblzma_la-price_table.o liblzma_la-delta_common.o liblzma_la-delta_encoder.o liblzma_la-delta_decoder.o liblzma_la-simple_coder.o liblzma_la-simple_encoder.o liblzma_la-simple_decoder.o liblzma_la-x86.o liblzma_la-powerpc.o liblzma_la-ia64.o liblzma_la-arm.o liblzma_la-armthumb.o liblzma_la-sparc.oar: <span class="token variable"><span class="token variable">`</span>u' modifier ignored since <span class="token variable">`</span></span>D<span class="token string">' is the default (see `U'</span><span class="token punctuation">)</span>libtool: link: ranlib .libs/liblzma.alibtool: link: <span class="token punctuation">(</span> <span class="token builtin class-name">cd</span> <span class="token string">".libs"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">"liblzma.la"</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token string">"../liblzma.la"</span> <span class="token string">"liblzma.la"</span> <span class="token punctuation">)</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>Making all <span class="token keyword">in</span> xzdecmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xzdec-xzdec.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xzdec-xzdec.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xzdec-xzdec.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'xzdec.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>xzdec.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xzdec-tuklib_progname.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xzdec-tuklib_progname.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xzdec-tuklib_progname.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_progname.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_progname.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xzdec-tuklib_exit.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xzdec-tuklib_exit.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xzdec-tuklib_exit.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_exit.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_exit.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib <span class="token parameter variable">-DLZMADEC</span>  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmadec-xzdec.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmadec-xzdec.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmadec-xzdec.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'xzdec.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>xzdec.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib <span class="token parameter variable">-DLZMADEC</span>  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmadec-tuklib_progname.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmadec-tuklib_progname.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmadec-tuklib_progname.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_progname.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_progname.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DTUKLIB_GETTEXT</span><span class="token operator">=</span><span class="token number">0</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib <span class="token parameter variable">-DLZMADEC</span>  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmadec-tuklib_exit.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmadec-tuklib_exit.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmadec-tuklib_exit.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_exit.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_exit.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmadec-tuklib_progname.Tpo .deps/lzmadec-tuklib_progname.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xzdec-tuklib_progname.Tpo .deps/xzdec-tuklib_progname.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmadec-tuklib_exit.Tpo .deps/lzmadec-tuklib_exit.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xzdec-tuklib_exit.Tpo .deps/xzdec-tuklib_exit.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmadec-xzdec.Tpo .deps/lzmadec-xzdec.Po/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   <span class="token parameter variable">-o</span> lzmadec lzmadec-xzdec.o lzmadec-tuklib_progname.o lzmadec-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.la<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xzdec-xzdec.Tpo .deps/xzdec-xzdec.Po/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   <span class="token parameter variable">-o</span> xzdec xzdec-xzdec.o xzdec-tuklib_progname.o xzdec-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.lalibtool: link: gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> .libs/lzmadec lzmadec-xzdec.o lzmadec-tuklib_progname.o lzmadec-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/.libs/liblzma.so <span class="token parameter variable">-pthread</span> -Wl,-rpath -Wl,/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/liblibtool: link: gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> .libs/xzdec xzdec-xzdec.o xzdec-tuklib_progname.o xzdec-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/.libs/liblzma.so <span class="token parameter variable">-pthread</span> -Wl,-rpath -Wl,/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/libmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>Making all <span class="token keyword">in</span> xzmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-args.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-args.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-args.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'args.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>args.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-coder.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-coder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-coder.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'coder.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>coder.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-file_io.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-file_io.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-file_io.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'file_io.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>file_io.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-hardware.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-hardware.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-hardware.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'hardware.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>hardware.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-list.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-list.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-list.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'list.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>list.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-main.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-main.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-main.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'main.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>main.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-message.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-message.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-message.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'message.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>message.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-mytime.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-mytime.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-mytime.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'mytime.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>mytime.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-options.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-options.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-options.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'options.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>options.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-signals.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-signals.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-signals.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'signals.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>signals.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-suffix.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-suffix.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-suffix.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'suffix.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>suffix.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-util.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-util.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-util.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'util.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>util.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-tuklib_open_stdxxx.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-tuklib_open_stdxxx.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-tuklib_open_stdxxx.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_open_stdxxx.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_open_stdxxx.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-tuklib_progname.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-tuklib_progname.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-tuklib_progname.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_progname.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_progname.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-tuklib_exit.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-tuklib_exit.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-tuklib_exit.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_exit.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_exit.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-tuklib_mbstr_width.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-tuklib_mbstr_width.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-tuklib_mbstr_width.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_mbstr_width.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_mbstr_width.clist.c: In <span class="token keyword">function</span> ‘parse_block_header’:list.c:480:5: warning: this statement may fall through <span class="token punctuation">[</span>-Wimplicit-fallthrough<span class="token operator">=</span><span class="token punctuation">]</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>block.uncompressed_size <span class="token operator">==</span> LZMA_VLI_UNKNOWN       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     <span class="token operator">||</span> block.uncompressed_size     ^~~~~~~~~~~~~~~~~~~~~~~~~~      <span class="token operator">==</span> iter-<span class="token operator">&gt;</span>block.uncompressed_size<span class="token punctuation">)</span>      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~list.c:487:2: note: here  <span class="token keyword">case</span> LZMA_DATA_ERROR:  ^~~~<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-tuklib_progname.Tpo .deps/xz-tuklib_progname.Pogcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> xz-tuklib_mbstr_fw.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/xz-tuklib_mbstr_fw.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xz-tuklib_mbstr_fw.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_mbstr_fw.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_mbstr_fw.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-tuklib_mbstr_width.Tpo .deps/xz-tuklib_mbstr_width.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-tuklib_open_stdxxx.Tpo .deps/xz-tuklib_open_stdxxx.Pofile_io.c: In <span class="token keyword">function</span> ‘io_read’:file_io.c:1021:24: warning: logical ‘or’ of equal expressions <span class="token punctuation">[</span>-Wlogical-op<span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>errno <span class="token operator">==</span> EAGAIN <span class="token operator">||</span> errno <span class="token operator">==</span> EWOULDBLOCK<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        ^~file_io.c: In <span class="token keyword">function</span> ‘io_write_buf’:file_io.c:1109:24: warning: logical ‘or’ of equal expressions <span class="token punctuation">[</span>-Wlogical-op<span class="token punctuation">]</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>errno <span class="token operator">==</span> EAGAIN <span class="token operator">||</span> errno <span class="token operator">==</span> EWOULDBLOCK<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        ^~<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-tuklib_exit.Tpo .deps/xz-tuklib_exit.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-hardware.Tpo .deps/xz-hardware.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-mytime.Tpo .deps/xz-mytime.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-signals.Tpo .deps/xz-signals.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-suffix.Tpo .deps/xz-suffix.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-main.Tpo .deps/xz-main.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-options.Tpo .deps/xz-options.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-coder.Tpo .deps/xz-coder.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-tuklib_mbstr_fw.Tpo .deps/xz-tuklib_mbstr_fw.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-args.Tpo .deps/xz-args.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-util.Tpo .deps/xz-util.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-file_io.Tpo .deps/xz-file_io.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-message.Tpo .deps/xz-message.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/xz-list.Tpo .deps/xz-list.Po/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   <span class="token parameter variable">-o</span> xz xz-args.o xz-coder.o xz-file_io.o xz-hardware.o xz-list.o xz-main.o xz-message.o xz-mytime.o xz-options.o xz-signals.o xz-suffix.o xz-util.o xz-tuklib_open_stdxxx.o xz-tuklib_progname.o xz-tuklib_exit.o xz-tuklib_mbstr_width.o xz-tuklib_mbstr_fw.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.la  libtool: link: gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> .libs/xz xz-args.o xz-coder.o xz-file_io.o xz-hardware.o xz-list.o xz-main.o xz-message.o xz-mytime.o xz-options.o xz-signals.o xz-suffix.o xz-util.o xz-tuklib_open_stdxxx.o xz-tuklib_progname.o xz-tuklib_exit.o xz-tuklib_mbstr_width.o xz-tuklib_mbstr_fw.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/.libs/liblzma.so <span class="token parameter variable">-pthread</span> -Wl,-rpath -Wl,/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/libmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>Making all <span class="token keyword">in</span> lzmainfomake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span>gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmainfo-lzmainfo.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmainfo-lzmainfo.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmainfo-lzmainfo.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'lzmainfo.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span>lzmainfo.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmainfo-tuklib_progname.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmainfo-tuklib_progname.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmainfo-tuklib_progname.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_progname.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_progname.cgcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DLOCALEDIR</span><span class="token operator">=</span><span class="token punctuation">\</span>"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale<span class="token punctuation">\</span>" -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/common -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/api -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/lib  <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmainfo-tuklib_exit.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmainfo-tuklib_exit.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmainfo-tuklib_exit.o <span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../common/tuklib_exit.c'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable">`</span></span><span class="token punctuation">..</span>/common/tuklib_exit.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmainfo-tuklib_progname.Tpo .deps/lzmainfo-tuklib_progname.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmainfo-tuklib_exit.Tpo .deps/lzmainfo-tuklib_exit.Po<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmainfo-lzmainfo.Tpo .deps/lzmainfo-lzmainfo.Po/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool  <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   <span class="token parameter variable">-o</span> lzmainfo lzmainfo-lzmainfo.o lzmainfo-tuklib_progname.o lzmainfo-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/liblzma.lalibtool: link: gcc <span class="token parameter variable">-pthread</span> <span class="token parameter variable">-fvisibility</span><span class="token operator">=</span>hidden <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wextra</span> <span class="token parameter variable">-Wvla</span> <span class="token parameter variable">-Wformat</span><span class="token operator">=</span><span class="token number">2</span> -Winit-self -Wmissing-include-dirs -Wstrict-aliasing -Wfloat-equal <span class="token parameter variable">-Wundef</span> <span class="token parameter variable">-Wshadow</span> -Wpointer-arith -Wbad-function-cast -Wwrite-strings -Wlogical-op -Waggregate-return -Wstrict-prototypes -Wold-style-definition -Wmissing-prototypes -Wmissing-declarations -Wmissing-noreturn -Wredundant-decls <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> .libs/lzmainfo lzmainfo-lzmainfo.o lzmainfo-tuklib_progname.o lzmainfo-tuklib_exit.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/liblzma/.libs/liblzma.so <span class="token parameter variable">-pthread</span> -Wl,-rpath -Wl,/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/libmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span>Making all <span class="token keyword">in</span> scriptsmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>Making all <span class="token keyword">in</span> pomake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/po'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/po'</span>Making all <span class="token keyword">in</span> testsmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> srcmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> liblzmamake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> apimake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-exec-am'</span><span class="token builtin class-name">.</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/lzma'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span>  lzma/base.h lzma/bcj.h lzma/block.h lzma/check.h lzma/container.h lzma/delta.h lzma/filter.h lzma/hardware.h lzma/index.h lzma/index_hash.h lzma/lzma12.h lzma/stream_flags.h lzma/version.h lzma/vli.h <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/lzma'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span>  lzma.h <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/.'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma/api'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib'</span> /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span>   liblzma.la <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/liblzma.so.5.2.2 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/liblzma.so.5.2.2libtool: install: <span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> liblzma.so.5.2.2 liblzma.so.5 <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzma.so.5 <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> liblzma.so.5.2.2 liblzma.so.5<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>libtool: install: <span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> liblzma.so.5.2.2 liblzma.so <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzma.so <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> liblzma.so.5.2.2 liblzma.so<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/liblzma.lai /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/liblzma.lalibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/liblzma.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/liblzma.alibtool: install: <span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/liblzma.alibtool: install: ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/liblzma.alibtool: finish: <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/sbin"</span> ldconfig <span class="token parameter variable">-n</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib----------------------------------------------------------------------Libraries have been installed in:   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/libIf you ever happen to want to <span class="token function">link</span> against installed libraries<span class="token keyword">in</span> a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the <span class="token string">'-LLIBDIR'</span>flag during linking and <span class="token keyword">do</span> at least one of the following:   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_LIBRARY_PATH'</span> environment variable     during execution   - <span class="token function">add</span> LIBDIR to the <span class="token string">'LD_RUN_PATH'</span> environment variable     during linking   - use the <span class="token string">'-Wl,-rpath -Wl,LIBDIR'</span> linker flag   - have your system administrator <span class="token function">add</span> LIBDIR to <span class="token string">'/etc/ld.so.conf'</span>See any operating system documentation about shared libraries <span class="token keyword">for</span><span class="token function">more</span> information, such as the ld<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> and ld.so<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> manual pages.---------------------------------------------------------------------- /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/pkgconfig'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> liblzma.pc <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/pkgconfig'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/liblzma'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> xzdecmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>  /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> xzdec lzmadec <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/xzdec /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/xzdeclibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lzmadec /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/lzmadec /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> xzdec.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span><span class="token function">make</span>  install-data-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> xzdec <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token assign-left variable">link</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> lzmadec <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$link</span>.1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$target</span>.1 <span class="token variable">$link</span>.1make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xzdec'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> xzmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>  /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> xz <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/xz /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/xz<span class="token function">make</span>  install-exec-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> xz <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">name</span> <span class="token keyword">in</span> unxz xzcat lzma unlzma lzcat<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">link</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $name <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$link</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$target</span> <span class="token variable">$link</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> xz.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span><span class="token function">make</span>  install-data-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> xz <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">name</span> <span class="token keyword">in</span> unxz xzcat lzma unlzma lzcat<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">link</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $name <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$link</span>.1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$target</span>.1 <span class="token variable">$link</span>.1<span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/xz'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> lzmainfomake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>  /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span> lzmainfo <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/lzmainfo /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/lzmainfo /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> lzmainfo.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/lzmainfo'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> scriptsmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span> /usr/bin/install <span class="token parameter variable">-c</span> xzdiff xzgrep xzmore xzless <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin'</span><span class="token function">make</span>  install-exec-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">pair</span> <span class="token keyword">in</span> xzdiff-xzcmp xzgrep-xzegrep xzgrep-xzfgrep xzdiff-lzdiff xzdiff-lzcmp xzgrep-lzgrep xzgrep-lzegrep xzgrep-lzfgrep xzmore-lzmore xzless-lzless<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $pair <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/-.*$//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">link</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $pair <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/^.*-//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$link</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$target</span> <span class="token variable">$link</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> xzdiff.1 xzgrep.1 xzmore.1 xzless.1 <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1'</span><span class="token function">make</span>  install-data-hookmake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">pair</span> <span class="token keyword">in</span> xzdiff-xzcmp xzgrep-xzegrep xzgrep-xzfgrep xzdiff-lzdiff xzdiff-lzcmp xzgrep-lzgrep xzgrep-lzegrep xzgrep-lzfgrep xzmore-lzmore xzless-lzless<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $pair <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/-.*$//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">link</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $pair <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/^.*-//'</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token variable">`</span></span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">$link</span>.1 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token variable">$target</span>.1 <span class="token variable">$link</span>.1<span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-exec-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-data-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/src'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> pomake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/po'</span>installing cs.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/cs/LC_MESSAGES/xz.moinstalling de.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/de/LC_MESSAGES/xz.moinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/fr/LC_MESSAGES/xz.moinstalling it.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/it/LC_MESSAGES/xz.moinstalling pl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/pl/LC_MESSAGES/xz.moinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/locale/vi/LC_MESSAGES/xz.mo<span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token string">"xz"</span> <span class="token operator">=</span> <span class="token string">"gettext-tools"</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  /bin/mkdir <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/gettext/po<span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> Makefile.in.in remove-potcdate.sin quot.sed boldquot.sed en@quot.header en@boldquot.header insert-header.sin Rules-quot   Makevars.template<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./<span class="token variable">$file</span> <span class="token punctuation">\</span>                    /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/gettext/po/<span class="token variable">$file</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> Makevars<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/gettext/po/<span class="token variable">$file</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token builtin class-name">:</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/po'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> testsmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-exec-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-data-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2/tests'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-exec-am'</span><span class="token builtin class-name">.</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> AUTHORS COPYING COPYING.GPLv2 NEWS README THANKS TODO doc/faq.txt doc/history.txt doc/xz-file-format.txt doc/lzma-file-format.txt <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz/examples'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> doc/examples/00_README.txt doc/examples/01_compress_easy.c doc/examples/02_decompress.c doc/examples/03_compress_custom.c doc/examples/04_compress_easy_mt.c doc/examples/Makefile <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz/examples'</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz/examples_old'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> doc/examples_old/xz_pipe_comp.c doc/examples_old/xz_pipe_decomp.c <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/doc/xz/examples_old'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/xz-5.2.2'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3<span class="token function">tar</span> <span class="token parameter variable">-xf</span> zlib-1.2.11.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/zlib-1.2.11 <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp"</span> <span class="token parameter variable">--static</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -Checking <span class="token keyword">for</span> gcc<span class="token punctuation">..</span>.Building static library libz.a version <span class="token number">1.2</span>.11 with gcc.Checking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> off64_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> fseeko<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> strerror<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> stdarg.h<span class="token punctuation">..</span>. Yes.Checking whether to use vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span> or s<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. using vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span>.Checking <span class="token keyword">for</span> vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> stdio.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> <span class="token builtin class-name">return</span> value of vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> attribute<span class="token punctuation">(</span>visibility<span class="token punctuation">)</span> support<span class="token punctuation">..</span>. Yes.make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/zlib-1.2.11'</span>gcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> example.o test/example.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> adler32.o adler32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> crc32.o crc32.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> deflate.o deflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> infback.o infback.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inffast.o inffast.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inflate.o inflate.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> inftrees.o inftrees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> trees.o trees.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> zutil.o zutil.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> compress.o compress.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> uncompr.o uncompr.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzclose.o gzclose.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzlib.o gzlib.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzread.o gzread.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span>  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzwrite.o gzwrite.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> minigzip.o test/minigzip.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> example64.o test/example.cgcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> minigzip64.o test/minigzip.car rc libz.a adler32.o crc32.o deflate.o infback.o inffast.o inflate.o inftrees.o trees.o zutil.o compress.o uncompr.o gzclose.o gzlib.o gzread.o gzwrite.ogcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> example example.o -L. libz.agcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> minigzip minigzip.o -L. libz.agcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> example64 example64.o -L. libz.agcc <span class="token parameter variable">-O3</span> <span class="token parameter variable">-D_LARGEFILE64_SOURCE</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-DHAVE_HIDDEN</span> <span class="token parameter variable">-o</span> minigzip64 minigzip64.o -L. libz.amake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/zlib-1.2.11'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/zlib-1.2.11'</span><span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/libz.a<span class="token function">cp</span> libz.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/libz.a<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man3/zlib.3<span class="token function">cp</span> zlib.3 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man3<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/share/man/man3/zlib.3<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/pkgconfig/zlib.pc<span class="token function">cp</span> zlib.pc /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/pkgconfig<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib/pkgconfig/zlib.pc<span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/zlib.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/zconf.h<span class="token function">cp</span> zlib.h zconf.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include<span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/zlib.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include/zconf.hmake<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/zlib-1.2.11'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3<span class="token function">tar</span> <span class="token parameter variable">-xf</span> squashfs4.3.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/squashfs4.3/squashfs-tools <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token assign-left variable">EXTRA_CFLAGS</span><span class="token operator">=</span><span class="token string">"-I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include"</span> <span class="token punctuation">\</span>                <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib -static"</span> <span class="token parameter variable">-j</span> <span class="token number">16</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token assign-left variable">INSTALL_DIR</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin <span class="token function">install</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/squashfs4.3/squashfs-tools'</span>cc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> mksquashfs.o mksquashfs.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> read_fs.o read_fs.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> action.o action.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> swap.o swap.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> pseudo.o pseudo.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> compressor.o compressor.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> sort.o sort.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> progressbar.o progressbar.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> read_file.o read_file.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> info.o info.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> restore.o restore.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> process_fragments.o process_fragments.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> caches-queues-lists.o caches-queues-lists.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> gzip_wrapper.o gzip_wrapper.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> xattr.o xattr.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> read_xattrs.o read_xattrs.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquashfs.o unsquashfs.cmksquashfs.c: In <span class="token keyword">function</span> ‘create_inode’:mksquashfs.c:987:13: warning: In the GNU C Library, <span class="token string">"major"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"major"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"major"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.   unsigned int major <span class="token operator">=</span> major<span class="token punctuation">(</span>buf-<span class="token operator">&gt;</span>st_rdev<span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                            mksquashfs.c:988:13: warning: In the GNU C Library, <span class="token string">"minor"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"minor"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"minor"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.   unsigned int minor <span class="token operator">=</span> minor<span class="token punctuation">(</span>buf-<span class="token operator">&gt;</span>st_rdev<span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                            mksquashfs.c:1011:13: warning: In the GNU C Library, <span class="token string">"major"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"major"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"major"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.   unsigned int major <span class="token operator">=</span> major<span class="token punctuation">(</span>buf-<span class="token operator">&gt;</span>st_rdev<span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                            mksquashfs.c:1012:13: warning: In the GNU C Library, <span class="token string">"minor"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"minor"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"minor"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.   unsigned int minor <span class="token operator">=</span> minor<span class="token punctuation">(</span>buf-<span class="token operator">&gt;</span>st_rdev<span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                                                                                            mksquashfs.c: In <span class="token keyword">function</span> ‘dir_scan2’:mksquashfs.c:3528:13: warning: In the GNU C Library, <span class="token string">"makedev"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"makedev"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"makedev"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.    pseudo_ent-<span class="token operator">&gt;</span>dev-<span class="token operator">&gt;</span>minor<span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~~~~~~~~~~                                                                                                                                                                                                            cc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquash-1.o unsquash-1.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquash-2.o unsquash-2.cunsquashfs.c: In <span class="token keyword">function</span> ‘create_inode’:unsquashfs.c:1129:13: warning: In the GNU C Library, <span class="token string">"makedev"</span> is defined by <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span>. For historical compatibility, it is currently defined by <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span> as well, but we plan to remove this soon. To use <span class="token string">"makedev"</span>, include <span class="token operator">&lt;</span>sys/sysmacros.h<span class="token operator">&gt;</span> directly. If you did not intend to use a system-defined macro <span class="token string">"makedev"</span>, you should undefine it after including <span class="token operator">&lt;</span>sys/types.h<span class="token operator">&gt;</span>.       i-<span class="token operator">&gt;</span>data <span class="token operator">&amp;</span> 0xff<span class="token punctuation">))</span> <span class="token operator">==</span> -1<span class="token punctuation">)</span> <span class="token punctuation">{</span>             ^~~~~~~~~~~~~~~~~~~                                                                                                                                                                                                        cc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquash-3.o unsquash-3.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquash-4.o unsquash-4.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquashfs_info.o unsquashfs_info.ccc <span class="token parameter variable">-O2</span> -I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/include -I. <span class="token parameter variable">-D_FILE_OFFSET_BITS</span><span class="token operator">=</span><span class="token number">64</span> <span class="token parameter variable">-D_LARGEFILE_SOURCE</span> <span class="token parameter variable">-D_GNU_SOURCE</span> <span class="token parameter variable">-DCOMP_DEFAULT</span><span class="token operator">=</span><span class="token punctuation">\</span>"gzip<span class="token punctuation">\</span>" <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-DGZIP_SUPPORT</span> <span class="token parameter variable">-DXATTR_SUPPORT</span> <span class="token parameter variable">-DXATTR_DEFAULT</span>   <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> unsquashfs_xattr.o unsquashfs_xattr.ccc -L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib <span class="token parameter variable">-static</span>  unsquashfs.o unsquash-1.o unsquash-2.o unsquash-3.o unsquash-4.o swap.o compressor.o unsquashfs_info.o gzip_wrapper.o read_xattrs.o unsquashfs_xattr.o <span class="token parameter variable">-lpthread</span> <span class="token parameter variable">-lm</span> <span class="token parameter variable">-lz</span> <span class="token parameter variable">-o</span> unsquashfsunsquashfs.o: In <span class="token keyword">function</span> <span class="token variable"><span class="token variable">`</span>print_filename<span class="token string">':unsquashfs.c:(.text+0xde6): warning: Using '</span>getgrgid<span class="token string">' in statically linked applications requires at runtime the shared libraries from the glibc version used for linkingunsquashfs.c:(.text+0xdd2): warning: Using '</span>getpwuid' <span class="token keyword">in</span> statically linked applications requires at runtime the shared libraries from the glibc version used <span class="token keyword">for</span> linkingcc -L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/lib <span class="token parameter variable">-static</span>  mksquashfs.o read_fs.o action.o swap.o pseudo.o compressor.o sort.o progressbar.o read_file.o info.o restore.o process_fragments.o caches-queues-lists.o gzip_wrapper.o xattr.o read_xattrs.o <span class="token parameter variable">-lpthread</span> <span class="token parameter variable">-lm</span> <span class="token parameter variable">-lz</span> <span class="token parameter variable">-o</span> mksquashfsmksquashfs.o: In <span class="token keyword">function</span> <span class="token variable">`</span></span>write_filesystem_tables<span class="token string">':mksquashfs.c:(.text+0x92bc): warning: Using '</span>getgrgid<span class="token string">' in statically linked applications requires at runtime the shared libraries from the glibc version used for linkingmksquashfs.o: In function `main'</span><span class="token builtin class-name">:</span>mksquashfs.c:<span class="token punctuation">(</span>.text.startup+0x20d2<span class="token punctuation">)</span>: warning: Using <span class="token string">'getgrnam'</span> <span class="token keyword">in</span> statically linked applications requires at runtime the shared libraries from the glibc version used <span class="token keyword">for</span> linkingmksquashfs.c:<span class="token punctuation">(</span>.text.startup+0x1f93<span class="token punctuation">)</span>: warning: Using <span class="token string">'getpwnam'</span> <span class="token keyword">in</span> statically linked applications requires at runtime the shared libraries from the glibc version used <span class="token keyword">for</span> linkingmksquashfs.o: In <span class="token keyword">function</span> <span class="token variable"><span class="token variable">`</span>write_filesystem_tables<span class="token string">':mksquashfs.c:(.text+0x922c): warning: Using '</span>getpwuid<span class="token string">' in statically linked applications requires at runtime the shared libraries from the glibc version used for linkingmake[2]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/squashfs4.3/squashfs-tools<span class="token string">'make[2]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/squashfs4.3/squashfs-tools<span class="token string">'mkdir -p /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bincp mksquashfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bincp unsquashfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/binmake[2]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/squashfs4.3/squashfs-tools<span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3install -vs -t /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3 --strip-program=strip /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/mksquashfs'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/tmp/bin/mksquashfs<span class="token string">' -&gt; '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/mksquashfs<span class="token string">'make[1]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3<span class="token string">'cp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/squashfs4.3/mksquashfs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pcmake -C /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/make[1]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool<span class="token string">'rm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7 -rf;tar -xzf lzma-4.32.7.tar.gz;pushd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/; \        chmod 777 ./configure; \        ./configure;\        make; \popd;\cp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzma/lzma /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_toolchecking if debugging code should be compiled... nochecking for a BSD-compatible install... /usr/bin/install -cchecking whether build environment is sane... yeschecking for a thread-safe mkdir -p... /bin/mkdir -pchecking for gawk... gawkchecking whether make sets $(MAKE)... yeschecking for g++... g++checking for C++ compiler default output file name... a.outchecking whether the C++ compiler works... yeschecking whether we are cross compiling... nochecking for suffix of executables...checking for suffix of object files... ochecking whether we are using the GNU C++ compiler... yeschecking whether g++ accepts -g... yeschecking for style of include used by make... GNUchecking dependency style of g++... gcc3checking for gcc... gccchecking whether we are using the GNU C compiler... yeschecking whether gcc accepts -g... yeschecking for gcc option to accept ISO C89... none neededchecking dependency style of gcc... gcc3checking how to run the C preprocessor... gcc -Echecking for a BSD-compatible install... /usr/bin/install -cchecking whether ln -s works... yeschecking whether make sets $(MAKE)... (cached) yeschecking build system type... x86_64-unknown-linux-gnuchecking host system type... x86_64-unknown-linux-gnuchecking for a sed that does not truncate output... /bin/sedchecking for grep that handles long lines and -e... /bin/grepchecking for egrep... /bin/grep -Echecking for ld used by gcc... /usr/bin/ldchecking if the linker (/usr/bin/ld) is GNU ld... yeschecking for /usr/bin/ld option to reload object files... -rchecking for BSD-compatible nm... /usr/bin/nm -Bchecking how to recognize dependent libraries... pass_allchecking for ANSI C header files... yeschecking for sys/types.h... yeschecking for sys/stat.h... yeschecking for stdlib.h... yeschecking for string.h... yeschecking for memory.h... yeschecking for strings.h... yeschecking for inttypes.h... yeschecking for stdint.h... yeschecking for unistd.h... yeschecking dlfcn.h usability... yeschecking dlfcn.h presence... yeschecking for dlfcn.h... yeschecking how to run the C++ preprocessor... g++ -Echecking whether we are using the GNU Fortran 77 compiler... nochecking whether no accepts -g... nochecking the maximum length of command line arguments... 1572864checking command to parse /usr/bin/nm -B output from gcc object... okchecking for objdir... .libschecking for ar... archecking for ranlib... ranlibchecking for strip... stripchecking if gcc supports -fno-rtti -fno-exceptions... nochecking for gcc option to produce PIC... -fPICchecking if gcc PIC flag -fPIC works... yeschecking if gcc static flag -static works... yeschecking if gcc supports -c -o file.o... yeschecking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yeschecking whether -lc should be explicitly linked in... nochecking dynamic linker characteristics... GNU/Linux ld.sochecking how to hardcode library paths into programs... immediatechecking whether stripping libraries is possible... yeschecking if libtool supports shared libraries... yeschecking whether to build shared libraries... yeschecking whether to build static libraries... yesconfigure: creating libtoolappending configuration tag "CXX" to libtoolchecking for ld used by g++... /usr/bin/ld -m elf_x86_64checking if the linker (/usr/bin/ld -m elf_x86_64) is GNU ld... yeschecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yeschecking for g++ option to produce PIC... -fPICchecking if g++ PIC flag -fPIC works... yeschecking if g++ static flag -static works... yeschecking if g++ supports -c -o file.o... yeschecking whether the g++ linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yeschecking dynamic linker characteristics... GNU/Linux ld.so(cached) (cached) checking how to hardcode library paths into programs... immediateappending configuration tag "F77" to libtoolchecking for ANSI C header files... (cached) yeschecking fcntl.h usability... yeschecking fcntl.h presence... yeschecking for fcntl.h... yeschecking for inttypes.h... (cached) yeschecking limits.h usability... yeschecking limits.h presence... yeschecking for limits.h... yeschecking stddef.h usability... yeschecking stddef.h presence... yeschecking for stddef.h... yeschecking for stdlib.h... (cached) yeschecking for string.h... (cached) yeschecking sys/time.h usability... yeschecking sys/time.h presence... yeschecking for sys/time.h... yeschecking for unistd.h... (cached) yeschecking utime.h usability... yeschecking utime.h presence... yeschecking for utime.h... yeschecking errno.h usability... yeschecking errno.h presence... yeschecking for errno.h... yeschecking for stdbool.h that conforms to C99... yeschecking for _Bool... yeschecking whether time.h and sys/time.h may both be included... yeschecking for an ANSI C-conforming const... yeschecking for inline... inlinechecking for mode_t... yeschecking for off_t... yeschecking for size_t... yeschecking for int_fast8_t... yeschecking for uint_fast8_t... yeschecking for int_fast16_t... yeschecking for uint_fast16_t... yeschecking for int_fast32_t... yeschecking for uint_fast32_t... yeschecking for int_fast64_t... yeschecking for uint_fast64_t... yeschecking for special C compiler options needed for large files... nochecking for _FILE_OFFSET_BITS value needed for large files... nochecking for memmove... yeschecking for strdup... yeschecking for memset... yeschecking for strerror... yeschecking for strrchr... yeschecking for strtol... yeschecking for utime... yeschecking for utimes... yeschecking for futimes... yeschecking for futimesat... yeschecking for snprintf... yeschecking getopt.h usability... yeschecking getopt.h presence... yeschecking for getopt.h... yeschecking for getopt_long_only... yeschecking whether optreset is declared... nochecking for working GNU getopt function... yeschecking whether getenv is declared... yesconfigure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating src/Makefileconfig.status: creating src/liblzmadec/Makefileconfig.status: creating src/lzmadec/Makefileconfig.status: creating src/lzmainfo/Makefileconfig.status: creating src/lzma/Makefileconfig.status: creating src/scripts/Makefileconfig.status: creating src/sdk/7zip/Common/Makefileconfig.status: creating src/sdk/7zip/Compress/LZ/Makefileconfig.status: creating src/sdk/7zip/Compress/LZMA/Makefileconfig.status: creating src/sdk/7zip/Compress/LZMA_C/Makefileconfig.status: creating src/sdk/7zip/Compress/Makefileconfig.status: creating src/sdk/7zip/Compress/RangeCoder/Makefileconfig.status: creating src/sdk/7zip/Makefileconfig.status: creating src/sdk/Common/Makefileconfig.status: creating src/sdk/Makefileconfig.status: creating tests/Makefileconfig.status: creating config.hconfig.status: executing depfiles commandsmake[2]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7<span class="token string">'make  all-recursivemake[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7<span class="token string">'Making all in srcmake[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src<span class="token string">'Making all in liblzmadecmake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/liblzmadec'/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>     <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> main.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/main.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> main.lo main.c<span class="token function">mkdir</span> .libs gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> main.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/main.Tpo <span class="token parameter variable">-c</span> main.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/main.o gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> main.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/main.Tpo <span class="token parameter variable">-c</span> main.c <span class="token parameter variable">-o</span> main.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/main.Tpo .deps/main.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>     <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> buffer.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/buffer.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> buffer.lo buffer.c gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> buffer.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/buffer.Tpo <span class="token parameter variable">-c</span> buffer.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/buffer.o gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> buffer.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/buffer.Tpo <span class="token parameter variable">-c</span> buffer.c <span class="token parameter variable">-o</span> buffer.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/buffer.Tpo .deps/buffer.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>compile gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>     <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> io.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/io.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> io.lo io.c gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> io.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/io.Tpo <span class="token parameter variable">-c</span> io.c  <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> <span class="token parameter variable">-o</span> .libs/io.o gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> io.lo <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/io.Tpo <span class="token parameter variable">-c</span> io.c <span class="token parameter variable">-o</span> io.o <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/io.Tpo .deps/io.Plo/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool <span class="token parameter variable">--tag</span><span class="token operator">=</span>CC   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link gcc  <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> -version-info <span class="token number">0</span>:0:0  <span class="token parameter variable">-o</span> liblzmadec.la <span class="token parameter variable">-rpath</span> /usr/local/lib main.lo buffer.lo io.logcc <span class="token parameter variable">-shared</span>  .libs/main.o .libs/buffer.o .libs/io.o   -Wl,-soname -Wl,liblzmadec.so.0 <span class="token parameter variable">-o</span> .libs/liblzmadec.so.0.0.0<span class="token punctuation">(</span>cd .libs <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzmadec.so.0 <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> liblzmadec.so.0.0.0 liblzmadec.so.0<span class="token punctuation">)</span><span class="token punctuation">(</span>cd .libs <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> liblzmadec.so <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> liblzmadec.so.0.0.0 liblzmadec.so<span class="token punctuation">)</span>ar cru .libs/liblzmadec.a  main.o buffer.o io.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib .libs/liblzmadec.acreating liblzmadec.la(cd .libs &amp;&amp; rm -f liblzmadec.la &amp;&amp; ln -s ../liblzmadec.la liblzmadec.la)make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/liblzmadec<span class="token string">'Making all in lzmadecmake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzmadec<span class="token string">'gcc -DHAVE_CONFIG_H -I. -I../..  -I../../src/liblzmadec   -g -O2 -MT lzmadec.o -MD -MP -MF .deps/lzmadec.Tpo -c -o lzmadec.o lzmadec.cmv -f .deps/lzmadec.Tpo .deps/lzmadec.Po/bin/sh ../../libtool --tag=CC   --mode=link gcc  -g -O2 -static  -o lzmadec lzmadec.o ../../src/liblzmadec/liblzmadec.lamkdir .libsgcc -g -O2 -o lzmadec lzmadec.o  ../../src/liblzmadec/.libs/liblzmadec.amake[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzmadec<span class="token string">'Making all in lzmainfomake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzmainfo<span class="token string">'gcc -DHAVE_CONFIG_H -I. -I../..  -I../../src/liblzmadec   -g -O2 -MT lzmainfo.o -MD -MP -MF .deps/lzmainfo.Tpo -c -o lzmainfo.o lzmainfo.clzmainfo.c: In function ‘lzmainfo’:lzmainfo.c:72:16: warning: format ‘%llu’ expects argument of type ‘long long unsigned int’, but argument 2 has type ‘uint_fast64_t {aka long unsigned int}’ [-Wformat=]    printf ("%llu MB (%llu bytes)",             ~~~^             %lu      (info.uncompressed_size + 512 * 1024)      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~      / (1024 * 1024),      ~~~~~~~~~~~~~~~lzmainfo.c:72:25: warning: format ‘%llu’ expects argument of type ‘long long unsigned int’, but argument 3 has type ‘uint_fast64_t {aka long unsigned int}’ [-Wformat=]    printf ("%llu MB (%llu bytes)",                      ~~~^                      %lulzmainfo.c:75:6:      info.uncompressed_size);      ~~~~~~~~~~~~~~~~~~~~~~lzmainfo.c:76:11: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 2 has type ‘uint_fast32_t {aka long unsigned int}’ [-Wformat=]   printf ("\nDictionary size:               "           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~lzmainfo.c:81:5:     (info.dictionary_size + 512 * 1024)     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     / (1024 * 1024),     ~~~~~~~~~~~~~~~lzmainfo.c:77:7: note: format string is defined here     "%u MB (2^%u bytes)\n"      ~^      %lulzmainfo.c:76:11: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 3 has type ‘uint_fast32_t {aka long unsigned int}’ [-Wformat=]   printf ("\nDictionary size:               "           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~lzmainfo.c:83:5:     Log2 (info.dictionary_size),     ~~~~~~~~~~~~~~~~~~~~~~~~~~~lzmainfo.c:77:16: note: format string is defined here     "%u MB (2^%u bytes)\n"               ~^               %lumv -f .deps/lzmainfo.Tpo .deps/lzmainfo.Po/bin/sh ../../libtool --tag=CC   --mode=link gcc  -g -O2 -static  -o lzmainfo lzmainfo.o ../../src/liblzmadec/liblzmadec.lamkdir .libsgcc -g -O2 -o lzmainfo lzmainfo.o  ../../src/liblzmadec/.libs/liblzmadec.amake[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzmainfo<span class="token string">'Making all in sdkmake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk<span class="token string">'Making all in Commonmake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/Common'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> Alloc.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/Alloc.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> Alloc.o Alloc.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/Alloc.Tpo .deps/Alloc.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> C_FileIO.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/C_FileIO.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> C_FileIO.o C_FileIO.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/C_FileIO.Tpo .deps/C_FileIO.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> CRC.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/CRC.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> CRC.o CRC.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/CRC.Tpo .deps/CRC.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libCommon.aar cru libCommon.a Alloc.o C_FileIO.o CRC.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libCommon.amake[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/Common<span class="token string">'Making all in 7zipmake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip<span class="token string">'Making all in Commonmake[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Common'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> InBuffer.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/InBuffer.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> InBuffer.o InBuffer.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/InBuffer.Tpo .deps/InBuffer.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> OutBuffer.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/OutBuffer.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> OutBuffer.o OutBuffer.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/OutBuffer.Tpo .deps/OutBuffer.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> FileStreams.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/FileStreams.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> FileStreams.o FileStreams.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/FileStreams.Tpo .deps/FileStreams.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> StreamUtils.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/StreamUtils.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> StreamUtils.o StreamUtils.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/StreamUtils.Tpo .deps/StreamUtils.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libCommon.aar cru libCommon.a InBuffer.o OutBuffer.o FileStreams.o StreamUtils.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libCommon.amake[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Common<span class="token string">'Making all in Compressmake[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress<span class="token string">'Making all in RangeCodermake[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/RangeCoder'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> RangeCoderBit.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/RangeCoderBit.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> RangeCoderBit.o RangeCoderBit.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/RangeCoderBit.Tpo .deps/RangeCoderBit.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libRangeCoder.aar cru libRangeCoder.a RangeCoderBit.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libRangeCoder.amake[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/RangeCoder<span class="token string">'Making all in LZmake[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZ'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> LZInWindow.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/LZInWindow.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> LZInWindow.o LZInWindow.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/LZInWindow.Tpo .deps/LZInWindow.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> LZOutWindow.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/LZOutWindow.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> LZOutWindow.o LZOutWindow.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/LZOutWindow.Tpo .deps/LZOutWindow.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libLZ.aar cru libLZ.a LZInWindow.o LZOutWindow.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libLZ.amake[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZ<span class="token string">'Making all in LZMAmake[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZMA'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> LZMADecoder.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/LZMADecoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> LZMADecoder.o LZMADecoder.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/LZMADecoder.Tpo .deps/LZMADecoder.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> LZMAEncoder.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/LZMAEncoder.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> LZMAEncoder.o LZMAEncoder.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/LZMAEncoder.Tpo .deps/LZMAEncoder.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libLZMA.aar cru libLZMA.a LZMADecoder.o LZMAEncoder.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libLZMA.amake[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZMA<span class="token string">'Making all in LZMA_Cmake[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZMA_C'gcc <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>    <span class="token parameter variable">-D_LZMA_IN_CB</span> <span class="token parameter variable">-D_LZMA_OUT_READ</span> <span class="token parameter variable">-D_LZMA_SYSTEM_SIZE_T</span> <span class="token parameter variable">-D_LZMA_PROB32</span> <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> LzmaDecode.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/LzmaDecode.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> LzmaDecode.o LzmaDecode.c<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/LzmaDecode.Tpo .deps/LzmaDecode.Po<span class="token function">rm</span> <span class="token parameter variable">-f</span> libLZMA_C.aar cru libLZMA_C.a LzmaDecode.oar: <span class="token variable">`</span></span>u<span class="token string">' modifier ignored since `D'</span> is the default <span class="token punctuation">(</span>see <span class="token variable"><span class="token variable">`</span>U<span class="token string">')ranlib libLZMA_C.amake[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress/LZMA_C<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress<span class="token string">'make[8]: Nothing to be done for '</span>all-am<span class="token string">'.make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress<span class="token string">'make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip/Compress<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip<span class="token string">'make[7]: Nothing to be done for '</span>all-am<span class="token string">'.make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip<span class="token string">'make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk/7zip<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk<span class="token string">'make[6]: Nothing to be done for '</span>all-am<span class="token string">'.make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk<span class="token string">'make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/sdk<span class="token string">'Making all in lzmamake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzma<span class="token string">'make  all-ammake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzma'g++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> lzmp.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/lzmp.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> lzmp.o lzmp.cpplzmp.cpp: In <span class="token keyword">function</span> ‘int main<span class="token punctuation">(</span>int, char**<span class="token punctuation">)</span>’:lzmp.cpp:925:5: warning: ignoring <span class="token builtin class-name">return</span> value of ‘int fchown<span class="token punctuation">(</span>int, __uid_t, __gid_t<span class="token punctuation">)</span>’, declared with attribute warn_unused_result <span class="token punctuation">[</span>-Wunused-result<span class="token punctuation">]</span>     <span class="token punctuation">(</span>void<span class="token punctuation">)</span>fchown<span class="token punctuation">(</span>outhandle, in_stats.st_uid, -1<span class="token punctuation">)</span><span class="token punctuation">;</span>     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/lzmp.Tpo .deps/lzmp.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> C_FileIO.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/C_FileIO.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> C_FileIO.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/Common/C_FileIO.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/Common/C_FileIO.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/C_FileIO.Tpo .deps/C_FileIO.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> CRC.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/CRC.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> CRC.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/Common/CRC.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/Common/CRC.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/CRC.Tpo .deps/CRC.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> Alloc.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/Alloc.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> Alloc.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/Common/Alloc.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/Common/Alloc.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/Alloc.Tpo .deps/Alloc.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> FileStreams.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/FileStreams.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> FileStreams.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/7zip/Common/FileStreams.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Common/FileStreams.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/FileStreams.Tpo .deps/FileStreams.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> InBuffer.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/InBuffer.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> InBuffer.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/7zip/Common/InBuffer.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Common/InBuffer.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/InBuffer.Tpo .deps/InBuffer.Pog++ <span class="token parameter variable">-DHAVE_CONFIG_H</span> -I. -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token parameter variable">-DCOMPRESS_MF_BT</span> <span class="token parameter variable">-DCOMPRESS_MF_BT4</span> <span class="token parameter variable">-DCOMPRESS_MF_HC</span> -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk -I<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip   <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-MT</span> OutBuffer.o <span class="token parameter variable">-MD</span> <span class="token parameter variable">-MP</span> <span class="token parameter variable">-MF</span> .deps/OutBuffer.Tpo <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> OutBuffer.o <span class="token variable">`</span></span><span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">'../../src/sdk/7zip/Common/OutBuffer.cpp'</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">'./'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Common/OutBuffer.cpp<span class="token function">mv</span> <span class="token parameter variable">-f</span> .deps/OutBuffer.Tpo .deps/OutBuffer.Po/bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libtool <span class="token parameter variable">--tag</span><span class="token operator">=</span>CXX   <span class="token parameter variable">--mode</span><span class="token operator">=</span>link g++  <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span>   <span class="token parameter variable">-o</span> lzma lzmp.o C_FileIO.o CRC.o Alloc.o FileStreams.o InBuffer.o OutBuffer.o <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/LZMA/libLZMA.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/LZ/libLZ.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Common/libCommon.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/RangeCoder/libRangeCoder.a<span class="token function">mkdir</span> .libsg++ <span class="token parameter variable">-g</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> lzma lzmp.o C_FileIO.o CRC.o Alloc.o FileStreams.o InBuffer.o OutBuffer.o  <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/LZMA/libLZMA.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/LZ/libLZ.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Common/libCommon.a <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/src/sdk/7zip/Compress/RangeCoder/libRangeCoder.amake<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzma'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/lzma'</span>Making all <span class="token keyword">in</span> scriptsmake<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src/scripts'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/src'</span>Making all <span class="token keyword">in</span> testsmake<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7/tests'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma-4.32.7'</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_toolmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/lzma_tool/lzma /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils'</span><span class="token function">tar</span> xf ext4_utils.tar.bz2 <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/ext4_utils<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span><span class="token punctuation">;</span><span class="token function">cp</span> make_ext4fs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/bin<span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token builtin class-name">cd</span> -make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/ext4_utils'</span>gcc -I. <span class="token parameter variable">-c</span> make_ext4fs_main.c <span class="token parameter variable">-o</span> make_ext4fs_main.ogcc -I. <span class="token parameter variable">-c</span> ext4fixup.c <span class="token parameter variable">-o</span> ext4fixup.ogcc -I. <span class="token parameter variable">-c</span> ext4_utils.c <span class="token parameter variable">-o</span> ext4_utils.ogcc -I. <span class="token parameter variable">-c</span> output_file.c <span class="token parameter variable">-o</span> output_file.ogcc -I. <span class="token parameter variable">-c</span> allocate.c <span class="token parameter variable">-o</span> allocate.ogcc -I. <span class="token parameter variable">-c</span> sparse_crc32.c <span class="token parameter variable">-o</span> sparse_crc32.ogcc -I. <span class="token parameter variable">-c</span> make_ext4fs.c <span class="token parameter variable">-o</span> make_ext4fs.omake_ext4fs.c: In <span class="token keyword">function</span> ‘build_directory_structure’:make_ext4fs.c:166:18: warning: implicit declaration of <span class="token keyword">function</span> ‘make_chrdev’<span class="token punctuation">;</span> did you mean ‘makedev’? <span class="token punctuation">[</span>-Wimplicit-function-declaration<span class="token punctuation">]</span>    entry_inode <span class="token operator">=</span> make_chrdev<span class="token punctuation">(</span>dentries<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.full_path, <span class="token punctuation">(</span>u64<span class="token punctuation">)</span>dentries<span class="token punctuation">[</span>i<span class="token punctuation">]</span>.size<span class="token punctuation">)</span><span class="token punctuation">;</span>                  ^~~~~~~~~~~                  makedevmake_ext4fs.c: In <span class="token keyword">function</span> ‘make_ext4fs’:make_ext4fs.c:273:42: warning: passing argument <span class="token number">3</span> of ‘make_ext4fs_internal’ discards ‘const’ qualifier from pointer target <span class="token builtin class-name">type</span> <span class="token punctuation">[</span>-Wdiscarded-qualifiers<span class="token punctuation">]</span>  status <span class="token operator">=</span> make_ext4fs_internal<span class="token punctuation">(</span>fd, NULL, mountpoint, NULL, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">1</span>, <span class="token number">0</span>, sehnd<span class="token punctuation">)</span><span class="token punctuation">;</span>                                          ^~~~~~~~~~In <span class="token function">file</span> included from make_ext4fs.c:17:0:make_ext4fs.h:35:5: note: expected ‘char *’ but argument is of <span class="token builtin class-name">type</span> ‘const char *’ int make_ext4fs_internal<span class="token punctuation">(</span>int fd, const char *directory,     ^~~~~~~~~~~~~~~~~~~~gcc -I. <span class="token parameter variable">-c</span> contents.c <span class="token parameter variable">-o</span> contents.ogcc -I. <span class="token parameter variable">-c</span> extent.c <span class="token parameter variable">-o</span> extent.ogcc -I. <span class="token parameter variable">-c</span> indirect.c <span class="token parameter variable">-o</span> indirect.ogcc -I. <span class="token parameter variable">-c</span> backed_block.c <span class="token parameter variable">-o</span> backed_block.ogcc -I. <span class="token parameter variable">-c</span> uuid.c <span class="token parameter variable">-o</span> uuid.ogcc -I. <span class="token parameter variable">-c</span> wipe.c <span class="token parameter variable">-o</span> wipe.ogcc -I. <span class="token parameter variable">-c</span> sha1.c <span class="token parameter variable">-o</span> sha1.ogcc make_ext4fs_main.o ext4fixup.o ext4_utils.o output_file.o allocate.o sparse_crc32.o make_ext4fs.o contents.o extent.o indirect.o backed_block.o uuid.o wipe.o sha1.o <span class="token parameter variable">-o</span> make_ext4fs -I. <span class="token parameter variable">-lz</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/ext4_utils'</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utilsmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/ext4_utils/bin/make_ext4fs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/nand_production/fmc_nand_ecc_product_v100make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/nand_production/fmc_nand_ecc_product_v100'</span>cc  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> nandc_ecc.o nandc_ecc.cnandc_ecc.c:219:1: warning: <span class="token builtin class-name">return</span> <span class="token builtin class-name">type</span> defaults to ‘int’ <span class="token punctuation">[</span>-Wimplicit-int<span class="token punctuation">]</span> lfsr_init<span class="token punctuation">(</span>int len, char *poly, int value<span class="token punctuation">)</span> ^~~~~~~~~cc  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> oob_config_v100.o oob_config_v100.ccc  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> main.o main.cmain.c: In <span class="token keyword">function</span> ‘main’:main.c:87:13: warning: implicit declaration of <span class="token keyword">function</span> ‘strtol’<span class="token punctuation">;</span> did you mean ‘strtok’? <span class="token punctuation">[</span>-Wimplicit-function-declaration<span class="token punctuation">]</span>  pagetype <span class="token operator">=</span> strtol<span class="token punctuation">(</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>, NULL, <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             ^~~~~~             strtokcc  <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> nandc_random.o nandc_random.ccc <span class="token parameter variable">-static</span> <span class="token parameter variable">-o</span> nand_product nandc_ecc.o oob_config_v100.o main.o nandc_random.omake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/nand_production/fmc_nand_ecc_product_v100'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/nand_production/fmc_nand_ecc_product_v100/nand_product /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs distcleanmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs'</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13 -rf<span class="token punctuation">;</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin -rf<span class="token punctuation">;</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs'</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0 cleanmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0'</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> bin<span class="token function">rm</span> <span class="token parameter variable">-f</span>  source/hi_message.o source/hi_thread.o source/hi_dbg.o source/cmdshell.o source/argparser.o source/strfunc.o source/memmap.o<span class="token function">rm</span> <span class="token parameter variable">-f</span> source/*.omake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0'</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7 cleanmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7'</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7'</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb distcleanmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb'</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1 -rf<span class="token punctuation">;</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0 -rf<span class="token punctuation">;</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst -rf<span class="token punctuation">;</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin -rf<span class="token punctuation">;</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-arm-himix200-linux -rf<span class="token punctuation">;</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb'</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils distcleanmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils'</span><span class="token function">rm</span> mtd-utils-2.0.2 -rf<span class="token punctuation">;</span><span class="token function">rm</span> bin -rf<span class="token punctuation">;</span><span class="token function">rm</span> zlib-1.2.11 -rf<span class="token punctuation">;</span><span class="token function">rm</span> libuuid-1.0.3 -rf<span class="token punctuation">;</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils'</span>---------task <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> build tools <span class="token function">which</span> run on board<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogsmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs'</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13 -rf<span class="token punctuation">;</span><span class="token function">tar</span> <span class="token parameter variable">-xzf</span> e2fsprogs-1.42.13.tar.gz<span class="token punctuation">;</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13/bin/<span class="token punctuation">;</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin/<span class="token punctuation">;</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13/<span class="token punctuation">;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13/bin <span class="token punctuation">\</span>        --disable-tls --disable-defrag <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span>  <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">cp</span> bin/sbin/mkfs.ext2 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin -rf<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">cp</span> bin/sbin/mkfs.ext3 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin -rf<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">cp</span> bin/sbin/mkfs.ext4 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin -rf<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">cp</span> bin/sbin/mke2fs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin -rf<span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/e2fsprogs-1.42.13 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogsconfigure: WARNING: using cross tools not prefixed with <span class="token function">host</span> triplet~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogsmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs'</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/e2fsprogs/bin/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0'</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hi_message.o"</span> <span class="token string">"source/common/hi_message.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hi_thread.o"</span> <span class="token string">"source/common/hi_thread.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hi_dbg.o"</span> <span class="token string">"source/common/hi_dbg.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/cmdshell.o"</span> <span class="token string">"source/utils/cmdshell.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/argparser.o"</span> <span class="token string">"source/utils/argparser.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/strfunc.o"</span> <span class="token string">"source/utils/strfunc.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/memmap.o"</span> <span class="token string">"source/utils/memmap.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/himd.o"</span> <span class="token string">"source/tools/himd.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/himm.o"</span> <span class="token string">"source/tools/himm.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/himc.o"</span> <span class="token string">"source/tools/himc.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hivd.o"</span> <span class="token string">"source/tools/hivd.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hiddrs.o"</span> <span class="token string">"source/tools/hiddrs.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/hii2c.o"</span> <span class="token string">"source/tools/hii2c.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/i2c_ops.o"</span> <span class="token string">"source/tools/i2c_ops.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/ssp_rw.o"</span> <span class="token string">"source/tools/ssp_rw.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-Wall</span> <span class="token parameter variable">-Wunused</span>  -mlittle-endian <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-g3</span>  <span class="token parameter variable">-Iinclude</span> -Iinclude/api -Iinclude/common -Iinclude/driver -Iinclude/message -Iinclude/mmf -Iinclude/os/linux -Iinclude/tools/zsptools -Iinclude/utils -Idriver/include  <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-D_CPU</span> <span class="token parameter variable">-DBVT_I2C</span> <span class="token parameter variable">-D__LINUX_ARM_ARCH__</span><span class="token operator">=</span><span class="token number">7</span>  <span class="token parameter variable">-mtune</span><span class="token operator">=</span>arm9tdmi  <span class="token parameter variable">-DTARGET_ARM</span> <span class="token parameter variable">-Dhi3516dv300</span>  <span class="token parameter variable">-c</span>  <span class="token parameter variable">-w</span> <span class="token parameter variable">-o</span> <span class="token string">"source/btools.o"</span> <span class="token string">"source/tools/btools.c"</span>arm-himix200-linux-gcc <span class="token parameter variable">-o</span> <span class="token string">"btools"</span>  source/hi_message.o source/hi_thread.o source/hi_dbg.o source/cmdshell.o source/argparser.o source/strfunc.o source/memmap.o   <span class="token parameter variable">-lpthread</span> <span class="token parameter variable">-lrt</span>  <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span>   source/btools.o  source/himd.o source/himm.o source/himc.o source/hivd.o source/hiddrs.o source/hii2c.o source/i2c_ops.o source/ssp_rw.oarm-himix200-linux-strip btools<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools himd<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools himd.l<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools himm<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools himc<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools hiddrs<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools i2c_read<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools i2c_write<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools ssp_read<span class="token function">ln</span> <span class="token parameter variable">-s</span> btools ssp_write<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> bin/<span class="token function">mv</span> hi* bin<span class="token function">mv</span> i2c* bin<span class="token function">mv</span> ssp* bin<span class="token function">mv</span> btools binmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0'</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7'</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-d</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7 <span class="token operator">||</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7<span class="token function">tar</span> <span class="token parameter variable">-xzf</span> eudev-3.2.7.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp<span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7 <span class="token operator">&amp;&amp;</span> ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/ <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span><span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> --disable-extras --disable-introspection <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7 <span class="token punctuation">\</span>        <span class="token assign-left variable">USE_STATIC</span><span class="token operator">=</span>false<span class="token punctuation">\</span>        <span class="token assign-left variable">OSDRV_CROSS</span><span class="token operator">=</span>arm-himix200-linux <span class="token operator">&amp;&gt;</span>/dev/null<span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7/udevd'</span> -<span class="token operator">&gt;</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/rootfs/bin/udevd'</span><span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/tmp/eudev-3.2.7/udevadm'</span> -<span class="token operator">&gt;</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/rootfs/bin/udevadm'</span><span class="token function">tar</span> <span class="token parameter variable">-xjf</span> rootfs.tar.bz2 <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7'</span><span class="token function">cp</span> <span class="token parameter variable">-af</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/eudev-3.2.7/rootfs/. /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/<span class="token function">tar</span> xf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1.tar.gz <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1<span class="token punctuation">;</span>patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/hi-gdb-7.9.1.patch<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpatching <span class="token function">file</span> gdb/aarch64-linux-nat.cpatching <span class="token function">file</span> gdb/amd64-linux-nat.cpatching <span class="token function">file</span> gdb/arm-linux-nat.cpatching <span class="token function">file</span> gdb/gdb_proc_service.hpatching <span class="token function">file</span> gdb/gdbserver/linux-aarch64-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-arm-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-crisv32-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-m68k-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-mips-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-nios2-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-tic6x-low.cpatching <span class="token function">file</span> gdb/gdbserver/linux-x86-low.cpatching <span class="token function">file</span> gdb/gdbserver/proc-service.cpatching <span class="token function">file</span> gdb/i386-linux-nat.cpatching <span class="token function">file</span> gdb/m68klinux-nat.cpatching <span class="token function">file</span> gdb/mips-linux-nat.c~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">find</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1 <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">touch</span><span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdbmake<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb'</span><span class="token function">rm</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0 -rf<span class="token punctuation">;</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> ncurses-6.0.tar.gz<span class="token punctuation">;</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/<span class="token punctuation">;</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/<span class="token punctuation">;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token assign-left variable">CPPFLAGS</span><span class="token operator">=</span><span class="token string">"-P"</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span><span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token function">popd</span><span class="token punctuation">;</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdbconfigure: WARNING: If you wanted to <span class="token builtin class-name">set</span> the <span class="token parameter variable">--build</span> type, don<span class="token string">'t use --host.    If a cross compiler is detected then cross compile mode will be used.checking for egrep... grep -EConfiguring NCURSES 6.0 ABI 6 (Fri Dec 31 11:36:35 CST 2021)checking for package version... 6.0checking for package patch date... 20150808checking build system type... x86_64-unknown-linux-gnuchecking host system type... arm-himix200-linux-gnuchecking target system type... arm-himix200-linux-gnuConfiguring for linux-gnuchecking for prefix... /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/checking for arm-himix200-linux-gnatgcc... nochecking for arm-himix200-linux-gcc... arm-himix200-linux-gccchecking for C compiler default output... a.outchecking whether the C compiler works... yeschecking whether we are cross compiling... yeschecking for executable suffix...checking for object suffix... ochecking whether we are using the GNU C compiler... yeschecking whether arm-himix200-linux-gcc accepts -g... yeschecking version of arm-himix200-linux-gcc... 200checking for arm-himix200-linux-gcc option to accept ANSI C... none neededchecking $CC variable... okchecking how to run the C preprocessor... arm-himix200-linux-gcc -Echecking whether arm-himix200-linux-gcc needs -traditional... nochecking whether arm-himix200-linux-gcc understands -c and -o together... yeschecking if you want to ensure bool is consistent with C++... yeschecking for arm-himix200-linux-g++... arm-himix200-linux-g++checking whether we are using the GNU C++ compiler... yeschecking whether arm-himix200-linux-g++ accepts -g... yeschecking if arm-himix200-linux-g++ works... yeschecking version of arm-himix200-linux-g++... 200checking if you want to build C++ binding and demo... yeschecking if you want to build with Ada95... yeschecking if you want to install terminal database... yeschecking if you want to install manpages... yeschecking if you want to build programs such as tic... yeschecking if you want to build test-programs... yeschecking if you wish to install curses.h... yeschecking for mawk... mawkchecking for egrep... (cached) grep -Echecking for a BSD compatible install... /usr/bin/install -cchecking for tdlint... nochecking for lint... nochecking for alint... nochecking for splint... nochecking for lclint... nochecking whether ln -s works... yeschecking if ln -s -f options work... yeschecking for long file names... yeschecking if you want to use pkg-config... yeschecking for arm-himix200-linux-pkg-config... nochecking for pkg-config... /usr/bin/pkg-configchecking for /usr/bin/pkg-config library directory... checking done... /usr/lib/x86_64-linux-gnu/pkgconfigchecking if we should install .pc files for /usr/bin/pkg-config... nochecking if we should assume mixed-case filenames... autochecking if filesystem supports mixed-case filenames... yeschecking whether make sets ${MAKE}... yeschecking for exctags... nochecking for ctags... nochecking for exetags... nochecking for etags... nochecking for ctags... nochecking for etags... nochecking for makeflags variable... -${MAKEFLAGS}checking for arm-himix200-linux-ranlib... arm-himix200-linux-ranlibchecking for arm-himix200-linux-ld... arm-himix200-linux-ldchecking for arm-himix200-linux-ar... arm-himix200-linux-archecking for arm-himix200-linux-nm... arm-himix200-linux-nmchecking for arm-himix200-linux-ar... (cached) arm-himix200-linux-archecking for options to update archives... -curvchecking if you have specified an install-prefix...checking for gcc... gccchecking for native build C compiler... gccchecking for native build C preprocessor... ${BUILD_CC} -Echecking for native build C flags...checking for native build C preprocessor-flags...checking for native build linker-flags...checking for native build linker-libraries...checking if libtool -version-number should be used... yeschecking if you want to build libraries with libtool... nochecking if you want to build shared libraries... nochecking if you want to build static libraries... yeschecking if you want to build debug libraries... yeschecking if you want to build profiling libraries... nochecking for specified models...  normal debugchecking for default model... normalchecking if you want to have a library-prefix... autochecking for PATH separator... :checking if you want to build a separate terminfo library... nochecking if you want to build a separate tic library... nochecking if you want to link with the GPM mouse library... maybechecking for gpm.h... nochecking for default loader flags...checking for an rpath option... -Wl,-rpath,checking if release/abi version should be used for shared libs... autochecking which arm-himix200-linux-gcc option to use... -fPICchecking if you want to disable library suffixes... nochecking if you wish to append extra suffix to header/library paths...checking if you wish to install ncurses overwriting curses... nochecking if external terminfo-database is used... yeschecking which terminfo source-file will be installed... ${top_srcdir}/misc/terminfo.srcchecking whether to use hashed database instead of directory/tree... nochecking for list of fallback descriptions...checking if you want modern xterm or antique... xterm-newchecking if xterm backspace sends BS or DEL... BSchecking for list of terminfo directories... /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfochecking for default terminfo directory... /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfochecking if big-core option selected... nochecking if big-strings option selected... yeschecking if you want termcap-fallback support... nochecking if ~/.terminfo is wanted... yeschecking if you want to use restricted environment when running as root... yeschecking for remove... yeschecking for unlink... yeschecking for link... yeschecking for symlink... yeschecking if tic should use symbolic links... nochecking if tic should use hard links... yeschecking if you want broken-linker support code... nochecking if tputs should process BSD-style prefix padding... nochecking if we must define _GNU_SOURCE... yeschecking if _XOPEN_SOURCE really is set... yeschecking if SIGWINCH is defined... yeschecking for nl_langinfo and CODESET... yeschecking if you want wide-character code... nochecking whether to enable _LP64 definition in curses.h... yeschecking for special C compiler options needed for large files... nochecking for _FILE_OFFSET_BITS value needed for large files... 64checking for _LARGE_FILES value needed for large files... nochecking for _LARGEFILE_SOURCE value needed for large files... nochecking for fseeko... yeschecking whether to use struct dirent64... nochecking if you want tparm not to use X/Open fixed-parameter list... yeschecking for type of bool... autochecking for alternate terminal capabilities file... Capschecking for type of chtype... uint32_tchecking for type of ospeed... shortchecking for type of mmask_t... uint32_tchecking for size CCHARW_MAX... 5checking for type of tparm args... intptr_tchecking if RCS identifiers should be compiled-in... nochecking format of man-pages...  gzipchecking for manpage renaming... /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/man/man_db.renameschecking if manpage aliases will be installed... yeschecking if manpage symlinks should be used... yeschecking for manpage tbl... nochecking if you want to build with function extensions... yeschecking if you want to build with SCREEN extensions... yeschecking if you want to build with terminal-driver... nochecking for extended use of const keyword... yeschecking if you want to use extended colors... yesconfigure: WARNING: This option applies only to wide-character librarychecking if you want to use extended mouse encoding... yeschecking if you want to use extended putwin/screendump... yeschecking if you want $NCURSES_NO_PADDING code... yeschecking for ANSI C header files... yeschecking for sys/types.h... yeschecking for sys/stat.h... yeschecking for stdlib.h... yeschecking for string.h... yeschecking for memory.h... yeschecking for strings.h... yeschecking for inttypes.h... yeschecking for stdint.h... yeschecking for unistd.h... yeschecking for signed char... yeschecking size of signed char... 1checking if you want to use signed Boolean array in term.h... nochecking if you want SIGWINCH handler... yeschecking if you want user-definable terminal capabilities like termcap... yeschecking if you want all development code... nochecking if you want hard-tabs code... nochecking if you want limited support for xmc... nochecking if you do not want to assume colors are white-on-black... yeschecking if you want hashmap scrolling-optimization code... yeschecking if you want colorfgbg code... nochecking if you want interop bindings... yeschecking if you want to link with the pthread library... nochecking if you want reentrant code... nochecking if you want experimental safe-sprintf code... nochecking if you want wgetch-events code... nochecking if you want to see long compiling messages... yeschecking if you want to see compiler warnings...configure: checking for arm-himix200-linux-gcc __attribute__ directives...... scanf... printf... unused... noreturnchecking if you want to work around bogus compiler/loader warnings... nochecking if you want to enable runtime assertions... nochecking if you want to use dmalloc for testing... nochecking if you want to use dbmalloc for testing... nochecking if you want to use valgrind for testing... nochecking if you want to perform memory-leak testing... nochecking whether to add trace feature to all models... nochecking if we want to use GNAT projects... yeschecking for gettimeofday... yeschecking if -lm needed for math functions... yeschecking for ANSI C header files... (cached) yeschecking for dirent.h that defines DIR... yeschecking for opendir in -ldir... nochecking whether time.h and sys/time.h may both be included... yeschecking for regcomp... yeschecking for regular-expression headers... regex.hchecking for fcntl.h... yeschecking for getopt.h... yeschecking for limits.h... yeschecking for locale.h... yeschecking for math.h... yeschecking for poll.h... yeschecking for sys/bsdtypes.h... nochecking for sys/ioctl.h... yeschecking for sys/param.h... yeschecking for sys/poll.h... yeschecking for sys/select.h... yeschecking for sys/time.h... yeschecking for sys/times.h... yeschecking for ttyent.h... yeschecking for unistd.h... (cached) yeschecking for wctype.h... yeschecking for unistd.h... (cached) yeschecking for getopt.h... (cached) yeschecking for header declaring getopt variables... unistd.hchecking if sys/time.h works with sys/select.h... yeschecking for an ANSI C-conforming const... yeschecking for inline... inlinechecking if arm-himix200-linux-gcc supports options to tune inlining... yeschecking for signal global datatype... volatile sig_atomic_tchecking if unsigned literals are legal... yeschecking if external errno is declared... yeschecking if external errno exists... nochecking if data-only library module links... unknownchecking for getcwd... yeschecking for getegid... yeschecking for geteuid... yeschecking for getopt... yeschecking for getttynam... yeschecking for issetugid... nochecking for poll... yeschecking for putenv... yeschecking for remove... (cached) yeschecking for select... yeschecking for setbuf... yeschecking for setbuffer... yeschecking for setenv... yeschecking for setvbuf... yeschecking for sigaction... yeschecking for sigvec... nochecking for strdup... yeschecking for strstr... yeschecking for tcgetpgrp... yeschecking for times... yeschecking for vsnprintf... yeschecking for isascii... yeschecking whether sigaction needs _POSIX_SOURCE... nochecking if nanosleep really works... unknownchecking for termio.h... yeschecking for termios.h... yeschecking for unistd.h... (cached) yeschecking whether termios.h needs _POSIX_SOURCE... nochecking for tcgetattr... yeschecking for vsscanf function or workaround... vsscanfchecking for working mkstemp... maybechecking for mkstemp... yesconfigure: WARNING: cross compiling: assume setvbuf params not reversedchecking for intptr_t... yeschecking for ssize_t... yeschecking for type sigaction_t... nochecking declaration of size-change... yeschecking for memmove... yeschecking if poll really works... unknownchecking for va_copy... yeschecking for __va_copy... yeschecking for pid_t... yeschecking for unistd.h... (cached) yeschecking for vfork.h... nochecking for fork... yeschecking for vfork... yeschecking for working fork... (cached) yeschecking for working vfork... (cached) yeschecking for openpty in -lutil... yeschecking for openpty header... pty.hchecking if we should include stdbool.h... yeschecking for builtin bool type... nochecking for library stdc++... nochecking whether arm-himix200-linux-g++ understands -c and -o together... yeschecking how to run the C++ preprocessor... arm-himix200-linux-g++ -Echecking for typeinfo... yeschecking for iostream... yeschecking if iostream uses std-namespace... yeschecking if we should include stdbool.h... (cached) yeschecking for builtin bool type... yeschecking for size of bool... unknownconfigure: WARNING: Assuming unsigned for type of boolchecking for special defines needed for etip.h...checking if arm-himix200-linux-g++ accepts parameter initialization... unknownchecking if arm-himix200-linux-g++ accepts static_cast... yeschecking for gnatmake... nochecking for library subsets... ticlib+termlib+ext_tinfo+base+ext_funcschecking default library suffix...checking default library-dependency suffix... .achecking default object directory... objectschecking c++ library-dependency suffix... .achecking if linker supports switching between static/dynamic... nochecking where we will install curses.h... ${prefix}/include/ncurseschecking for src modules... ncurses progs panel menu formchecking for tic... /usr/bin/ticchecking for defines to add to ncurses6-config script...  -D_GNU_SOURCEpackage: ncursesconfigure: creating ./config.statusconfig.status: creating include/MKterm.h.awkconfig.status: creating include/curses.headconfig.status: creating include/ncurses_dll.hconfig.status: creating include/termcap.hconfig.status: creating include/unctrl.hconfig.status: creating man/Makefileconfig.status: creating include/Makefileconfig.status: creating ncurses/Makefileconfig.status: creating progs/Makefileconfig.status: creating panel/Makefileconfig.status: creating menu/Makefileconfig.status: creating form/Makefileconfig.status: creating test/Makefileconfig.status: creating misc/Makefileconfig.status: creating c++/Makefileconfig.status: creating misc/run_tic.shconfig.status: creating misc/ncurses-configconfig.status: creating man/ncurses6-config.1config.status: creating Makefileconfig.status: creating include/ncurses_cfg.hAppending rules for normal model (ncurses: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (ncurses: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (progs: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (progs: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (panel: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (panel: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (menu: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (menu: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (form: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (form: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (test: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (test: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for normal model (c++: ticlib+termlib+ext_tinfo+base+ext_funcs)Appending rules for debug model (c++: ticlib+termlib+ext_tinfo+base+ext_funcs)creating headers.shmake[2]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0<span class="token string">'** Configuration summary for NCURSES 6.0 20150808:       extended funcs: yes       xterm terminfo: xterm-new        bin directory: /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin        lib directory: /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib    include directory: /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncurses        man directory: /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man   terminfo directory: /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfo** Include-directory is not in a standard locationmake[2]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0<span class="token string">'make[2]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0<span class="token string">'cd man &amp;&amp; make -w -- BOOT_MEDIA=emmc CHIP=hi3516dv300 CROSS_COMPILE=arm-himix200-linux- DESTDIR="" RPATH_LIST="/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib" installmake[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/man<span class="token string">'mkdir -p /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/bin/sh ../edit_man.sh normal installing /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man . terminfo.5 *-config.1 ./*.[0-9]*...made /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/man_alias.sedinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man5/terminfo.5.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/ncurses6-config.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/captoinfo.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/clear.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/addch.3ncurses.gz.. installing alias echochar.3ncurses.gz.. installing alias mvaddch.3ncurses.gz.. installing alias mvwaddch.3ncurses.gz.. installing alias waddch.3ncurses.gz.. installing alias wechochar.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/addchstr.3ncurses.gz.. installing alias addchnstr.3ncurses.gz.. installing alias mvaddchnstr.3ncurses.gz.. installing alias mvaddchstr.3ncurses.gz.. installing alias mvwaddchnstr.3ncurses.gz.. installing alias mvwaddchstr.3ncurses.gz.. installing alias waddchnstr.3ncurses.gz.. installing alias waddchstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/addstr.3ncurses.gz.. installing alias addnstr.3ncurses.gz.. installing alias mvaddnstr.3ncurses.gz.. installing alias mvaddstr.3ncurses.gz.. installing alias mvwaddnstr.3ncurses.gz.. installing alias mvwaddstr.3ncurses.gz.. installing alias waddnstr.3ncurses.gz.. installing alias waddstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/add_wch.3ncurses.gz.. installing alias echo_wchar.3ncurses.gz.. installing alias mvadd_wch.3ncurses.gz.. installing alias mvwadd_wch.3ncurses.gz.. installing alias wadd_wch.3ncurses.gz.. installing alias wecho_wchar.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/add_wchstr.3ncurses.gz.. installing alias add_wchnstr.3ncurses.gz.. installing alias mvadd_wchnstr.3ncurses.gz.. installing alias mvadd_wchstr.3ncurses.gz.. installing alias mvwadd_wchnstr.3ncurses.gz.. installing alias mvwadd_wchstr.3ncurses.gz.. installing alias wadd_wchnstr.3ncurses.gz.. installing alias wadd_wchstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/addwstr.3ncurses.gz.. installing alias addnwstr.3ncurses.gz.. installing alias mvaddnwstr.3ncurses.gz.. installing alias mvaddwstr.3ncurses.gz.. installing alias mvwaddnwstr.3ncurses.gz.. installing alias mvwaddwstr.3ncurses.gz.. installing alias waddnwstr.3ncurses.gz.. installing alias waddwstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/attr.3ncurses.gz.. installing alias attr_get.3ncurses.gz.. installing alias attroff.3ncurses.gz.. installing alias attr_off.3ncurses.gz.. installing alias attron.3ncurses.gz.. installing alias attr_on.3ncurses.gz.. installing alias attrset.3ncurses.gz.. installing alias attr_set.3ncurses.gz.. installing alias chgat.3ncurses.gz.. installing alias color_set.3ncurses.gz.. installing alias mvchgat.3ncurses.gz.. installing alias mvwchgat.3ncurses.gz.. installing alias PAIR_NUMBER.3ncurses.gz.. installing alias standend.3ncurses.gz.. installing alias standout.3ncurses.gz.. installing alias wattr_get.3ncurses.gz.. installing alias wattroff.3ncurses.gz.. installing alias wattr_off.3ncurses.gz.. installing alias wattron.3ncurses.gz.. installing alias wattr_on.3ncurses.gz.. installing alias wattrset.3ncurses.gz.. installing alias wattr_set.3ncurses.gz.. installing alias wchgat.3ncurses.gz.. installing alias wcolor_set.3ncurses.gz.. installing alias wstandend.3ncurses.gz.. installing alias wstandout.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/beep.3ncurses.gz.. installing alias flash.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/bkgd.3ncurses.gz.. installing alias bkgdset.3ncurses.gz.. installing alias getbkgd.3ncurses.gz.. installing alias wbkgd.3ncurses.gz.. installing alias wbkgdset.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/bkgrnd.3ncurses.gz.. installing alias bkgrndset.3ncurses.gz.. installing alias getbkgrnd.3ncurses.gz.. installing alias wbkgrnd.3ncurses.gz.. installing alias wbkgrndset.3ncurses.gz.. installing alias wgetbkgrnd.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/border.3ncurses.gz.. installing alias box.3ncurses.gz.. installing alias hline.3ncurses.gz.. installing alias mvhline.3ncurses.gz.. installing alias mvvline.3ncurses.gz.. installing alias mvwhline.3ncurses.gz.. installing alias mvwvline.3ncurses.gz.. installing alias vline.3ncurses.gz.. installing alias wborder.3ncurses.gz.. installing alias whline.3ncurses.gz.. installing alias wvline.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/border_set.3ncurses.gz.. installing alias box_set.3ncurses.gz.. installing alias hline_set.3ncurses.gz.. installing alias mvhline_set.3ncurses.gz.. installing alias mvvline_set.3ncurses.gz.. installing alias mvwhline_set.3ncurses.gz.. installing alias mvwvline_set.3ncurses.gz.. installing alias vline_set.3ncurses.gz.. installing alias wborder_set.3ncurses.gz.. installing alias whline_set.3ncurses.gz.. installing alias wvline_set.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/clear.3ncurses.gz.. installing alias clrtobot.3ncurses.gz.. installing alias clrtoeol.3ncurses.gz.. installing alias erase.3ncurses.gz.. installing alias wclear.3ncurses.gz.. installing alias wclrtobot.3ncurses.gz.. installing alias wclrtoeol.3ncurses.gz.. installing alias werase.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/color.3ncurses.gz.. installing alias can_change_color.3ncurses.gz.. installing alias color_content.3ncurses.gz.. installing alias COLOR_PAIR.3ncurses.gz.. installing alias has_colors.3ncurses.gz.. installing alias init_color.3ncurses.gz.. installing alias init_pair.3ncurses.gz.. installing alias pair_content.3ncurses.gz.. installing alias start_color.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/delch.3ncurses.gz.. installing alias mvdelch.3ncurses.gz.. installing alias mvwdelch.3ncurses.gz.. installing alias wdelch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/deleteln.3ncurses.gz.. installing alias insdelln.3ncurses.gz.. installing alias insertln.3ncurses.gz.. installing alias wdeleteln.3ncurses.gz.. installing alias winsdelln.3ncurses.gz.. installing alias winsertln.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/extensions.3ncurses.gz.. installing alias curses_version.3ncurses.gz.. installing alias use_extended_names.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/getcchar.3ncurses.gz.. installing alias setcchar.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/getch.3ncurses.gz.. installing alias has_key.3ncurses.gz.. installing alias mvgetch.3ncurses.gz.. installing alias mvwgetch.3ncurses.gz.. installing alias ungetch.3ncurses.gz.. installing alias wgetch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/getstr.3ncurses.gz.. installing alias getnstr.3ncurses.gz.. installing alias mvgetnstr.3ncurses.gz.. installing alias mvgetstr.3ncurses.gz.. installing alias mvwgetnstr.3ncurses.gz.. installing alias mvwgetstr.3ncurses.gz.. installing alias wgetnstr.3ncurses.gz.. installing alias wgetstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/get_wch.3ncurses.gz.. installing alias mvget_wch.3ncurses.gz.. installing alias mvwget_wch.3ncurses.gz.. installing alias unget_wch.3ncurses.gz.. installing alias wget_wch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/get_wstr.3ncurses.gz.. installing alias getn_wstr.3ncurses.gz.. installing alias mvgetn_wstr.3ncurses.gz.. installing alias mvget_wstr.3ncurses.gz.. installing alias mvwgetn_wstr.3ncurses.gz.. installing alias mvwget_wstr.3ncurses.gz.. installing alias wgetn_wstr.3ncurses.gz.. installing alias wget_wstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/getyx.3ncurses.gz.. installing alias getbegyx.3ncurses.gz.. installing alias getmaxyx.3ncurses.gz.. installing alias getparyx.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/inch.3ncurses.gz.. installing alias mvinch.3ncurses.gz.. installing alias mvwinch.3ncurses.gz.. installing alias winch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/inchstr.3ncurses.gz.. installing alias inchnstr.3ncurses.gz.. installing alias mvinchnstr.3ncurses.gz.. installing alias mvinchstr.3ncurses.gz.. installing alias mvwinchnstr.3ncurses.gz.. installing alias mvwinchstr.3ncurses.gz.. installing alias winchnstr.3ncurses.gz.. installing alias winchstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/initscr.3ncurses.gz.. installing alias delscreen.3ncurses.gz.. installing alias endwin.3ncurses.gz.. installing alias isendwin.3ncurses.gz.. installing alias newterm.3ncurses.gz.. installing alias set_term.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/inopts.3ncurses.gz.. installing alias cbreak.3ncurses.gz.. installing alias echo.3ncurses.gz.. installing alias halfdelay.3ncurses.gz.. installing alias intrflush.3ncurses.gz.. installing alias keypad.3ncurses.gz.. installing alias meta.3ncurses.gz.. installing alias nocbreak.3ncurses.gz.. installing alias nodelay.3ncurses.gz.. installing alias noecho.3ncurses.gz.. installing alias noqiflush.3ncurses.gz.. installing alias noraw.3ncurses.gz.. installing alias notimeout.3ncurses.gz.. installing alias qiflush.3ncurses.gz.. installing alias raw.3ncurses.gz.. installing alias timeout.3ncurses.gz.. installing alias typeahead.3ncurses.gz.. installing alias wtimeout.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/insch.3ncurses.gz.. installing alias mvinsch.3ncurses.gz.. installing alias mvwinsch.3ncurses.gz.. installing alias winsch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/insstr.3ncurses.gz.. installing alias insnstr.3ncurses.gz.. installing alias mvinsnstr.3ncurses.gz.. installing alias mvinsstr.3ncurses.gz.. installing alias mvwinsnstr.3ncurses.gz.. installing alias mvwinsstr.3ncurses.gz.. installing alias winsnstr.3ncurses.gz.. installing alias winsstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/instr.3ncurses.gz.. installing alias innstr.3ncurses.gz.. installing alias mvinnstr.3ncurses.gz.. installing alias mvinstr.3ncurses.gz.. installing alias mvwinnstr.3ncurses.gz.. installing alias mvwinstr.3ncurses.gz.. installing alias winnstr.3ncurses.gz.. installing alias winstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/ins_wch.3ncurses.gz.. installing alias mvins_wch.3ncurses.gz.. installing alias mvwins_wch.3ncurses.gz.. installing alias wins_wch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/ins_wstr.3ncurses.gz.. installing alias ins_nwstr.3ncurses.gz.. installing alias mvins_nwstr.3ncurses.gz.. installing alias mvins_wstr.3ncurses.gz.. installing alias mvwins_nwstr.3ncurses.gz.. installing alias mvwins_wstr.3ncurses.gz.. installing alias wins_nwstr.3ncurses.gz.. installing alias wins_wstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/in_wch.3ncurses.gz.. installing alias mvin_wch.3ncurses.gz.. installing alias mvwin_wch.3ncurses.gz.. installing alias win_wch.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/in_wchstr.3ncurses.gz.. installing alias in_wchnstr.3ncurses.gz.. installing alias mvin_wchnstr.3ncurses.gz.. installing alias mvin_wchstr.3ncurses.gz.. installing alias mvwin_wchnstr.3ncurses.gz.. installing alias mvwin_wchstr.3ncurses.gz.. installing alias win_wchnstr.3ncurses.gz.. installing alias win_wchstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/inwstr.3ncurses.gz.. installing alias innwstr.3ncurses.gz.. installing alias mvinnwstr.3ncurses.gz.. installing alias mvinwstr.3ncurses.gz.. installing alias mvwinnwstr.3ncurses.gz.. installing alias mvwinwstr.3ncurses.gz.. installing alias winnwstr.3ncurses.gz.. installing alias winwstr.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/kernel.3ncurses.gz.. installing alias curs_set.3ncurses.gz.. installing alias def_prog_mode.3ncurses.gz.. installing alias def_shell_mode.3ncurses.gz.. installing alias getsyx.3ncurses.gz.. installing alias napms.3ncurses.gz.. installing alias reset_prog_mode.3ncurses.gz.. installing alias reset_shell_mode.3ncurses.gz.. installing alias resetty.3ncurses.gz.. installing alias ripoffline.3ncurses.gz.. installing alias savetty.3ncurses.gz.. installing alias setsyx.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/legacy.3ncurses.gz.. installing alias getattrs.3ncurses.gz.. installing alias getbegx.3ncurses.gz.. installing alias getbegy.3ncurses.gz.. installing alias getcurx.3ncurses.gz.. installing alias getcury.3ncurses.gz.. installing alias getmaxx.3ncurses.gz.. installing alias getmaxy.3ncurses.gz.. installing alias getparx.3ncurses.gz.. installing alias getpary.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/memleaks.3ncurses.gz.. installing alias _nc_freeall.3ncurses.gz.. installing alias _nc_free_and_exit.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/mouse.3ncurses.gz.. installing alias getmouse.3ncurses.gz.. installing alias has_mouse.3ncurses.gz.. installing alias mouseinterval.3ncurses.gz.. installing alias mousemask.3ncurses.gz.. installing alias mouse_trafo.3ncurses.gz.. installing alias ungetmouse.3ncurses.gz.. installing alias wenclose.3ncurses.gz.. installing alias wmouse_trafo.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/move.3ncurses.gz.. installing alias wmove.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/opaque.3ncurses.gz.. installing alias is_cleared.3ncurses.gz.. installing alias is_idcok.3ncurses.gz.. installing alias is_idlok.3ncurses.gz.. installing alias is_immedok.3ncurses.gz.. installing alias is_keypad.3ncurses.gz.. installing alias is_leaveok.3ncurses.gz.. installing alias is_nodelay.3ncurses.gz.. installing alias is_notimeout.3ncurses.gz.. installing alias is_pad.3ncurses.gz.. installing alias is_scrollok.3ncurses.gz.. installing alias is_subwin.3ncurses.gz.. installing alias is_syncok.3ncurses.gz.. installing alias wgetdelay.3ncurses.gz.. installing alias wgetparent.3ncurses.gz.. installing alias wgetscrreg.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/outopts.3ncurses.gz.. installing alias clearok.3ncurses.gz.. installing alias idcok.3ncurses.gz.. installing alias idlok.3ncurses.gz.. installing alias immedok.3ncurses.gz.. installing alias leaveok.3ncurses.gz.. installing alias nl.3ncurses.gz.. installing alias nonl.3ncurses.gz.. installing alias scrollok.3ncurses.gz.. installing alias setscrreg.3ncurses.gz.. installing alias wsetscrreg.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/overlay.3ncurses.gz.. installing alias copywin.3ncurses.gz.. installing alias overwrite.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/pad.3ncurses.gz.. installing alias newpad.3ncurses.gz.. installing alias pechochar.3ncurses.gz.. installing alias pecho_wchar.3ncurses.gz.. installing alias pnoutrefresh.3ncurses.gz.. installing alias prefresh.3ncurses.gz.. installing alias subpad.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/print.3ncurses.gz.. installing alias mcprint.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/printw.3ncurses.gz.. installing alias mvprintw.3ncurses.gz.. installing alias mvwprintw.3ncurses.gz.. installing alias vwprintw.3ncurses.gz.. installing alias vw_printw.3ncurses.gz.. installing alias wprintw.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/refresh.3ncurses.gz.. installing alias doupdate.3ncurses.gz.. installing alias redrawwin.3ncurses.gz.. installing alias wnoutrefresh.3ncurses.gz.. installing alias wredrawln.3ncurses.gz.. installing alias wrefresh.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/scanw.3ncurses.gz.. installing alias mvscanw.3ncurses.gz.. installing alias mvwscanw.3ncurses.gz.. installing alias vwscanw.3ncurses.gz.. installing alias vw_scanw.3ncurses.gz.. installing alias wscanw.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/scr_dump.3ncurses.gz.. installing alias scr_init.3ncurses.gz.. installing alias scr_restore.3ncurses.gz.. installing alias scr_set.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/scroll.3ncurses.gz.. installing alias scrl.3ncurses.gz.. installing alias wscrl.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/slk.3ncurses.gz.. installing alias slk_attr.3ncurses.gz.. installing alias slk_attroff.3ncurses.gz.. installing alias slk_attr_off.3ncurses.gz.. installing alias slk_attron.3ncurses.gz.. installing alias slk_attr_on.3ncurses.gz.. installing alias slk_attrset.3ncurses.gz.. installing alias slk_attr_set.3ncurses.gz.. installing alias slk_clear.3ncurses.gz.. installing alias slk_color.3ncurses.gz.. installing alias slk_init.3ncurses.gz.. installing alias slk_label.3ncurses.gz.. installing alias slk_noutrefresh.3ncurses.gz.. installing alias slk_refresh.3ncurses.gz.. installing alias slk_restore.3ncurses.gz.. installing alias slk_set.3ncurses.gz.. installing alias slk_touch.3ncurses.gz.. installing alias slk_wset.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/sp_funcs.3ncurses.gz.. installing alias assume_default_colors_sp.3ncurses.gz.. installing alias baudrate_sp.3ncurses.gz.. installing alias beep_sp.3ncurses.gz.. installing alias can_change_color_sp.3ncurses.gz.. installing alias cbreak_sp.3ncurses.gz.. installing alias ceiling_panel.3ncurses.gz.. installing alias color_content_sp.3ncurses.gz.. installing alias curs_set_sp.3ncurses.gz.. installing alias define_key_sp.3ncurses.gz.. installing alias def_prog_mode_sp.3ncurses.gz.. installing alias def_shell_mode_sp.3ncurses.gz.. installing alias delay_output_sp.3ncurses.gz.. installing alias del_curterm_sp.3ncurses.gz.. installing alias doupdate_sp.3ncurses.gz.. installing alias echo_sp.3ncurses.gz.. installing alias endwin_sp.3ncurses.gz.. installing alias erasechar_sp.3ncurses.gz.. installing alias filter_sp.3ncurses.gz.. installing alias flash_sp.3ncurses.gz.. installing alias flushinp_sp.3ncurses.gz.. installing alias get_escdelay_sp.3ncurses.gz.. installing alias getmouse_sp.3ncurses.gz.. installing alias getwin_sp.3ncurses.gz.. installing alias ground_panel.3ncurses.gz.. installing alias halfdelay_sp.3ncurses.gz.. installing alias has_colors_sp.3ncurses.gz.. installing alias has_ic_sp.3ncurses.gz.. installing alias has_il_sp.3ncurses.gz.. installing alias has_key_sp.3ncurses.gz.. installing alias has_mouse_sp.3ncurses.gz.. installing alias init_color_sp.3ncurses.gz.. installing alias init_pair_sp.3ncurses.gz.. installing alias intrflush_sp.3ncurses.gz.. installing alias isendwin_sp.3ncurses.gz.. installing alias is_term_resized_sp.3ncurses.gz.. installing alias keybound_sp.3ncurses.gz.. installing alias key_defined_sp.3ncurses.gz.. installing alias keyname_sp.3ncurses.gz.. installing alias keyok_sp.3ncurses.gz.. installing alias killchar_sp.3ncurses.gz.. installing alias mcprint_sp.3ncurses.gz.. installing alias mouseinterval_sp.3ncurses.gz.. installing alias mousemask_sp.3ncurses.gz.. installing alias mvcur_sp.3ncurses.gz.. installing alias napms_sp.3ncurses.gz.. installing alias new_form_sp.3ncurses.gz.. installing alias new_menu_sp.3ncurses.gz.. installing alias newpad_sp.3ncurses.gz.. installing alias new_prescr.3ncurses.gz.. installing alias newterm_sp.3ncurses.gz.. installing alias newwin_sp.3ncurses.gz.. installing alias nl_sp.3ncurses.gz.. installing alias nocbreak_sp.3ncurses.gz.. installing alias noecho_sp.3ncurses.gz.. installing alias nofilter_sp.3ncurses.gz.. installing alias nonl_sp.3ncurses.gz.. installing alias noqiflush_sp.3ncurses.gz.. installing alias noraw_sp.3ncurses.gz.. installing alias pair_content_sp.3ncurses.gz.. installing alias putp_sp.3ncurses.gz.. installing alias qiflush_sp.3ncurses.gz.. installing alias raw_sp.3ncurses.gz.. installing alias reset_prog_mode_sp.3ncurses.gz.. installing alias reset_shell_mode_sp.3ncurses.gz.. installing alias resetty_sp.3ncurses.gz.. installing alias resize_term_sp.3ncurses.gz.. installing alias resizeterm_sp.3ncurses.gz.. installing alias restartterm_sp.3ncurses.gz.. installing alias ripoffline_sp.3ncurses.gz.. installing alias savetty_sp.3ncurses.gz.. installing alias scr_init_sp.3ncurses.gz.. installing alias scr_restore_sp.3ncurses.gz.. installing alias scr_set_sp.3ncurses.gz.. installing alias set_curterm_sp.3ncurses.gz.. installing alias set_escdelay_sp.3ncurses.gz.. installing alias set_tabsize_sp.3ncurses.gz.. installing alias slk_attroff_sp.3ncurses.gz.. installing alias slk_attron_sp.3ncurses.gz.. installing alias slk_attr_set_sp.3ncurses.gz.. installing alias slk_attrset_sp.3ncurses.gz.. installing alias slk_attr_sp.3ncurses.gz.. installing alias slk_clear_sp.3ncurses.gz.. installing alias slk_color_sp.3ncurses.gz.. installing alias slk_init_sp.3ncurses.gz.. installing alias slk_label_sp.3ncurses.gz.. installing alias slk_noutrefresh_sp.3ncurses.gz.. installing alias slk_refresh_sp.3ncurses.gz.. installing alias slk_restore_sp.3ncurses.gz.. installing alias slk_set_sp.3ncurses.gz.. installing alias slk_touch_sp.3ncurses.gz.. installing alias start_color_sp.3ncurses.gz.. installing alias term_attrs_sp.3ncurses.gz.. installing alias termattrs_sp.3ncurses.gz.. installing alias termname_sp.3ncurses.gz.. installing alias tgetent_sp.3ncurses.gz.. installing alias tgetflag_sp.3ncurses.gz.. installing alias tgetnum_sp.3ncurses.gz.. installing alias tgetstr_sp.3ncurses.gz.. installing alias tigetflag_sp.3ncurses.gz.. installing alias tigetnum_sp.3ncurses.gz.. installing alias tigetstr_sp.3ncurses.gz.. installing alias tputs_sp.3ncurses.gz.. installing alias typeahead_sp.3ncurses.gz.. installing alias unctrl_sp.3ncurses.gz.. installing alias ungetch_sp.3ncurses.gz.. installing alias ungetmouse_sp.3ncurses.gz.. installing alias unget_wch_sp.3ncurses.gz.. installing alias update_panels_sp.3ncurses.gz.. installing alias use_default_colors_sp.3ncurses.gz.. installing alias use_env_sp.3ncurses.gz.. installing alias use_legacy_coding_sp.3ncurses.gz.. installing alias vid_attr_sp.3ncurses.gz.. installing alias vidattr_sp.3ncurses.gz.. installing alias vid_puts_sp.3ncurses.gz.. installing alias vidputs_sp.3ncurses.gz.. installing alias wunctrl_sp.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/termattrs.3ncurses.gz.. installing alias baudrate.3ncurses.gz.. installing alias erasechar.3ncurses.gz.. installing alias erasewchar.3ncurses.gz.. installing alias has_ic.3ncurses.gz.. installing alias has_il.3ncurses.gz.. installing alias killchar.3ncurses.gz.. installing alias killwchar.3ncurses.gz.. installing alias longname.3ncurses.gz.. installing alias term_attrs.3ncurses.gz.. installing alias termname.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/termcap.3ncurses.gz.. installing alias BC.3ncurses.gz.. installing alias ospeed.3ncurses.gz.. installing alias PC.3ncurses.gz.. installing alias tgetent.3ncurses.gz.. installing alias tgetflag.3ncurses.gz.. installing alias tgetnum.3ncurses.gz.. installing alias tgetstr.3ncurses.gz.. installing alias tgoto.3ncurses.gz.. installing alias tputs.3ncurses.gz.. installing alias UP.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/terminfo.3ncurses.gz.. installing alias del_curterm.3ncurses.gz.. installing alias mvcur.3ncurses.gz.. installing alias putp.3ncurses.gz.. installing alias restartterm.3ncurses.gz.. installing alias set_curterm.3ncurses.gz.. installing alias setterm.3ncurses.gz.. installing alias setupterm.3ncurses.gz.. installing alias tigetflag.3ncurses.gz.. installing alias tigetnum.3ncurses.gz.. installing alias tigetstr.3ncurses.gz.. installing alias tiparm.3ncurses.gz.. installing alias tparm.3ncurses.gz.. installing alias tputs.3ncurses.gz.. installing alias vidattr.3ncurses.gz.. installing alias vid_attr.3ncurses.gz.. installing alias vidputs.3ncurses.gz.. installing alias vid_puts.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/threads.3ncurses.gz.. installing alias get_escdelay.3ncurses.gz.. installing alias set_escdelay.3ncurses.gz.. installing alias set_tabsize.3ncurses.gz.. installing alias use_screen.3ncurses.gz.. installing alias use_window.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/touch.3ncurses.gz.. installing alias is_linetouched.3ncurses.gz.. installing alias is_wintouched.3ncurses.gz.. installing alias touchline.3ncurses.gz.. installing alias touchwin.3ncurses.gz.. installing alias untouchwin.3ncurses.gz.. installing alias wtouchln.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/trace.3ncurses.gz.. installing alias _nc_tracebits.3ncurses.gz.. installing alias _traceattr.3ncurses.gz.. installing alias _traceattr2.3ncurses.gz.. installing alias _tracecchar_t.3ncurses.gz.. installing alias _tracecchar_t2.3ncurses.gz.. installing alias _tracechar.3ncurses.gz.. installing alias _tracechtype.3ncurses.gz.. installing alias _tracechtype2.3ncurses.gz.. installing alias _tracedump.3ncurses.gz.. installing alias _tracef.3ncurses.gz.. installing alias _tracemouse.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/util.3ncurses.gz.. installing alias delay_output.3ncurses.gz.. installing alias filter.3ncurses.gz.. installing alias flushinp.3ncurses.gz.. installing alias getwin.3ncurses.gz.. installing alias keyname.3ncurses.gz.. installing alias key_name.3ncurses.gz.. installing alias nofilter.3ncurses.gz.. installing alias putwin.3ncurses.gz.. installing alias unctrl.3ncurses.gz.. installing alias use_env.3ncurses.gz.. installing alias use_tioctl.3ncurses.gz.. installing alias wunctrl.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/curses_variables.3ncurses.gz.. installing alias COLOR_PAIRS.3ncurses.gz.. installing alias COLORS.3ncurses.gz.. installing alias COLS.3ncurses.gz.. installing alias curscr.3ncurses.gz.. installing alias ESCDELAY.3ncurses.gz.. installing alias LINES.3ncurses.gz.. installing alias newscr.3ncurses.gz.. installing alias stdscr.3ncurses.gz.. installing alias TABSIZE.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/window.3ncurses.gz.. installing alias delwin.3ncurses.gz.. installing alias derwin.3ncurses.gz.. installing alias dupwin.3ncurses.gz.. installing alias mvderwin.3ncurses.gz.. installing alias mvwin.3ncurses.gz.. installing alias newwin.3ncurses.gz.. installing alias subwin.3ncurses.gz.. installing alias syncok.3ncurses.gz.. installing alias wcursyncup.3ncurses.gz.. installing alias wsyncdown.3ncurses.gz.. installing alias wsyncup.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/default_colors.3ncurses.gz.. installing alias assume_default_colors.3ncurses.gz.. installing alias use_default_colors.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/define_key.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/form.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/cursor.3form.gz.. installing alias form_cursor.3form.gz.. installing alias pos_form_cursor.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/data.3form.gz.. installing alias data_ahead.3form.gz.. installing alias data_behind.3form.gz.. installing alias form_data.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/driver.3form.gz.. installing alias form_driver.3form.gz.. installing alias form_driver_w.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field.3form.gz.. installing alias field_count.3form.gz.. installing alias form_field.3form.gz.. installing alias form_fields.3form.gz.. installing alias move_field.3form.gz.. installing alias set_form_fields.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_attributes.3form.gz.. installing alias field_back.3form.gz.. installing alias field_fore.3form.gz.. installing alias field_pad.3form.gz.. installing alias form_field_attributes.3form.gz.. installing alias set_field_back.3form.gz.. installing alias set_field_fore.3form.gz.. installing alias set_field_pad.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_buffer.3form.gz.. installing alias field_status.3form.gz.. installing alias form_field_buffer.3form.gz.. installing alias set_field_buffer.3form.gz.. installing alias set_field_status.3form.gz.. installing alias set_max_field.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_info.3form.gz.. installing alias dynamic_field_info.3form.gz.. installing alias form_field_info.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_just.3form.gz.. installing alias form_field_just.3form.gz.. installing alias set_field_just.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_new.3form.gz.. installing alias dup_field.3form.gz.. installing alias form_field_new.3form.gz.. installing alias free_field.3form.gz.. installing alias link_field.3form.gz.. installing alias new_field.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_opts.3form.gz.. installing alias field_opts_off.3form.gz.. installing alias field_opts_on.3form.gz.. installing alias form_field_opts.3form.gz.. installing alias set_field_opts.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/fieldtype.3form.gz.. installing alias form_fieldtype.3form.gz.. installing alias free_fieldtype.3form.gz.. installing alias link_fieldtype.3form.gz.. installing alias new_fieldtype.3form.gz.. installing alias set_fieldtype_arg.3form.gz.. installing alias set_fieldtype_choice.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_userptr.3form.gz.. installing alias form_field_userptr.3form.gz.. installing alias set_field_userptr.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/field_validation.3form.gz.. installing alias field_arg.3form.gz.. installing alias field_type.3form.gz.. installing alias form_field_validation.3form.gz.. installing alias set_field_type.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/hook.3form.gz.. installing alias field_init.3form.gz.. installing alias field_term.3form.gz.. installing alias form_hook.3form.gz.. installing alias form_init.3form.gz.. installing alias form_term.3form.gz.. installing alias set_field_init.3form.gz.. installing alias set_field_term.3form.gz.. installing alias set_form_init.3form.gz.. installing alias set_form_term.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/new.3form.gz.. installing alias form_new.3form.gz.. installing alias free_form.3form.gz.. installing alias new_form.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/new_page.3form.gz.. installing alias form_new_page.3form.gz.. installing alias set_new_page.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/opts.3form.gz.. installing alias form_opts.3form.gz.. installing alias form_opts_off.3form.gz.. installing alias form_opts_on.3form.gz.. installing alias set_form_opts.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/page.3form.gz.. installing alias current_field.3form.gz.. installing alias field_index.3form.gz.. installing alias form_page.3form.gz.. installing alias set_current_field.3form.gz.. installing alias set_form_page.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/post.3form.gz.. installing alias form_post.3form.gz.. installing alias post_form.3form.gz.. installing alias unpost_form.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/requestname.3form.gz.. installing alias form_request_by_name.3form.gz.. installing alias form_requestname.3form.gz.. installing alias form_request_name.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/userptr.3form.gz.. installing alias form_userptr.3form.gz.. installing alias set_form_userptr.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/form_variables.3form.gz.. installing alias TYPE_ALNUM.3form.gz.. installing alias TYPE_ALPHA.3form.gz.. installing alias TYPE_ENUM.3form.gz.. installing alias TYPE_INTEGER.3form.gz.. installing alias TYPE_IPV4.3form.gz.. installing alias TYPE_NUMERIC.3form.gz.. installing alias TYPE_REGEXP.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/win.3form.gz.. installing alias form_sub.3form.gz.. installing alias form_win.3form.gz.. installing alias scale_form.3form.gz.. installing alias set_form_sub.3form.gz.. installing alias set_form_win.3form.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/infocmp.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/infotocap.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/keybound.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/key_defined.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/keyok.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/legacy_coding.3ncurses.gz.. installing alias use_legacy_coding.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/attributes.3menu.gz.. installing alias menu_attributes.3menu.gz.. installing alias menu_back.3menu.gz.. installing alias menu_fore.3menu.gz.. installing alias menu_grey.3menu.gz.. installing alias menu_pad.3menu.gz.. installing alias set_menu_back.3menu.gz.. installing alias set_menu_fore.3menu.gz.. installing alias set_menu_grey.3menu.gz.. installing alias set_menu_pad.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/cursor.3menu.gz.. installing alias menu_cursor.3menu.gz.. installing alias pos_menu_cursor.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/driver.3menu.gz.. installing alias menu_driver.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/format.3menu.gz.. installing alias menu_format.3menu.gz.. installing alias set_menu_format.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/hook.3menu.gz.. installing alias item_init.3menu.gz.. installing alias item_term.3menu.gz.. installing alias menu_hook.3menu.gz.. installing alias menu_init.3menu.gz.. installing alias menu_term.3menu.gz.. installing alias set_item_init.3menu.gz.. installing alias set_item_term.3menu.gz.. installing alias set_menu_init.3menu.gz.. installing alias set_menu_term.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/items.3menu.gz.. installing alias item_count.3menu.gz.. installing alias menu_items.3menu.gz.. installing alias set_menu_items.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/mark.3menu.gz.. installing alias menu_mark.3menu.gz.. installing alias set_menu_mark.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/new.3menu.gz.. installing alias free_menu.3menu.gz.. installing alias menu_new.3menu.gz.. installing alias new_menu.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/opts.3menu.gz.. installing alias menu_opts.3menu.gz.. installing alias menu_opts_off.3menu.gz.. installing alias menu_opts_on.3menu.gz.. installing alias set_menu_opts.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/pattern.3menu.gz.. installing alias menu_pattern.3menu.gz.. installing alias set_menu_pattern.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/post.3menu.gz.. installing alias menu_post.3menu.gz.. installing alias post_menu.3menu.gz.. installing alias unpost_menu.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/requestname.3menu.gz.. installing alias menu_request_by_name.3menu.gz.. installing alias menu_requestname.3menu.gz.. installing alias menu_request_name.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/spacing.3menu.gz.. installing alias menu_spacing.3menu.gz.. installing alias set_menu_spacing.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/userptr.3menu.gz.. installing alias menu_userptr.3menu.gz.. installing alias set_menu_userptr.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/win.3menu.gz.. installing alias menu_sub.3menu.gz.. installing alias menu_win.3menu.gz.. installing alias scale_menu.3menu.gz.. installing alias set_menu_sub.3menu.gz.. installing alias set_menu_win.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_current.3menu.gz.. installing alias current_item.3menu.gz.. installing alias item_index.3menu.gz.. installing alias mitem_current.3menu.gz.. installing alias set_current_item.3menu.gz.. installing alias set_top_row.3menu.gz.. installing alias top_row.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_name.3menu.gz.. installing alias item_description.3menu.gz.. installing alias item_name.3menu.gz.. installing alias mitem_name.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_new.3menu.gz.. installing alias free_item.3menu.gz.. installing alias mitem_new.3menu.gz.. installing alias new_item.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_opts.3menu.gz.. installing alias item_opts.3menu.gz.. installing alias item_opts_off.3menu.gz.. installing alias item_opts_on.3menu.gz.. installing alias mitem_opts.3menu.gz.. installing alias set_item_opts.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_userptr.3menu.gz.. installing alias item_userptr.3menu.gz.. installing alias mitem_userptr.3menu.gz.. installing alias set_item_userptr.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_value.3menu.gz.. installing alias item_value.3menu.gz.. installing alias mitem_value.3menu.gz.. installing alias set_item_value.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/menu_visible.3menu.gz.. installing alias item_visible.3menu.gz.. installing alias mitem_visible.3menu.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/ncurses.3ncurses.gz.. installing alias curses.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/ncurses6-config.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/panel.3curses.gz.. installing alias bottom_panel.3curses.gz.. installing alias del_panel.3curses.gz.. installing alias hide_panel.3curses.gz.. installing alias move_panel.3curses.gz.. installing alias new_panel.3curses.gz.. installing alias panel_above.3curses.gz.. installing alias panel_below.3curses.gz.. installing alias panel_hidden.3curses.gz.. installing alias panel_userptr.3curses.gz.. installing alias panel_window.3curses.gz.. installing alias replace_panel.3curses.gz.. installing alias set_panel_userptr.3curses.gz.. installing alias show_panel.3curses.gz.. installing alias top_panel.3curses.gz.. installing alias update_panels.3curses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/resizeterm.3ncurses.gz.. installing alias is_term_resized.3ncurses.gz.. installing alias resize_term.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/tabs.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man5/term.5.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man7/term.7.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man5/terminfo.5.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/terminfo_variables.3ncurses.gz.. installing alias acs_map.3ncurses.gz.. installing alias boolcodes.3ncurses.gz.. installing alias boolfnames.3ncurses.gz.. installing alias boolnames.3ncurses.gz.. installing alias cur_term.3ncurses.gz.. installing alias numcodes.3ncurses.gz.. installing alias numfnames.3ncurses.gz.. installing alias numnames.3ncurses.gz.. installing alias SP.3ncurses.gz.. installing alias strcodes.3ncurses.gz.. installing alias strfnames.3ncurses.gz.. installing alias strnames.3ncurses.gz.. installing alias ttytype.3ncurses.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/tic.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/toe.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/tput.1.gz.. installing alias reset.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man1/tset.1.gz.. installing alias reset.1.gzinstalling /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/man/man3/wresize.3ncurses.gzmake[3]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/man<span class="token string">'cd include &amp;&amp; make -w -- BOOT_MEDIA=emmc CHIP=hi3516dv300 CROSS_COMPILE=arm-himix200-linux- DESTDIR="" RPATH_LIST="/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib" installmake[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/include<span class="token string">'mkdir -p /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling curses.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling unctrl.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ncurses_dll.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling term.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling termcap.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./tic.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./term_entry.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./nc_tparm.h in /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesmake[3]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/include<span class="token string">'cd ncurses &amp;&amp; make -w -- BOOT_MEDIA=emmc CHIP=hi3516dv300 CROSS_COMPILE=arm-himix200-linux- DESTDIR="" RPATH_LIST="/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib" installmake[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/ncurses<span class="token string">'mkdir -p /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//libinstalling ../lib/libncurses.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses.a/usr/bin/install -c -m 644 ../lib/libncurses.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses.ainstalling ../lib/libncurses_g.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses_g.a/usr/bin/install -c -m 644 ../lib/libncurses_g.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses_g.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses_g.amake[3]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/ncurses<span class="token string">'cd progs &amp;&amp; make -w -- BOOT_MEDIA=emmc CHIP=hi3516dv300 CROSS_COMPILE=arm-himix200-linux- DESTDIR="" RPATH_LIST="/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib" installmake[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/progs'<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/usr/bin/install <span class="token parameter variable">-c</span> tic     /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tic<span class="token operator">|</span>       <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>/usr/bin/install <span class="token parameter variable">-c</span> toe     /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> toe<span class="token operator">|</span>       <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>linking infotocap to tic<span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tic<span class="token operator">|</span>       <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> infotocap<span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">)</span>linking captoinfo to tic<span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tic<span class="token operator">|</span>       <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> captoinfo<span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">)</span>/usr/bin/install <span class="token parameter variable">-c</span> infocmp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> infocmp<span class="token operator">|</span>   <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>/usr/bin/install <span class="token parameter variable">-c</span> <span class="token function">clear</span>   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> <span class="token function">clear</span><span class="token operator">|</span>     <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>/usr/bin/install <span class="token parameter variable">-c</span> tabs    /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tabs<span class="token operator">|</span>      <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>/usr/bin/install <span class="token parameter variable">-c</span> tput    /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tput<span class="token operator">|</span>      <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>/usr/bin/install <span class="token parameter variable">-c</span> tset    /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/<span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tset<span class="token operator">|</span>      <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span>linking reset to tset<span class="token punctuation">(</span>cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin <span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-f</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> tset<span class="token operator">|</span>      <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span> <span class="token variable">`</span></span><span class="token builtin class-name">echo</span> reset<span class="token operator">|</span>     <span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s,x,x,'</span><span class="token operator">|</span><span class="token function">sed</span> <span class="token string">'s/$//'</span><span class="token variable"><span class="token variable">`</span><span class="token punctuation">)</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/progs'</span><span class="token builtin class-name">cd</span> panel <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/panel'</span>installing <span class="token punctuation">..</span>/lib/libpanel.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libpanel.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel.ainstalling <span class="token punctuation">..</span>/lib/libpanel_g.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel_g.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libpanel_g.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel_g.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libpanel_g.ainstalling ./panel.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/panel'</span><span class="token builtin class-name">cd</span> menu <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/menu'</span>installing <span class="token punctuation">..</span>/lib/libmenu.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libmenu.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu.ainstalling <span class="token punctuation">..</span>/lib/libmenu_g.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu_g.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libmenu_g.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu_g.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libmenu_g.ainstalling ./eti.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./menu.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/menu'</span><span class="token builtin class-name">cd</span> form <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/form'</span>installing <span class="token punctuation">..</span>/lib/libform.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libform.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform.ainstalling <span class="token punctuation">..</span>/lib/libform_g.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform_g.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libform_g.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform_g.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libform_g.ainstalling ./form.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/form'</span><span class="token builtin class-name">cd</span> <span class="token builtin class-name">test</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/test'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/test'</span><span class="token builtin class-name">cd</span> misc <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/misc'</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/tabset<span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span> <span class="token punctuation">\</span><span class="token assign-left variable">prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/ <span class="token punctuation">\</span><span class="token assign-left variable">exec_prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/ <span class="token punctuation">\</span><span class="token assign-left variable">bindir</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin <span class="token punctuation">\</span><span class="token assign-left variable">top_srcdir</span><span class="token operator">=</span><span class="token punctuation">..</span> <span class="token punctuation">\</span><span class="token assign-left variable">srcdir</span><span class="token operator">=</span>. <span class="token punctuation">\</span><span class="token assign-left variable">datadir</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share <span class="token punctuation">\</span><span class="token assign-left variable">ticdir</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfo <span class="token punctuation">\</span><span class="token assign-left variable">source</span><span class="token operator">=</span>terminfo.tmp <span class="token punctuation">\</span><span class="token assign-left variable">cross_compiling</span><span class="token operator">=</span>yes <span class="token punctuation">\</span>/bin/sh ./run_tic.sh** Building terminfo database, please wait<span class="token punctuation">..</span>.Running /usr/bin/tic to <span class="token function">install</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfo <span class="token punctuation">..</span>.        You may see messages regarding extended capabilities, e.g., AX.        These are extended terminal capabilities <span class="token function">which</span> are compiled        using                tic <span class="token parameter variable">-x</span>        If you have ncurses <span class="token number">4.2</span> applications, you should <span class="token builtin class-name">read</span> the INSTALL        document, and <span class="token function">install</span> the terminfo without the <span class="token parameter variable">-x</span> option.<span class="token number">1667</span> entries written to /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/share/terminfo** built new /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//share/terminfo** sym-linked /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/terminfo <span class="token keyword">for</span> compatibilityinstalling stdinstalling stdcrtinstalling vt100installing vt300/usr/bin/install <span class="token parameter variable">-c</span> ncurses-config /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//bin/ncurses6-configmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/misc'</span><span class="token builtin class-name">cd</span> c++ <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token parameter variable">-w</span> -- <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">DESTDIR</span><span class="token operator">=</span><span class="token string">""</span> <span class="token assign-left variable">RPATH_LIST</span><span class="token operator">=</span><span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib"</span> <span class="token function">install</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/c++'</span>installing <span class="token punctuation">..</span>/lib/libncurses++.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libncurses++.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++.ainstalling <span class="token punctuation">..</span>/lib/libncurses++_g.a as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++_g.a/usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token punctuation">..</span>/lib/libncurses++_g.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++_g.aarm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//lib/libncurses++_g.ainstalling ./cursesapp.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./cursesf.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./cursesm.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./cursesp.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./cursesw.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling ./cursslk.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesinstalling etip.h <span class="token keyword">in</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst//include/ncursesmake<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0/c++'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/ncurses-6.0'</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/<span class="token punctuation">;</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/<span class="token punctuation">;</span> <span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm"</span><span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> --disable-tui<span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span>-L/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/inst/lib <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin<span class="token punctuation">;</span> <span class="token assign-left variable">gdb_cv_prfpregset_t_broken</span><span class="token operator">=</span>no <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span><span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token function">popd</span><span class="token punctuation">;</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdbconfigure: WARNING: If you wanted to <span class="token builtin class-name">set</span> the <span class="token parameter variable">--build</span> type, don<span class="token string">'t use --host.    If a cross compiler is detected then cross compile mode will be used.checking build system type... x86_64-unknown-linux-gnuchecking host system type... arm-himix200-linux-gnuchecking target system type... arm-himix200-linux-gnuchecking for a BSD-compatible install... /usr/bin/install -cchecking whether ln works... yeschecking whether ln -s works... yeschecking for a sed that does not truncate output... /bin/sedchecking for gawk... gawkchecking for arm-himix200-linux-gcc... arm-himix200-linux-gccchecking for C compiler default output file name... a.outchecking whether the C compiler works... yeschecking whether we are cross compiling... yeschecking for suffix of executables...checking for suffix of object files... ochecking whether we are using the GNU C compiler... yeschecking whether arm-himix200-linux-gcc accepts -g... yeschecking for arm-himix200-linux-gcc option to accept ISO C89... none neededchecking for arm-himix200-linux-g++... arm-himix200-linux-g++checking whether we are using the GNU C++ compiler... yeschecking whether arm-himix200-linux-g++ accepts -g... yeschecking whether g++ accepts -static-libstdc++ -static-libgcc... yeschecking for arm-himix200-linux-gnatbind... nochecking for gnatbind... nochecking for arm-himix200-linux-gnatmake... nochecking for gnatmake... nochecking whether compiler driver understands Ada... nochecking how to compare bootstrapped objects... cmp --ignore-initial=16 $$f1 $$f2checking for objdir... .libschecking for version 0.10 of ISL... yeschecking for version 0.17.0 of CLooG... nochecking for version 0.18.0 of CLooG... nochecking for default BUILD_CONFIG...checking for --enable-vtable-verify... nochecking for bison... bison -ychecking for bison... bisonchecking for gm4... nochecking for gnum4... nochecking for m4... m4checking for flex... flexchecking for flex... flexchecking for makeinfo... makeinfochecking for expect... nochecking for runtest... nochecking for arm-himix200-linux-ar... arm-himix200-linux-archecking for arm-himix200-linux-as... arm-himix200-linux-aschecking for arm-himix200-linux-dlltool... nochecking for ld... (cached) /opt/hisi-linux/x86-arm/arm-himix200-linux/host_bin/../lib/gcc/arm-linux-gnueabi/6.3.0/../../../../arm-linux-gnueabi/bin/ldchecking for arm-himix200-linux-ld... (cached) /opt/hisi-linux/x86-arm/arm-himix200-linux/host_bin/../lib/gcc/arm-linux-gnueabi/6.3.0/../../../../arm-linux-gnueabi/bin/ldchecking for arm-himix200-linux-lipo... nochecking for arm-himix200-linux-nm... arm-himix200-linux-nmchecking for arm-himix200-linux-ranlib... arm-himix200-linux-ranlibchecking for arm-himix200-linux-strip... arm-himix200-linux-stripchecking for arm-himix200-linux-windres... nochecking for arm-himix200-linux-windmc... nochecking for arm-himix200-linux-objcopy... arm-himix200-linux-objcopychecking for arm-himix200-linux-objdump... arm-himix200-linux-objdumpchecking for arm-himix200-linux-readelf... arm-himix200-linux-readelfchecking where to find the target ar... pre-installedchecking where to find the target as... pre-installedchecking where to find the target cc... pre-installedchecking where to find the target c++... pre-installedchecking where to find the target c++ for libstdc++... pre-installedchecking where to find the target dlltool... pre-installedchecking where to find the target gcc... pre-installedchecking where to find the target gcj... pre-installedchecking where to find the target gfortran... pre-installedchecking where to find the target gccgo... pre-installedchecking where to find the target ld... pre-installedchecking where to find the target lipo... pre-installedchecking where to find the target nm... pre-installedchecking where to find the target objcopy... pre-installedchecking where to find the target objdump... pre-installedchecking where to find the target ranlib... pre-installedchecking where to find the target readelf... pre-installedchecking where to find the target strip... pre-installedchecking where to find the target windres... pre-installedchecking where to find the target windmc... pre-installedchecking whether to enable maintainer-specific portions of Makefiles... noconfigure: creating ./config.statusconfig.status: creating Makefileconfigure: cross-compiling for arm-himix200-linux-gnu is not supportedconfigure: WARNING: decimal float is not supported for this target, ignoredconfigure: WARNING: cannot check signal handling if cross compiling -- defaulting to noconfigure: WARNING: cannot check for sigsetjmp/siglongjmp if cross-compiling -- defaulting to missingconfigure: WARNING: cannot check strcoll if cross compiling -- defaulting to noconfigure: WARNING: cannot check ctype macros if cross compiling -- defaulting to noconfigure: WARNING: result yes guessed because of cross compilationconfigure: WARNING: expat is missing or unusable; some features may be unavailable.configure: WARNING: python is missing or unusable; some features may be unavailable.configure: WARNING: result yes guessed because of cross compilationconfigure: WARNING: babeltrace is missing or unusable; GDB is unable to read CTF data.configure: WARNING: result yes guessed because of cross compilation./../common/gentmap.c: In function ‘main’:./../common/gentmap.c:119:7: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]   if (strcmp (argv[1], "-h") == 0)       ^~~~~~Creating observer.itmpCreating observer.htmp/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/c-exp.y: warning: 39 shift/reduce conflicts [-Wconflicts-sr]/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/c-exp.y: warning: 53 reduce/reduce conflicts [-Wconflicts-rr]make[2]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1<span class="token string">'make[3]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1<span class="token string">'/bin/sh ./mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/binmkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/binmake[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd<span class="token string">'make  install-recursivemake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd<span class="token string">'Making install in docmake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd/doc<span class="token string">'test -z "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info" || /bin/mkdir -p "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info" /usr/bin/install -c -m 644 ./bfd.info '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info<span class="token string">' install-info --info-dir='</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info<span class="token string">' '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/bfd.info<span class="token string">'make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd/doc<span class="token string">'Making install in pomake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd/po<span class="token string">'if test -r .././../mkinstalldirs; then \  .././../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share; \else \  ../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share; \fimkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/da/LC_MESSAGESinstalling da.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/da/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/es/LC_MESSAGESinstalling es.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/es/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fi/LC_MESSAGESinstalling fi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fi/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fr/LC_MESSAGESinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fr/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/id/LC_MESSAGESinstalling id.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/id/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ja/LC_MESSAGESinstalling ja.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ja/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ro/LC_MESSAGESinstalling ro.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ro/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ru/LC_MESSAGESinstalling ru.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ru/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/rw/LC_MESSAGESinstalling rw.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/rw/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/sv/LC_MESSAGESinstalling sv.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/sv/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/tr/LC_MESSAGESinstalling tr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/tr/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/uk/LC_MESSAGESinstalling uk.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/uk/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/vi/LC_MESSAGESinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/vi/LC_MESSAGES/bfd.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/zh_CN/LC_MESSAGESinstalling zh_CN.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/zh_CN/LC_MESSAGES/bfd.moinstalling da.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/da/LC_MESSAGES/bfd.moinstalling es.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/es/LC_MESSAGES/bfd.moinstalling fi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fi/LC_MESSAGES/bfd.moinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fr/LC_MESSAGES/bfd.moinstalling id.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/id/LC_MESSAGES/bfd.moinstalling ja.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ja/LC_MESSAGES/bfd.moinstalling ro.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ro/LC_MESSAGES/bfd.moinstalling ru.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ru/LC_MESSAGES/bfd.moinstalling rw.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/rw/LC_MESSAGES/bfd.moinstalling sv.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/sv/LC_MESSAGES/bfd.moinstalling tr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/tr/LC_MESSAGES/bfd.moinstalling uk.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/uk/LC_MESSAGES/bfd.moinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/vi/LC_MESSAGES/bfd.moinstalling zh_CN.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/zh_CN/LC_MESSAGES/bfd.moif test "bfd" = "gettext"; then \  if test -r .././../mkinstalldirs; then \    .././../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po; \  else \    ../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po; \  fi; \  /usr/bin/install -c -m 644 ./Makefile.in.in \                  /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po/Makefile.in.in; \else \  : ; \fimake[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd/po<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd<span class="token string">'make[7]: Nothing to be done for '</span>install-exec-am<span class="token string">'.test -z "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include" || /bin/mkdir -p "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include" /usr/bin/install -c -m 644 bfd.h ./../include/ansidecl.h ./../include/symcat.h ./../include/bfdlink.h ./../include/plugin-api.h '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include<span class="token string">'test -z "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib" || /bin/mkdir -p "/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib" /bin/sh ./libtool   --mode=install /usr/bin/install -c   libbfd.la '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib'libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libbfd.lai /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libbfd.lalibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libbfd.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libbfd.alibtool: install: <span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libbfd.alibtool: install: arm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libbfd.alibtool: finish: <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/sbin"</span> ldconfig <span class="token parameter variable">-n</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib----------------------------------------------------------------------Libraries have been installed in:   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/libIf you ever happen to want to <span class="token function">link</span> against installed libraries<span class="token keyword">in</span> a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the <span class="token variable">`</span></span>-LLIBDIR<span class="token string">'flag during linking and do at least one of the following:   - add LIBDIR to the `LD_LIBRARY_PATH'</span> environment variable     during execution   - <span class="token function">add</span> LIBDIR to the <span class="token variable"><span class="token variable">`</span>LD_RUN_PATH' environment variable     during linking   - use the <span class="token variable">`</span></span>-Wl,-rpath -Wl,LIBDIR<span class="token string">' linker flag   - have your system administrator add LIBDIR to `/etc/ld.so.conf'</span>See any operating system documentation about shared libraries <span class="token keyword">for</span><span class="token function">more</span> information, such as the ld<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> and ld.so<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> manual pages.----------------------------------------------------------------------make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/bfd'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes'</span>Making <span class="token function">install</span> <span class="token keyword">in</span> <span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-exec-am'</span><span class="token builtin class-name">.</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include"</span> <span class="token operator">||</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include"</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./<span class="token punctuation">..</span>/include/dis-asm.h <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include'</span><span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib"</span> <span class="token operator">||</span> /bin/mkdir <span class="token parameter variable">-p</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib"</span> /bin/sh ./libtool   <span class="token parameter variable">--mode</span><span class="token operator">=</span>install /usr/bin/install <span class="token parameter variable">-c</span>   libopcodes.la <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib'</span>libtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libopcodes.lai /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libopcodes.lalibtool: install: /usr/bin/install <span class="token parameter variable">-c</span> .libs/libopcodes.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libopcodes.alibtool: install: <span class="token function">chmod</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libopcodes.alibtool: install: arm-himix200-linux-ranlib /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libopcodes.alibtool: finish: <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">"/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/sbin"</span> ldconfig <span class="token parameter variable">-n</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib----------------------------------------------------------------------Libraries have been installed in:   /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/libIf you ever happen to want to <span class="token function">link</span> against installed libraries<span class="token keyword">in</span> a given directory, LIBDIR, you must either use libtool, andspecify the full pathname of the library, or use the <span class="token variable"><span class="token variable">`</span>-LLIBDIR'flag during linking and <span class="token keyword">do</span> at least one of the following:   - <span class="token function">add</span> LIBDIR to the <span class="token variable">`</span></span>LD_LIBRARY_PATH<span class="token string">' environment variable     during execution   - add LIBDIR to the `LD_RUN_PATH'</span> environment variable     during linking   - use the <span class="token variable"><span class="token variable">`</span>-Wl,-rpath -Wl,LIBDIR' linker flag   - have your system administrator <span class="token function">add</span> LIBDIR to <span class="token variable">`</span></span>/etc/ld.so.conf<span class="token string">'See any operating system documentation about shared libraries formore information, such as the ld(1) and ld.so(8) manual pages.----------------------------------------------------------------------make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes<span class="token string">'make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes<span class="token string">'Making install in pomake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes/po<span class="token string">'if test -r .././../mkinstalldirs; then \  .././../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share; \else \  ../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share; \fiinstalling da.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/da/LC_MESSAGES/opcodes.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/de/LC_MESSAGESinstalling de.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/de/LC_MESSAGES/opcodes.moinstalling es.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/es/LC_MESSAGES/opcodes.moinstalling fi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fi/LC_MESSAGES/opcodes.moinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fr/LC_MESSAGES/opcodes.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ga/LC_MESSAGESinstalling ga.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ga/LC_MESSAGES/opcodes.moinstalling id.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/id/LC_MESSAGES/opcodes.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/it/LC_MESSAGESinstalling it.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/it/LC_MESSAGES/opcodes.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/nl/LC_MESSAGESinstalling nl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/nl/LC_MESSAGES/opcodes.momkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/pt_BR/LC_MESSAGESinstalling pt_BR.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/pt_BR/LC_MESSAGES/opcodes.moinstalling ro.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ro/LC_MESSAGES/opcodes.moinstalling sv.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/sv/LC_MESSAGES/opcodes.moinstalling tr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/tr/LC_MESSAGES/opcodes.moinstalling uk.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/uk/LC_MESSAGES/opcodes.moinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/vi/LC_MESSAGES/opcodes.moinstalling zh_CN.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/zh_CN/LC_MESSAGES/opcodes.moinstalling da.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/da/LC_MESSAGES/opcodes.moinstalling de.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/de/LC_MESSAGES/opcodes.moinstalling es.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/es/LC_MESSAGES/opcodes.moinstalling fi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fi/LC_MESSAGES/opcodes.moinstalling fr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/fr/LC_MESSAGES/opcodes.moinstalling ga.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ga/LC_MESSAGES/opcodes.moinstalling id.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/id/LC_MESSAGES/opcodes.moinstalling it.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/it/LC_MESSAGES/opcodes.moinstalling nl.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/nl/LC_MESSAGES/opcodes.moinstalling pt_BR.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/pt_BR/LC_MESSAGES/opcodes.moinstalling ro.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/ro/LC_MESSAGES/opcodes.moinstalling sv.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/sv/LC_MESSAGES/opcodes.moinstalling tr.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/tr/LC_MESSAGES/opcodes.moinstalling uk.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/uk/LC_MESSAGES/opcodes.moinstalling vi.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/vi/LC_MESSAGES/opcodes.moinstalling zh_CN.gmo as /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/zh_CN/LC_MESSAGES/opcodes.moif test "opcodes" = "gettext"; then \  if test -r .././../mkinstalldirs; then \    .././../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po; \  else \    ../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po; \  fi; \  /usr/bin/install -c -m 644 ./Makefile.in.in \                  /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gettext/po/Makefile.in.in; \else \  : ; \fimake[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes/po<span class="token string">'make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/opcodes<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/etc<span class="token string">'make[4]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/etc<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/intl<span class="token string">'make[4]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/intl<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libdecnumber<span class="token string">'make[4]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libdecnumber<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty/testsuite<span class="token string">'make[5]: Nothing to be done for '</span>all<span class="token string">'.make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty/testsuite<span class="token string">'if test -n ""; then \        /bin/sh ./../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/`arm-himix200-linux-gcc -mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm -print-multi-os-directory`; \        /usr/bin/install -c -m 644 ./libiberty.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/`arm-himix200-linux-gcc -mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm -print-multi-os-directory`/./libiberty.an; \        ( cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/`arm-himix200-linux-gcc -mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm -print-multi-os-directory` ; chmod 644 ./libiberty.an ;arm-himix200-linux-ranlib ./libiberty.an ); \        mv -f /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/`arm-himix200-linux-gcc -mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm -print-multi-os-directory`/./libiberty.an /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/`arm-himix200-linux-gcc -mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w -lm -print-multi-os-directory`/./libiberty.a; \        case "" in \          /*)    thd=;; \          *)     thd=/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include/;; \        esac; \        /bin/sh ./../mkinstalldirs ${thd}; \        for h in ./../include/ansidecl.h ./../include/demangle.h ./../include/dyn-string.h ./../include/fibheap.h ./../include/floatformat.h ./../include/hashtab.h ./../include/libiberty.h ./../include/objalloc.h ./../include/partition.h ./../include/safe-ctype.h ./../include/sort.h ./../include/splay-tree.h ./../include/timeval-utils.h; do \          /usr/bin/install -c -m 644 $h ${thd}; \        done; \fimake[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty/testsuite<span class="token string">'make[5]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty/testsuite<span class="token string">'make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/libiberty<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/readline<span class="token string">'make[4]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/readline<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/arm<span class="token string">'/bin/sh ./../../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/binmkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin/bin/sh ./../../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/libn=`echo run | sed '</span>s,y,y,<span class="token string">'`; \/usr/bin/install -c run /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin/$nn=`echo libsim.a | sed s/libsim.a/libarm-himix200-linux-sim.a/`; \/usr/bin/install -c -m 644 libsim.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/$n ; \( cd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib ; arm-himix200-linux-ranlib $n )make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/arm<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/testsuite<span class="token string">'make[5]: Nothing to be done for '</span><span class="token function">install</span><span class="token string">'.make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/testsuite<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/common<span class="token string">'/bin/sh ./../../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1mkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1n=`echo run | sed '</span>s,y,y,<span class="token string">'`; \/usr/bin/install -c -m 644 ./run.1 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1/$n.1make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim/common<span class="token string">'make[4]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/sim<span class="token string">'make[4]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make  all-recursivemake[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[10]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[10]: Nothing to be done for '</span>all-am<span class="token string">'.make[10]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/doc<span class="token string">'make[6]: Nothing to be done for '</span>all<span class="token string">'.make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/doc<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[10]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make  all-recursivemake[11]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[12]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[12]: Nothing to be done for '</span>all-am<span class="token string">'.make[12]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[11]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[10]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver<span class="token string">'make[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite<span class="token string">'make[9]: Nothing to be done for '</span>all<span class="token string">'.make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver<span class="token string">'make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[10]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make  all-recursivemake[11]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[12]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[12]: Nothing to be done for '</span>all-am<span class="token string">'.make[12]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[11]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[10]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import<span class="token string">'make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver<span class="token string">'make[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite<span class="token string">'make[9]: Nothing to be done for '</span>all<span class="token string">'.make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver<span class="token string">'make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory<span class="token string">'make[6]: Nothing to be done for '</span>all<span class="token string">'.make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory<span class="token string">'make[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[8]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make  all-recursivemake[9]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[10]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[10]: Nothing to be done for '</span>all-am<span class="token string">'.make[10]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[9]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[8]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import<span class="token string">'make[7]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[6]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib<span class="token string">'make[5]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[5]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'/bin/sh ./../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/sharecats=""; for cat in $cats; do \  lang=`basename $cat | sed '</span>s/<span class="token punctuation">\</span>.gmo$//<span class="token string">'`; \  if [ -f $cat ]; then :; \  elif [ -f ./$cat ]; then cat=./$cat; \  else continue; \  fi; \  dir=/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/locale/$lang/LC_MESSAGES; \  echo /bin/sh ./../mkinstalldirs $dir; \  /bin/sh ./../mkinstalldirs $dir || exit 1; \  echo /usr/bin/install -c -m 644 $cat $dir/gdb.mo; \  /usr/bin/install -c -m 644 $cat $dir/gdb.mo; \donetransformed_name=`t='</span>s,y,y,<span class="token string">'; \                  echo gdb | sed -e "$t"` ; \        if test "x$transformed_name" = x; then \          transformed_name=gdb ; \        else \          true ; \        fi ; \        /bin/sh ./../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin ; \        /usr/bin/install -c gdb \                /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin/$transformed_name ; \        /bin/sh ./../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include/gdb ; \        /usr/bin/install -c -m 644 jit-reader.h /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include/gdb/jit-reader.hmkdir -p -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include/gdbif test "x1" != x; \then \  transformed_name=`t='</span>s,y,y,<span class="token string">'; \                    echo gcore | sed -e "$t"` ; \          if test "x$transformed_name" = x; then \            transformed_name=gcore ; \          else \            true ; \          fi ; \          /bin/sh ./../mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin ; \          /usr/bin/install -c gcore \                  /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin/$transformed_name; \fimake[6]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb<span class="token string">'make[7]: Entering directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/doc<span class="token string">'(test "ln -s" = "ln -s" &amp;&amp; \  ln -s ./all-cfg.texi gdb-cfg.texi) || \ln ./all-cfg.texi gdb-cfg.texi || \cp ./all-cfg.texi gdb-cfg.texidate=`sed -n -e '</span>s/^.* BFD_VERSION_DATE <span class="token punctuation">\</span><span class="token punctuation">(</span>.*<span class="token punctuation">\</span><span class="token punctuation">)</span>$/<span class="token punctuation">\</span><span class="token number">1</span>/p<span class="token string">' ./../../bfd/version.h`; \sed -e "s/DATE/$date/" &lt; ./../version.in &gt; version.substecho "@set GDBVN `sed q version.subst`" &gt; ./GDBvn.newif [ -n "(GDB) " ]; then \  echo "@set VERSION_PACKAGE (GDB) " &gt;&gt; ./GDBvn.new; \fiecho "@set BUGURL @uref{http://www.gnu.org/software/gdb/bugs/}" &gt;&gt; ./GDBvn.newif [ "@uref{http://www.gnu.org/software/gdb/bugs/}" = "@uref{http://www.gnu.org/software/gdb/bugs/}" ]; then \  echo "@set BUGURL_DEFAULT" &gt;&gt; ./GDBvn.new; \fiif test -z "-I ./../../readline/doc"; then \  echo "@set SYSTEM_READLINE" &gt;&gt; ./GDBvn.new; \fiif [ -n "" ]; then \  echo "@set SYSTEM_GDBINIT " &gt;&gt; ./GDBvn.new; \fimv GDBvn.new GDBvn.teximakeinfo --split-size=5000000 --split-size=5000000  -DHAVE_MAKEINFO_CLICK -I ./../../readline/doc -I ./../mi -I . \        -o gdb.info ./gdb.texinfo./gdb.texinfo:1959: warning: @xref node name should not contain `.'</span>./gdb.texinfo:17854: warning: @ref <span class="token function">node</span> name should not contain <span class="token variable"><span class="token variable">`</span>.'./python.texi:3524: warning: @ref <span class="token function">node</span> name should not contain <span class="token variable">`</span></span><span class="token builtin class-name">.</span><span class="token string">'./python.texi:3550: warning: @ref node name should not contain `.'</span>makeinfo --split-size<span class="token operator">=</span><span class="token number">5000000</span> --split-size<span class="token operator">=</span><span class="token number">5000000</span>  <span class="token parameter variable">-DHAVE_MAKEINFO_CLICK</span> <span class="token parameter variable">-I</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-o</span> annotate.info ./annotate.texinfo/bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-1 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-1 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-2 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-2 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-3 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-3 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-4 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-4 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-5 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-5 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-6 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-6 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./gdb.info-7 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info-7 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./stabs.info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/stabs.info /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./annotate.info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/annotate.info install-info --info-dir<span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/gdb.info install-info --info-dir<span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/stabs.info install-info --info-dir<span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/info/annotate.info<span class="token function">touch</span> gdb.1perl ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl  <span class="token parameter variable">-DHAVE_MAKEINFO_CLICK</span> <span class="token parameter variable">-Dman</span> <span class="token parameter variable">-Dgdb</span> <span class="token operator">&lt;</span> ./gdb.texinfo <span class="token operator">&gt;</span> gdb.podUnescaped left brace <span class="token keyword">in</span> regex is illegal here <span class="token keyword">in</span> regex<span class="token punctuation">;</span> marked by <span class="token operator">&lt;</span>-- HERE <span class="token keyword">in</span> m/^<span class="token punctuation">\</span>@strong<span class="token punctuation">{</span> <span class="token operator">&lt;</span>-- HERE <span class="token punctuation">(</span>.*<span class="token punctuation">)</span><span class="token punctuation">}</span>$/ at ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl line <span class="token number">314</span>.Makefile:626: recipe <span class="token keyword">for</span> target <span class="token string">'gdb.1'</span> failedmake<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: <span class="token punctuation">[</span>gdb.1<span class="token punctuation">]</span> Error <span class="token number">255</span> <span class="token punctuation">(</span>ignored<span class="token punctuation">)</span><span class="token punctuation">(</span>pod2man <span class="token parameter variable">--center</span><span class="token operator">=</span><span class="token string">"GNU Development Tools"</span> <span class="token parameter variable">--release</span><span class="token operator">=</span><span class="token string">"gdb-<span class="token variable"><span class="token variable">`</span><span class="token function">sed</span> q version.subst<span class="token variable">`</span></span>"</span> <span class="token parameter variable">--section</span><span class="token operator">=</span><span class="token number">1</span> gdb.pod <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'/^.if n .na/d'</span> <span class="token operator">&gt;</span> gdb.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> <span class="token parameter variable">-f</span> gdb.1.T<span class="token variable">$$</span> gdb.1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>rm <span class="token parameter variable">-f</span> gdb.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">)</span>pod2man: unable to <span class="token function">format</span> gdb.pod<span class="token function">rm</span> <span class="token parameter variable">-f</span> gdb.pod<span class="token function">touch</span> gdbserver.1perl ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl  <span class="token parameter variable">-DHAVE_MAKEINFO_CLICK</span> <span class="token parameter variable">-Dman</span> <span class="token parameter variable">-Dgdbserver</span> <span class="token operator">&lt;</span> ./gdb.texinfo <span class="token operator">&gt;</span> gdbserver.podUnescaped left brace <span class="token keyword">in</span> regex is illegal here <span class="token keyword">in</span> regex<span class="token punctuation">;</span> marked by <span class="token operator">&lt;</span>-- HERE <span class="token keyword">in</span> m/^<span class="token punctuation">\</span>@strong<span class="token punctuation">{</span> <span class="token operator">&lt;</span>-- HERE <span class="token punctuation">(</span>.*<span class="token punctuation">)</span><span class="token punctuation">}</span>$/ at ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl line <span class="token number">314</span>.Makefile:633: recipe <span class="token keyword">for</span> target <span class="token string">'gdbserver.1'</span> failedmake<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: <span class="token punctuation">[</span>gdbserver.1<span class="token punctuation">]</span> Error <span class="token number">255</span> <span class="token punctuation">(</span>ignored<span class="token punctuation">)</span><span class="token punctuation">(</span>pod2man <span class="token parameter variable">--center</span><span class="token operator">=</span><span class="token string">"GNU Development Tools"</span> <span class="token parameter variable">--release</span><span class="token operator">=</span><span class="token string">"gdb-<span class="token variable"><span class="token variable">`</span><span class="token function">sed</span> q version.subst<span class="token variable">`</span></span>"</span> <span class="token parameter variable">--section</span><span class="token operator">=</span><span class="token number">1</span> gdbserver.pod <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'/^.if n .na/d'</span> <span class="token operator">&gt;</span> gdbserver.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> <span class="token parameter variable">-f</span> gdbserver.1.T<span class="token variable">$$</span> gdbserver.1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>rm <span class="token parameter variable">-f</span> gdbserver.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">)</span>pod2man: unable to <span class="token function">format</span> gdbserver.pod<span class="token function">rm</span> <span class="token parameter variable">-f</span> gdbserver.pod<span class="token function">touch</span> gcore.1perl ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl  <span class="token parameter variable">-DHAVE_MAKEINFO_CLICK</span> <span class="token parameter variable">-Dman</span> <span class="token parameter variable">-Dgcore</span> <span class="token operator">&lt;</span> ./gdb.texinfo <span class="token operator">&gt;</span> gcore.podUnescaped left brace <span class="token keyword">in</span> regex is illegal here <span class="token keyword">in</span> regex<span class="token punctuation">;</span> marked by <span class="token operator">&lt;</span>-- HERE <span class="token keyword">in</span> m/^<span class="token punctuation">\</span>@strong<span class="token punctuation">{</span> <span class="token operator">&lt;</span>-- HERE <span class="token punctuation">(</span>.*<span class="token punctuation">)</span><span class="token punctuation">}</span>$/ at ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl line <span class="token number">314</span>.Makefile:640: recipe <span class="token keyword">for</span> target <span class="token string">'gcore.1'</span> failedmake<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: <span class="token punctuation">[</span>gcore.1<span class="token punctuation">]</span> Error <span class="token number">255</span> <span class="token punctuation">(</span>ignored<span class="token punctuation">)</span><span class="token punctuation">(</span>pod2man <span class="token parameter variable">--center</span><span class="token operator">=</span><span class="token string">"GNU Development Tools"</span> <span class="token parameter variable">--release</span><span class="token operator">=</span><span class="token string">"gdb-<span class="token variable"><span class="token variable">`</span><span class="token function">sed</span> q version.subst<span class="token variable">`</span></span>"</span> <span class="token parameter variable">--section</span><span class="token operator">=</span><span class="token number">1</span> gcore.pod <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'/^.if n .na/d'</span> <span class="token operator">&gt;</span> gcore.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> <span class="token parameter variable">-f</span> gcore.1.T<span class="token variable">$$</span> gcore.1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>rm <span class="token parameter variable">-f</span> gcore.1.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">)</span>pod2man: unable to <span class="token function">format</span> gcore.pod<span class="token function">rm</span> <span class="token parameter variable">-f</span> gcore.pod<span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1"</span> <span class="token operator">||</span> /bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1"</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token string">'gdb.1'</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1/gdb.1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token string">'gdbserver.1'</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1/gdbserver.1'</span> /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token string">'gcore.1'</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man1/gcore.1'</span><span class="token function">touch</span> gdbinit.5perl ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl  <span class="token parameter variable">-DHAVE_MAKEINFO_CLICK</span> <span class="token parameter variable">-Dman</span> <span class="token parameter variable">-Dgdbinit</span> <span class="token operator">&lt;</span> ./gdb.texinfo <span class="token operator">&gt;</span> gdbinit.podUnescaped left brace <span class="token keyword">in</span> regex is illegal here <span class="token keyword">in</span> regex<span class="token punctuation">;</span> marked by <span class="token operator">&lt;</span>-- HERE <span class="token keyword">in</span> m/^<span class="token punctuation">\</span>@strong<span class="token punctuation">{</span> <span class="token operator">&lt;</span>-- HERE <span class="token punctuation">(</span>.*<span class="token punctuation">)</span><span class="token punctuation">}</span>$/ at ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/etc/texi2pod.pl line <span class="token number">314</span>.Makefile:647: recipe <span class="token keyword">for</span> target <span class="token string">'gdbinit.5'</span> failedmake<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: <span class="token punctuation">[</span>gdbinit.5<span class="token punctuation">]</span> Error <span class="token number">255</span> <span class="token punctuation">(</span>ignored<span class="token punctuation">)</span><span class="token punctuation">(</span>pod2man <span class="token parameter variable">--center</span><span class="token operator">=</span><span class="token string">"GNU Development Tools"</span> <span class="token parameter variable">--release</span><span class="token operator">=</span><span class="token string">"gdb-<span class="token variable"><span class="token variable">`</span><span class="token function">sed</span> q version.subst<span class="token variable">`</span></span>"</span> <span class="token parameter variable">--section</span><span class="token operator">=</span><span class="token number">5</span> gdbinit.pod <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">'/^.if n .na/d'</span> <span class="token operator">&gt;</span> gdbinit.5.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> <span class="token parameter variable">-f</span> gdbinit.5.T<span class="token variable">$$</span> gdbinit.5<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>rm <span class="token parameter variable">-f</span> gdbinit.5.T<span class="token variable">$$</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">)</span>pod2man: unable to <span class="token function">format</span> gdbinit.pod<span class="token function">rm</span> <span class="token parameter variable">-f</span> gdbinit.pod<span class="token builtin class-name">test</span> <span class="token parameter variable">-z</span> <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man5"</span> <span class="token operator">||</span> /bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs <span class="token string">"/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man5"</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man5 /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token string">'gdbinit.5'</span> <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/man/man5/gdbinit.5'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/doc'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span><span class="token assign-left variable">n</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> gdbserver <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,y,y,'</span><span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token variable">$n</span> <span class="token operator">=</span> x <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token assign-left variable">n</span><span class="token operator">=</span>gdbserver<span class="token punctuation">;</span> <span class="token keyword">else</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token punctuation">[</span> x<span class="token string">""</span> <span class="token operator">!=</span> x <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>        /bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib<span class="token punctuation">;</span> <span class="token punctuation">\</span>        /usr/bin/install <span class="token parameter variable">-c</span> libinproctrace.so /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/libinproctrace.so<span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>/bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin<span class="token punctuation">;</span> <span class="token punctuation">\</span>/usr/bin/install <span class="token parameter variable">-c</span> gdbserver /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/bin/<span class="token variable">$n</span><span class="token comment"># Note that we run install and not install-only, as the latter</span><span class="token comment"># is not part of GNU standards and in particular not provided</span><span class="token comment"># in libiberty.</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span><span class="token function">make</span>  install-recursivemake<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token function">yes</span> <span class="token operator">=</span> no<span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token keyword">case</span> <span class="token string">'linux-gnu'</span> <span class="token keyword">in</span> <span class="token punctuation">\</span>    darwin<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span>*<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>true <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>    darwin* <span class="token operator">|</span> cygwin* <span class="token operator">|</span> mingw* <span class="token operator">|</span> pw32* <span class="token operator">|</span> cegcc*<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>false <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>    *<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>true <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">esac</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>false <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token variable">$need_charset_alias</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/gnulib/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias<span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token function">sed</span> <span class="token parameter variable">-f</span> ref-add.sed /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token operator">&gt;</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>  /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token keyword">if</span> <span class="token variable">$need_charset_alias</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>    <span class="token function">sed</span> <span class="token parameter variable">-f</span> ref-add.sed charset.alias <span class="token operator">&gt;</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token punctuation">;</span> <span class="token punctuation">\</span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>make<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-data-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-gnulib-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-n</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>        /bin/sh <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/<span class="token variable"><span class="token variable">`</span>arm-himix200-linux-gcc <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-lm</span> -print-multi-os-directory<span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./libiberty.a /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/<span class="token variable"><span class="token variable">`</span>arm-himix200-linux-gcc <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-lm</span> -print-multi-os-directory<span class="token variable">`</span></span>/./libiberty.an<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token punctuation">(</span> <span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/<span class="token variable"><span class="token variable">`</span>arm-himix200-linux-gcc <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-lm</span> -print-multi-os-directory<span class="token variable">`</span></span> <span class="token punctuation">;</span> <span class="token function">chmod</span> <span class="token number">644</span> ./libiberty.an <span class="token punctuation">;</span>arm-himix200-linux-ranlib ./libiberty.an <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">mv</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/<span class="token variable"><span class="token variable">`</span>arm-himix200-linux-gcc <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-lm</span> -print-multi-os-directory<span class="token variable">`</span></span>/./libiberty.an /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/<span class="token variable"><span class="token variable">`</span>arm-himix200-linux-gcc <span class="token parameter variable">-mcpu</span><span class="token operator">=</span>cortex-a7 -mfloat-abi<span class="token operator">=</span>softfp <span class="token parameter variable">-mfpu</span><span class="token operator">=</span>neon-vfpv4 <span class="token parameter variable">-w</span> <span class="token parameter variable">-lm</span> -print-multi-os-directory<span class="token variable">`</span></span>/./libiberty.a<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token keyword">case</span> <span class="token string">""</span> <span class="token keyword">in</span> <span class="token punctuation">\</span>          /*<span class="token punctuation">)</span>    <span class="token assign-left variable">thd</span><span class="token operator">=</span><span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>          *<span class="token punctuation">)</span>     <span class="token assign-left variable">thd</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/include/<span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token keyword">esac</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        /bin/sh <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/mkinstalldirs <span class="token variable">${thd}</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token keyword">for</span> <span class="token for-or-select variable">h</span> <span class="token keyword">in</span> <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/ansidecl.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/demangle.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/dyn-string.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/fibheap.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/floatformat.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/hashtab.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/libiberty.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/objalloc.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/partition.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/safe-ctype.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/sort.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/splay-tree.h <span class="token punctuation">..</span>/./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/libiberty/<span class="token punctuation">..</span>/include/timeval-utils.h<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>          /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token variable">$h</span> <span class="token variable">${thd}</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token keyword">done</span><span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver/testsuite'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver/build-libiberty-gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdbserver'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory'</span>/bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/syscalls<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/syscalls<span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">'gdb-syscalls.dtd arm-linux.xml ppc-linux.xml ppc64-linux.xml i386-linux.xml amd64-linux.xml sparc-linux.xml sparc64-linux.xml mips-o32-linux.xml mips-n32-linux.xml mips-n64-linux.xml s390-linux.xml s390x-linux.xml'</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$files</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>  <span class="token assign-left variable">f</span><span class="token operator">=</span>./<span class="token punctuation">..</span>/syscalls/<span class="token variable">$file</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token variable">$f</span> <span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token variable">$f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/syscalls <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span><span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">''</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token string">"x<span class="token variable">$files</span>"</span> <span class="token operator">!=</span> x <span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$files</span> <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    <span class="token assign-left variable">dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,/[^/]*$,,'</span><span class="token variable">`</span></span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/python/<span class="token variable">$dir</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./python/<span class="token variable">$file</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/python/<span class="token variable">$dir</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span><span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">''</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token string">"x<span class="token variable">$files</span>"</span> <span class="token operator">!=</span> x <span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$files</span> <span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>    <span class="token assign-left variable">dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$file</span>"</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">'s,/[^/]*$,,'</span><span class="token variable">`</span></span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/guile/<span class="token variable">$dir</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> ./guile/<span class="token variable">$file</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/guile/<span class="token variable">$dir</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">done</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>/bin/sh ./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/system-gdbinit<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> -- /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/system-gdbinit<span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token string">'elinos.py wrs-linux.py'</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$files</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token punctuation">\</span>  <span class="token assign-left variable">f</span><span class="token operator">=</span>./<span class="token punctuation">..</span>/system-gdbinit/<span class="token variable">$file</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token variable">$f</span> <span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> <span class="token variable">$f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/share/gdb/system-gdbinit <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">done</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/data-directory'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span><span class="token function">make</span>  all-recursivemake<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'all-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span><span class="token function">make</span>  install-recursivemake<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token function">yes</span> <span class="token operator">=</span> no<span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token keyword">case</span> <span class="token string">'linux-gnu'</span> <span class="token keyword">in</span> <span class="token punctuation">\</span>    darwin<span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">]</span>*<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>true <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>    darwin* <span class="token operator">|</span> cygwin* <span class="token operator">|</span> mingw* <span class="token operator">|</span> pw32* <span class="token operator">|</span> cegcc*<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>false <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>    *<span class="token punctuation">)</span> <span class="token punctuation">\</span>      <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>true <span class="token punctuation">;</span><span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">esac</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token assign-left variable">need_charset_alias</span><span class="token operator">=</span>false <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token variable">$need_charset_alias</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  /bin/sh <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/./gnulib/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/mkinstalldirs /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias<span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>  <span class="token function">sed</span> <span class="token parameter variable">-f</span> ref-add.sed /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token operator">&gt;</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>  /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">else</span> <span class="token punctuation">\</span>  <span class="token keyword">if</span> <span class="token variable">$need_charset_alias</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token punctuation">\</span>    <span class="token function">sed</span> <span class="token parameter variable">-f</span> ref-add.sed charset.alias <span class="token operator">&gt;</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>    /usr/bin/install <span class="token parameter variable">-c</span> <span class="token parameter variable">-m</span> <span class="token number">644</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.alias <span class="token punctuation">;</span> <span class="token punctuation">\</span>    <span class="token function">rm</span> <span class="token parameter variable">-f</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/bin/lib/charset.tmp <span class="token punctuation">;</span> <span class="token punctuation">\</span>  <span class="token keyword">fi</span> <span class="token punctuation">;</span> <span class="token punctuation">\</span><span class="token keyword">fi</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-data-am'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib/import'</span>make<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/build-gnulib'</span>make<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb'</span>make<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb'</span>make<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb'</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Nothing to be <span class="token keyword">done</span> <span class="token keyword">for</span> <span class="token string">'install-target'</span><span class="token builtin class-name">.</span>make<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1'</span>make<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1'</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb<span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-7.9.1/gdb/gdb /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-arm-himix200-linux -rf<span class="token punctuation">;</span> <span class="token punctuation">\</span>make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Leaving directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb'</span><span class="token function">cp</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/gdb/gdb-arm-himix200-linux /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibc<span class="token function">make</span> <span class="token parameter variable">-C</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/make<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: Entering directory <span class="token string">'/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils'</span><span class="token function">rm</span> zlib-1.2.11 -rf<span class="token punctuation">;</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> zlib-1.2.11.tar.gz<span class="token punctuation">;</span><span class="token function">pushd</span> zlib-1.2.11/<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token builtin class-name">export</span> <span class="token assign-left variable">CC</span><span class="token operator">=</span>arm-himix200-linux-gcc<span class="token punctuation">;</span><span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>zlib_install<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/zlib-1.2.11 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utilsChecking <span class="token keyword">for</span> shared library support<span class="token punctuation">..</span>.Building shared library libz.so.1.2.11 with arm-himix200-linux-gcc.Checking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> off64_t<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> fseeko<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> strerror<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> stdarg.h<span class="token punctuation">..</span>. Yes.Checking whether to use vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span> or s<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. using vs<span class="token punctuation">[</span>n<span class="token punctuation">]</span>printf<span class="token punctuation">(</span><span class="token punctuation">)</span>.Checking <span class="token keyword">for</span> vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> stdio.h<span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> <span class="token builtin class-name">return</span> value of vsnprintf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. Yes.Checking <span class="token keyword">for</span> attribute<span class="token punctuation">(</span>visibility<span class="token punctuation">)</span> support<span class="token punctuation">..</span>. Yes.~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils<span class="token function">rm</span> libuuid-1.0.3 -rf<span class="token punctuation">;</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> libuuid-1.0.3.tar.gz<span class="token punctuation">;</span><span class="token function">pushd</span> libuuid-1.0.3/<span class="token punctuation">;</span><span class="token punctuation">\</span>        ./configure <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/libuuid-1.0.3/_install<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span><span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/libuuid-1.0.3 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utilschecking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-strip<span class="token punctuation">..</span>. arm-himix200-linux-stripchecking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking build system type<span class="token punctuation">..</span>. x86_64-unknown-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. arm-himix200-linux-gnuchecking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking <span class="token keyword">for</span> arm-himix200-linux-gcc<span class="token punctuation">..</span>. arm-himix200-linux-gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether arm-himix200-linux-gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking dependency style of arm-himix200-linux-gcc<span class="token punctuation">..</span>. gcc3checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by arm-himix200-linux-gcc<span class="token punctuation">..</span>. /opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking whether the shell understands some XSI constructs<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether the shell understands <span class="token string">"+="</span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to arm-himix200-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-unknown-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> arm-himix200-linux-objdump<span class="token punctuation">..</span>. arm-himix200-linux-objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> arm-himix200-linux-dlltool<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> arm-himix200-linux-ar<span class="token punctuation">..</span>. arm-himix200-linux-archecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> arm-himix200-linux-strip<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> arm-himix200-linux-stripchecking <span class="token keyword">for</span> arm-himix200-linux-ranlib<span class="token punctuation">..</span>. arm-himix200-linux-ranlibchecking <span class="token builtin class-name">command</span> to parse /opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm <span class="token parameter variable">-B</span> output from arm-himix200-linux-gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> arm-himix200-linux-mt<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtconfigure: WARNING: using cross tools not prefixed with <span class="token function">host</span> tripletchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking how to run the C preprocessor<span class="token punctuation">..</span>. arm-himix200-linux-gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> arm-himix200-linux-gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> arm-himix200-linux-gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the arm-himix200-linux-gcc linker <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token parameter variable">-lc</span> should be explicitly linked in<span class="token punctuation">..</span>. nochecking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> arm-himix200-linux-gccchecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether arm-himix200-linux-gcc accepts -g<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc option to accept ISO C89<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> none neededchecking dependency style of arm-himix200-linux-gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> gcc3checking <span class="token keyword">for</span> library containing socket<span class="token punctuation">..</span>. none requiredchecking fcntl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking fcntl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> fcntl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking limits.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking limits.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> limits.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking netinet/in.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking netinet/in.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> netinet/in.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking sys/file.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/file.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/file.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ioctl.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/ioctl.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/ioctl.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/socket.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/socket.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/socket.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/time.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/time.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether _SC_HOST_NAME_MAX is declared<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> int32_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> mode_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> size_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ssize_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint16_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint32_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint64_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> uint8_t<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ftruncate<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> gettimeofday<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memset<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> socket<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strtoul<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> usleep<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> srandom<span class="token punctuation">..</span>. <span class="token function">yes</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating Makefileconfig.status: creating uuid.pcconfig.status: creating config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commandsIn <span class="token function">file</span> included from /opt/hisi-linux/x86-arm/arm-himix200-linux/target/usr/include/bits/libc-header-start.h:33:0,                 from /opt/hisi-linux/x86-arm/arm-himix200-linux/target/usr/include/stdio.h:28,                 from gen_uuid.c:46:/opt/hisi-linux/x86-arm/arm-himix200-linux/target/usr/include/features.h:180:3: warning: <span class="token comment">#warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-Wcpp]</span> <span class="token comment"># warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"</span>   ^~~~~~~gen_uuid.c: In <span class="token keyword">function</span> <span class="token string">'get_clock'</span><span class="token builtin class-name">:</span>gen_uuid.c:297:10: warning: implicit declaration of <span class="token keyword">function</span> <span class="token string">'flock'</span> <span class="token punctuation">[</span>-Wimplicit-function-declaration<span class="token punctuation">]</span>   <span class="token keyword">while</span> <span class="token punctuation">(</span>flock<span class="token punctuation">(</span>state_fd, LOCK_EX<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          ^~~~~~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils<span class="token function">rm</span> mtd-utils-2.0.2 -rf<span class="token punctuation">;</span><span class="token function">tar</span> <span class="token parameter variable">-xf</span> mtd-utils-2.0.2.tar.bz2<span class="token punctuation">;</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/mtd-utils-2.0.2/bin/<span class="token punctuation">;</span><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> bin/<span class="token punctuation">;</span><span class="token function">pushd</span> mtd-utils-2.0.2/<span class="token punctuation">;</span><span class="token punctuation">\</span>        ./configure --without-lzo <span class="token parameter variable">--host</span><span class="token operator">=</span>arm-himix200-linux <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token punctuation">\</span>        <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span> <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/mtd-utils-2.0.2/bin <span class="token punctuation">\</span>        <span class="token assign-left variable">ZLIB_LIBS</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/zlib-1.2.11/zlib_install/lib/libz.a <span class="token assign-left variable">UUID_LIBS</span><span class="token operator">=</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/libuuid-1.0.3/_install/lib/libuuid.a --disable-tests<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token assign-left variable">CFLAGS</span><span class="token operator">=</span>--static <span class="token assign-left variable">INCLUDES</span><span class="token operator">=</span>-I/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/zlib-1.2.11/zlib_install/include <span class="token parameter variable">-j</span> <span class="token number">20</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token punctuation">\</span>        <span class="token function">make</span> <span class="token function">install</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span><span class="token punctuation">\</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/mtd-utils-2.0.2 ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utilschecking <span class="token keyword">for</span> a BSD-compatible install<span class="token punctuation">..</span>. /usr/bin/install <span class="token parameter variable">-c</span>checking whether build environment is sane<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-strip<span class="token punctuation">..</span>. arm-himix200-linux-stripchecking <span class="token keyword">for</span> a thread-safe <span class="token function">mkdir</span> -p<span class="token punctuation">..</span>. /bin/mkdir <span class="token parameter variable">-p</span>checking <span class="token keyword">for</span> gawk<span class="token punctuation">..</span>. <span class="token function">gawk</span>checking whether <span class="token function">make</span> sets <span class="token variable"><span class="token variable">$(</span>MAKE<span class="token variable">)</span></span><span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token function">make</span> supports nested variables<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking build system type<span class="token punctuation">..</span>. x86_64-pc-linux-gnuchecking <span class="token function">host</span> system type<span class="token punctuation">..</span>. arm-himix200-linux-gnuchecking how to print strings<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span>checking <span class="token keyword">for</span> style of include used by make<span class="token punctuation">..</span>. GNUchecking <span class="token keyword">for</span> arm-himix200-linux-gcc<span class="token punctuation">..</span>. arm-himix200-linux-gccchecking whether the C compiler works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> C compiler default output <span class="token function">file</span> name<span class="token punctuation">..</span>. a.outchecking <span class="token keyword">for</span> suffix of executables<span class="token punctuation">..</span>.checking whether we are cross compiling<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> suffix of object files<span class="token punctuation">..</span>. ochecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether arm-himix200-linux-gcc accepts -g<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc option to accept ISO C89<span class="token punctuation">..</span>. none neededchecking whether arm-himix200-linux-gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token function">yes</span>checking dependency style of arm-himix200-linux-gcc<span class="token punctuation">..</span>. gcc3checking <span class="token keyword">for</span> a <span class="token function">sed</span> that does not truncate output<span class="token punctuation">..</span>. /bin/sedchecking <span class="token keyword">for</span> <span class="token function">grep</span> that handles long lines and -e<span class="token punctuation">..</span>. /bin/grepchecking <span class="token keyword">for</span> egrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> fgrep<span class="token punctuation">..</span>. /bin/grep <span class="token parameter variable">-F</span>checking <span class="token keyword">for</span> ld used by arm-himix200-linux-gcc<span class="token punctuation">..</span>. /opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ldchecking <span class="token keyword">if</span> the linker <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld<span class="token punctuation">)</span> is GNU ld<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> BSD- or MS-compatible name lister <span class="token punctuation">(</span>nm<span class="token punctuation">)</span><span class="token punctuation">..</span>. /opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm <span class="token parameter variable">-B</span>checking the name lister <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm -B<span class="token punctuation">)</span> interface<span class="token punctuation">..</span>. BSD nmchecking whether <span class="token function">ln</span> <span class="token parameter variable">-s</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking the maximum length of <span class="token builtin class-name">command</span> line arguments<span class="token punctuation">..</span>. <span class="token number">1572864</span>checking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to arm-himix200-linux-gnu format<span class="token punctuation">..</span>. func_convert_file_noopchecking how to convert x86_64-pc-linux-gnu <span class="token function">file</span> names to toolchain format<span class="token punctuation">..</span>. func_convert_file_noopchecking <span class="token keyword">for</span> /opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld option to reload object files<span class="token punctuation">..</span>. <span class="token parameter variable">-r</span>checking <span class="token keyword">for</span> arm-himix200-linux-objdump<span class="token punctuation">..</span>. arm-himix200-linux-objdumpchecking how to recognize dependent libraries<span class="token punctuation">..</span>. pass_allchecking <span class="token keyword">for</span> arm-himix200-linux-dlltool<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> dlltool<span class="token punctuation">..</span>. nochecking how to associate runtime and <span class="token function">link</span> libraries<span class="token punctuation">..</span>. <span class="token builtin class-name">printf</span> %s<span class="token punctuation">\</span>nchecking <span class="token keyword">for</span> arm-himix200-linux-ar<span class="token punctuation">..</span>. arm-himix200-linux-archecking <span class="token keyword">for</span> archiver @FILE support<span class="token punctuation">..</span>. @checking <span class="token keyword">for</span> arm-himix200-linux-strip<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> arm-himix200-linux-stripchecking <span class="token keyword">for</span> arm-himix200-linux-ranlib<span class="token punctuation">..</span>. arm-himix200-linux-ranlibchecking <span class="token builtin class-name">command</span> to parse /opt/hisi-linux/x86-arm/arm-himix200-linux/bin/arm-himix200-linux-nm <span class="token parameter variable">-B</span> output from arm-himix200-linux-gcc object<span class="token punctuation">..</span>. okchecking <span class="token keyword">for</span> sysroot<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> a working dd<span class="token punctuation">..</span>. /bin/ddchecking how to truncate binary pipes<span class="token punctuation">..</span>. /bin/dd <span class="token assign-left variable">bs</span><span class="token operator">=</span><span class="token number">4096</span> <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">1</span>checking <span class="token keyword">for</span> arm-himix200-linux-mt<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> mt<span class="token punctuation">..</span>. mtconfigure: WARNING: using cross tools not prefixed with <span class="token function">host</span> tripletchecking <span class="token keyword">if</span> mt is a manifest tool<span class="token punctuation">..</span>. nochecking how to run the C preprocessor<span class="token punctuation">..</span>. arm-himix200-linux-gcc <span class="token parameter variable">-E</span>checking <span class="token keyword">for</span> ANSI C header files<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/types.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/stat.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdlib.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> string.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> memory.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> strings.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> inttypes.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> stdint.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> unistd.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> dlfcn.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> objdir<span class="token punctuation">..</span>. .libschecking <span class="token keyword">if</span> arm-himix200-linux-gcc supports -fno-rtti -fno-exceptions<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc option to produce PIC<span class="token punctuation">..</span>. <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc PIC flag <span class="token parameter variable">-fPIC</span> <span class="token parameter variable">-DPIC</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc static flag <span class="token parameter variable">-static</span> works<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> arm-himix200-linux-gcc supports <span class="token parameter variable">-c</span> <span class="token parameter variable">-o</span> file.o<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether the arm-himix200-linux-gcc linker <span class="token punctuation">(</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/arm-linux-gnueabi/bin/ld<span class="token punctuation">)</span> supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether <span class="token parameter variable">-lc</span> should be explicitly linked in<span class="token punctuation">..</span>. nochecking dynamic linker characteristics<span class="token punctuation">..</span>. GNU/Linux ld.sochecking how to hardcode library paths into programs<span class="token punctuation">..</span>. immediatechecking whether stripping libraries is possible<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">if</span> libtool supports shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build shared libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether to build static libraries<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> arm-himix200-linux-gccchecking whether we are using the GNU C compiler<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking whether arm-himix200-linux-gcc accepts -g<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-gcc option to accept ISO C89<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> none neededchecking whether arm-himix200-linux-gcc understands <span class="token parameter variable">-c</span> and <span class="token parameter variable">-o</span> together<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> <span class="token function">yes</span>checking dependency style of arm-himix200-linux-gcc<span class="token punctuation">..</span>. <span class="token punctuation">(</span>cached<span class="token punctuation">)</span> gcc3checking whether compiler handles -Wall<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wextra<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-prototypes<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wmissing-declarations<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wwrite-strings<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wjump-misses-init<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wuninitialized<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Winit-self<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wlogical-op<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-but-set-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-parameter<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-result<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wunused-variable<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wduplicated-cond<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wduplicated-branches<span class="token punctuation">..</span>. nochecking whether compiler handles -Wrestrict<span class="token punctuation">..</span>. nochecking whether compiler handles -Wnull-dereference<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-shadow<span class="token punctuation">..</span>. <span class="token function">yes</span>checking whether compiler handles -Wno-sign-compare<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> arm-himix200-linux-pkg-config<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> pkg-config<span class="token punctuation">..</span>. /usr/bin/pkg-configchecking pkg-config is at least version <span class="token number">0.9</span>.0<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> ZLIB<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> UUID<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/xattr.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/xattr.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> sys/xattr.h<span class="token punctuation">..</span>. <span class="token function">yes</span>checking sys/acl.h usability<span class="token punctuation">..</span>. nochecking sys/acl.h presence<span class="token punctuation">..</span>. nochecking <span class="token keyword">for</span> sys/acl.h<span class="token punctuation">..</span>. nochecking execinfo.h usability<span class="token punctuation">..</span>. <span class="token function">yes</span>checking execinfo.h presence<span class="token punctuation">..</span>. <span class="token function">yes</span>checking <span class="token keyword">for</span> execinfo.h<span class="token punctuation">..</span>. <span class="token function">yes</span>configure: WARNING: cannot <span class="token function">find</span> headers <span class="token keyword">for</span> extended attributesconfigure: WARNING: disabling XATTR supportchecking size of off_t<span class="token punctuation">..</span>. <span class="token number">4</span>checking size of loff_t<span class="token punctuation">..</span>. <span class="token number">8</span>checking that generated files are newer than configure<span class="token punctuation">..</span>. <span class="token keyword">done</span>configure: creating ./config.statusconfig.status: creating tests/fs-tests/fs_help_all.shconfig.status: creating tests/fs-tests/fs_run_all.shconfig.status: creating tests/fs-tests/stress/fs_stress00.shconfig.status: creating tests/fs-tests/stress/fs_stress01.shconfig.status: creating tests/ubi-tests/runubitests.shconfig.status: creating tests/ubi-tests/ubi-stress-test.shconfig.status: creating Makefileconfig.status: creating include/config.hconfig.status: executing depfiles commandsconfig.status: executing libtool commandsmisc-utils/flashcp.c: In <span class="token keyword">function</span> <span class="token string">'main'</span><span class="token builtin class-name">:</span>misc-utils/flashcp.c:257:2: warning: <span class="token comment">#warning "Check for smaller erase regions" [-Wcpp]</span> <span class="token comment">#warning "Check for smaller erase regions"</span>  ^~~~~~~jffsX-utils/compr_lzo.c:127:5: warning: no previous prototype <span class="token keyword">for</span> <span class="token string">'jffs2_lzo_init'</span> <span class="token punctuation">[</span>-Wmissing-prototypes<span class="token punctuation">]</span> int jffs2_lzo_init<span class="token punctuation">(</span>void<span class="token punctuation">)</span>     ^~~~~~~~~~~~~~jffsX-utils/compr_lzo.c:132:6: warning: no previous prototype <span class="token keyword">for</span> <span class="token string">'jffs2_lzo_exit'</span> <span class="token punctuation">[</span>-Wmissing-prototypes<span class="token punctuation">]</span> void jffs2_lzo_exit<span class="token punctuation">(</span>void<span class="token punctuation">)</span>      ^~~~~~~~~~~~~~misc-utils/recv_image.o: In <span class="token keyword">function</span> <span class="token variable"><span class="token variable">`</span>main<span class="token string">':recv_image.c:(.text+0x750): warning: Using '</span>getaddrinfo' <span class="token keyword">in</span> statically linked applications requires at runtime the shared libraries from the glibc version used <span class="token keyword">for</span> linkingmisc-utils/serve_image.o: In <span class="token keyword">function</span> <span class="token variable">`</span></span>main<span class="token string">':serve_image.c:(.text+0x6dc): warning: Using '</span>getaddrinfo<span class="token string">' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utilscp -rf /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/mtd-utils-2.0.2/bin/sbin/* bin/make[1]: Leaving directory '</span>/home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils<span class="token string">'cp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/mtd-utils/bin/* /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibccp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/himm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibccp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/himc /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibccp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/himd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibccp /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/board/reg-tools-1.0.0/bin/himd.l /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibc---------task [7] build rootfschmod 777 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/board_glibc/*chmod 777 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc/*rm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/dev/* -rfrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himm -rfrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himc -rfrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himd -rfrm /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/bin/himd.l -rfpushd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc;ln -s sbin/init init;popd~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpushd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc; chmod 750 * -R; chmod 750 usr/* -R; popd~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpushd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc; chmod -w usr/bin -R; chmod -w usr/sbin -R; chmod -w sbin -R; popd~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvpushd /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc;./make_ext4fs -l 96M -s /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/hi3516dv300_emmc_smp_image_glibc/rootfs_hi3516dv300_96M.ext4 /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc;popd~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/bin/pc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvCreating filesystem with parameters:    Size: 100663296    Block size: 4096    Blocks per group: 32768    Inodes per group: 6144    Inode size: 256    Journal blocks: 1024    Label:    Blocks: 24576    Block groups: 1    Reserved block group size: 7Created filesystem with 510/6144 inodes and 4126/24576 blocks~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrvfind /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc/ -name '</span>*svn' <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span><span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc<span class="token punctuation">;</span> <span class="token function">chmod</span> +w usr/bin -R<span class="token punctuation">;</span> <span class="token function">chmod</span> +w usr/sbin -R<span class="token punctuation">;</span> <span class="token function">chmod</span> +w sbin -R<span class="token punctuation">;</span> <span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub/rootfs_glibc ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv<span class="token function">pushd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub<span class="token punctuation">;</span><span class="token function">tar</span> czf rootfs_glibc.tgz rootfs_glibc<span class="token punctuation">;</span><span class="token function">rm</span> rootfs_glibc -rf<span class="token punctuation">;</span><span class="token function">popd</span>~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/pub ~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv---------finish osdrv workbook@100ask:~/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、原始启动流程"><a href="#2、原始启动流程" class="headerlink" title="2、原始启动流程"></a>2、原始启动流程</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~ <span class="token comment"># reboot</span>~ <span class="token comment"># umount: devtmpfs busy - remounted read-only</span>EXT4-fs <span class="token punctuation">(</span>mmcblk0p3<span class="token punctuation">)</span>: re-mounted. Opts: <span class="token punctuation">(</span>null<span class="token punctuation">)</span>The system is going down NOW<span class="token operator">!</span>Sent SIGTERM to all processesSent SIGKILL to all processesRequesting system <span class="token function">reboot</span>reboot: Restarting systemSystem startupUncompress Ok<span class="token operator">!</span>U-Boot <span class="token number">2016.11</span> <span class="token punctuation">(</span>Oct <span class="token number">18</span> <span class="token number">2021</span> - <span class="token number">15</span>:05:04 +0800<span class="token punctuation">)</span>hi3516dv300Relocation Offset is: 0f6d2000Relocating to 8fed2000, new gd at 8fe31ef0, sp at 8fe31ed0MMC:EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>scan elemnts: startp:6 endp:117Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>02/15<span class="token punctuation">]</span>** First descriptor is NOT a primary desc on <span class="token number">0</span>:1 **MMC/SD Card:    MID:         0x15    Read Block:  <span class="token number">512</span> Bytes    Write Block: <span class="token number">512</span> Bytes    Chip Size:   7456M Bytes <span class="token punctuation">(</span>High Capacity<span class="token punctuation">)</span>    Name:        <span class="token string">"8GTF4"</span>    Chip Type:   MMC    Version:     <span class="token number">0.0</span>    Speed:       100000000Hz    Bus Width:   4bithimci: <span class="token number">0</span> <span class="token punctuation">(</span>eMMC<span class="token punctuation">)</span>In:    serialOut:   serialErr:   serialNet:   eth0Writing to MMC<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token keyword">done</span>Hit any key to stop autoboot:  <span class="token number">0</span>MMC read: dev <span class="token comment"># 0, block # 10240, count 16384 ... 16384 blocks read: OK</span><span class="token comment">## Booting kernel from Legacy Image at 81000000 ...</span>   Image Name:   Linux-4.9.37   Image Type:   ARM Linux Kernel Image <span class="token punctuation">(</span>uncompressed<span class="token punctuation">)</span>   Data Size:    <span class="token number">3485592</span> Bytes <span class="token operator">=</span> <span class="token number">3.3</span> MiB   Load Address: <span class="token number">80008000</span>   Entry Point:  <span class="token number">80008000</span>   Loading Kernel Image <span class="token punctuation">..</span>. OKStarting kernel <span class="token punctuation">..</span>.Booting Linux on physical CPU 0x0Linux version <span class="token number">4.9</span>.37 <span class="token punctuation">(</span>book@100ask<span class="token punctuation">)</span> <span class="token punctuation">(</span>gcc version <span class="token number">6.3</span>.0 <span class="token punctuation">(</span>HC<span class="token operator">&amp;</span>C V1R3C00SPC200B005_20190606<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token comment">#1 SMP Fri Feb 18 16:25:27 CST 2022</span>CPU: ARMv7 Processor <span class="token punctuation">[</span>410fc075<span class="token punctuation">]</span> revision <span class="token number">5</span> <span class="token punctuation">(</span>ARMv7<span class="token punctuation">)</span>, <span class="token assign-left variable">cr</span><span class="token operator">=</span>10c5387dCPU: div instructions available: patching division codeCPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cacheOF: fdt:Machine model: Hisilicon HI3516DV300 DEMO Boardcmz zone is not set<span class="token operator">!</span>cma: Reserved <span class="token number">16</span> MiB at 0x9f000000Memory policy: Data cache writeallocpercpu: Embedded <span class="token number">13</span> pages/cpu @debc9000 s21772 r8192 d23284 u53248Built <span class="token number">1</span> zonelists <span class="token keyword">in</span> Zone order, mobility grouping on.  Total pages: <span class="token number">130048</span>Kernel <span class="token builtin class-name">command</span> line: <span class="token assign-left variable">mem</span><span class="token operator">=</span>512M <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyAMA0,115200 <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/mmcblk0p3 <span class="token assign-left variable">rootfstype</span><span class="token operator">=</span>ext4 rw rootwait <span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span>PID <span class="token builtin class-name">hash</span> table entries: <span class="token number">2048</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>Dentry cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">65536</span> <span class="token punctuation">(</span>order: <span class="token number">6</span>, <span class="token number">262144</span> bytes<span class="token punctuation">)</span>Inode-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">32768</span> <span class="token punctuation">(</span>order: <span class="token number">5</span>, <span class="token number">131072</span> bytes<span class="token punctuation">)</span>Memory: 494488K/524288K available <span class="token punctuation">(</span>5120K kernel code, 167K rwdata, 1232K rodata, 1024K init, 313K bss, 13416K reserved, 16384K cma-reserved, 0K highmem<span class="token punctuation">)</span>Virtual kernel memory layout:    vector  <span class="token builtin class-name">:</span> 0xffff0000 - 0xffff1000   <span class="token punctuation">(</span>   <span class="token number">4</span> kB<span class="token punctuation">)</span>    fixmap  <span class="token builtin class-name">:</span> 0xffc00000 - 0xfff00000   <span class="token punctuation">(</span><span class="token number">3072</span> kB<span class="token punctuation">)</span>    vmalloc <span class="token builtin class-name">:</span> 0xe0800000 - 0xff800000   <span class="token punctuation">(</span> <span class="token number">496</span> MB<span class="token punctuation">)</span>    lowmem  <span class="token builtin class-name">:</span> 0xc0000000 - 0xe0000000   <span class="token punctuation">(</span> <span class="token number">512</span> MB<span class="token punctuation">)</span>    pkmap   <span class="token builtin class-name">:</span> 0xbfe00000 - 0xc0000000   <span class="token punctuation">(</span>   <span class="token number">2</span> MB<span class="token punctuation">)</span>    modules <span class="token builtin class-name">:</span> 0xbf000000 - 0xbfe00000   <span class="token punctuation">(</span>  <span class="token number">14</span> MB<span class="token punctuation">)</span>      .text <span class="token builtin class-name">:</span> 0xc0008000 - 0xc0600000   <span class="token punctuation">(</span><span class="token number">6112</span> kB<span class="token punctuation">)</span>      .init <span class="token builtin class-name">:</span> 0xc0800000 - 0xc0900000   <span class="token punctuation">(</span><span class="token number">1024</span> kB<span class="token punctuation">)</span>      .data <span class="token builtin class-name">:</span> 0xc0900000 - 0xc0929cc0   <span class="token punctuation">(</span> <span class="token number">168</span> kB<span class="token punctuation">)</span>       .bss <span class="token builtin class-name">:</span> 0xc092b000 - 0xc09796ec   <span class="token punctuation">(</span> <span class="token number">314</span> kB<span class="token punctuation">)</span>SLUB: <span class="token assign-left variable">HWalign</span><span class="token operator">=</span><span class="token number">64</span>, <span class="token assign-left variable">Order</span><span class="token operator">=</span><span class="token number">0</span>-3, <span class="token assign-left variable">MinObjects</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">CPUs</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">Nodes</span><span class="token operator">=</span><span class="token number">1</span>Hierarchical RCU implementation.        Build-time adjustment of leaf fanout to <span class="token number">32</span>.NR_IRQS:16 nr_irqs:16 <span class="token number">16</span>Gic dist init<span class="token punctuation">..</span>.arm_arch_timer: Architected cp15 timer<span class="token punctuation">(</span>s<span class="token punctuation">)</span> running at <span class="token number">50</span>.00MHz <span class="token punctuation">(</span>phys<span class="token punctuation">)</span>.clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0xb8812736b, max_idle_ns: <span class="token number">440795202655</span> nssched_clock: <span class="token number">56</span> bits at 50MHz, resolution 20ns, wraps every 4398046511100nsSwitching to timer-based delay loop, resolution 20nsclocksource: hisp804: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: <span class="token number">637086815595</span> nsConsole: colour dummy device 80x30Calibrating delay loop <span class="token punctuation">(</span>skipped<span class="token punctuation">)</span>, value calculated using timer frequency<span class="token punctuation">..</span> <span class="token number">100.00</span> BogoMIPS <span class="token punctuation">(</span>lpj<span class="token operator">=</span><span class="token number">500000</span><span class="token punctuation">)</span>pid_max: default: <span class="token number">32768</span> minimum: <span class="token number">301</span>Mount-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">1024</span> <span class="token punctuation">(</span>order: <span class="token number">0</span>, <span class="token number">4096</span> bytes<span class="token punctuation">)</span>Mountpoint-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">1024</span> <span class="token punctuation">(</span>order: <span class="token number">0</span>, <span class="token number">4096</span> bytes<span class="token punctuation">)</span>CPU: Testing <span class="token function">write</span> buffer coherency: okCPU0: thread -1, cpu <span class="token number">0</span>, socket <span class="token number">0</span>, mpidr <span class="token number">80000000</span>Setting up static identity map <span class="token keyword">for</span> 0x80100000 - 0x80100058CPU1: thread -1, cpu <span class="token number">1</span>, socket <span class="token number">0</span>, mpidr <span class="token number">80000001</span>Brought up <span class="token number">2</span> CPUsSMP: Total of <span class="token number">2</span> processors activated <span class="token punctuation">(</span><span class="token number">200.00</span> BogoMIPS<span class="token punctuation">)</span>.CPU: All CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span> started <span class="token keyword">in</span> SVC mode.devtmpfs: initializedVFP support v0.3: implementor <span class="token number">41</span> architecture <span class="token number">2</span> part <span class="token number">30</span> variant <span class="token number">7</span> <span class="token function">rev</span> <span class="token number">5</span>clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: <span class="token number">19112604462750000</span> nsfutex <span class="token builtin class-name">hash</span> table entries: <span class="token number">512</span> <span class="token punctuation">(</span>order: <span class="token number">3</span>, <span class="token number">32768</span> bytes<span class="token punctuation">)</span>pinctrl core: initialized pinctrl subsystemNET: Registered protocol family <span class="token number">16</span>DMA: preallocated <span class="token number">256</span> KiB pool <span class="token keyword">for</span> atomic coherent allocationsSerial: AMBA PL011 UART driver120a0000.uart: ttyAMA0 at MMIO 0x120a0000 <span class="token punctuation">(</span>irq <span class="token operator">=</span> <span class="token number">21</span>, base_baud <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> is a PL011 rev2console <span class="token punctuation">[</span>ttyAMA0<span class="token punctuation">]</span> enabledSCSI subsystem initializedssp-pl022 120c0000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c0000.spi: mapped registers from 0x120c0000 to e0834000ssp-pl022 120c1000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c1000.spi: mapped registers from 0x120c1000 to e0838000ssp-pl022 120c2000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c2000.spi: mapped registers from 0x120c2000 to e083a000usbcore: registered new interface driver usbfsusbcore: registered new interface driver hubusbcore: registered new device driver usbLinux video capture interface: v2.00clocksource: Switched to clocksource hisp804NET: Registered protocol family <span class="token number">2</span>TCP established <span class="token builtin class-name">hash</span> table entries: <span class="token number">4096</span> <span class="token punctuation">(</span>order: <span class="token number">2</span>, <span class="token number">16384</span> bytes<span class="token punctuation">)</span>TCP <span class="token builtin class-name">bind</span> <span class="token builtin class-name">hash</span> table entries: <span class="token number">4096</span> <span class="token punctuation">(</span>order: <span class="token number">3</span>, <span class="token number">32768</span> bytes<span class="token punctuation">)</span>TCP: Hash tables configured <span class="token punctuation">(</span>established <span class="token number">4096</span> <span class="token builtin class-name">bind</span> <span class="token number">4096</span><span class="token punctuation">)</span>UDP <span class="token builtin class-name">hash</span> table entries: <span class="token number">256</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>UDP-Lite <span class="token builtin class-name">hash</span> table entries: <span class="token number">256</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>NET: Registered protocol family <span class="token number">1</span>RPC: Registered named UNIX socket transport module.RPC: Registered udp transport module.RPC: Registered tcp transport module.RPC: Registered tcp NFSv4.1 backchannel transport module.workingset: <span class="token assign-left variable">timestamp_bits</span><span class="token operator">=</span><span class="token number">30</span> <span class="token assign-left variable">max_order</span><span class="token operator">=</span><span class="token number">17</span> <span class="token assign-left variable">bucket_order</span><span class="token operator">=</span><span class="token number">0</span>NFS: Registering the id_resolver key <span class="token builtin class-name">type</span>Key <span class="token builtin class-name">type</span> id_resolver registeredKey <span class="token builtin class-name">type</span> id_legacy registeredfuse init <span class="token punctuation">(</span>API version <span class="token number">7.26</span><span class="token punctuation">)</span>Block layer SCSI generic <span class="token punctuation">(</span>bsg<span class="token punctuation">)</span> driver version <span class="token number">0.4</span> loaded <span class="token punctuation">(</span>major <span class="token number">252</span><span class="token punctuation">)</span>io scheduler noop registeredio scheduler deadline registeredio scheduler cfq registered <span class="token punctuation">(</span>default<span class="token punctuation">)</span>pl061_gpio 120d0000.gpio_chip: PL061 GPIO chip @0x120d0000 registeredpl061_gpio 120d1000.gpio_chip: PL061 GPIO chip @0x120d1000 registeredpl061_gpio 120d2000.gpio_chip: PL061 GPIO chip @0x120d2000 registeredpl061_gpio 120d3000.gpio_chip: PL061 GPIO chip @0x120d3000 registeredpl061_gpio 120d4000.gpio_chip: PL061 GPIO chip @0x120d4000 registeredpl061_gpio 120d5000.gpio_chip: PL061 GPIO chip @0x120d5000 registeredpl061_gpio 120d6000.gpio_chip: PL061 GPIO chip @0x120d6000 registeredpl061_gpio 120d7000.gpio_chip: PL061 GPIO chip @0x120d7000 registeredpl061_gpio 120d8000.gpio_chip: PL061 GPIO chip @0x120d8000 registeredpl061_gpio 120d9000.gpio_chip: PL061 GPIO chip @0x120d9000 registeredpl061_gpio 120da000.gpio_chip: PL061 GPIO chip @0x120da000 registeredpl061_gpio 120db000.gpio_chip: PL061 GPIO chip @0x120db000 registeredbrd: module loadedlibphy: hisi_femac_mii_bus: probedlibphy: Fixed MDIO Bus: probedGeneric PHY <span class="token number">10011100</span>.mdio:01: attached PHY driver <span class="token punctuation">[</span>Generic PHY<span class="token punctuation">]</span> <span class="token punctuation">(</span>mii_bus:phy_addr<span class="token operator">=</span><span class="token number">10011100</span>.mdio:01, <span class="token assign-left variable">irq</span><span class="token operator">=</span>-1<span class="token punctuation">)</span><span class="token assign-left variable">phy_id</span><span class="token operator">=</span>0x0000ffff, <span class="token assign-left variable">phy_mode</span><span class="token operator">=</span>rmiihisi-femac <span class="token number">10010000</span>.ethernet: using random MAC address <span class="token number">76</span>:3f:22:95:98:3cusbcore: registered new interface driver r8152xhci-hcd 100e0000.xhci_0: xHCI Host Controllerxhci-hcd 100e0000.xhci_0: new USB bus registered, assigned bus number <span class="token number">1</span>xhci-hcd 100e0000.xhci_0: hcc params 0x0220fe6c hci version 0x110 quirks 0x20010010xhci-hcd 100e0000.xhci_0: irq <span class="token number">29</span>, io mem 0x100e0000hub <span class="token number">1</span>-0:1.0: USB hub foundhub <span class="token number">1</span>-0:1.0: <span class="token number">1</span> port detectedxhci-hcd 100e0000.xhci_0: xHCI Host Controllerxhci-hcd 100e0000.xhci_0: new USB bus registered, assigned bus number <span class="token number">2</span>usb usb2: We don<span class="token string">'t know the algorithms for LPM for this host, disabling LPM.hub 2-0:1.0: USB hub foundhub 2-0:1.0: hub can'</span>t support USB3.0usbcore: registered new interface driver usb-storagemousedev: PS/2 mouse device common <span class="token keyword">for</span> all miceusbcore: registered new interface driver xpadhibvt_rtc <span class="token number">12080000</span>.rtc: rtc core: registered <span class="token number">12080000</span>.rtc as rtc0hibvt_rtc <span class="token number">12080000</span>.rtc: RTC driver <span class="token keyword">for</span> hibvt enabledi2c /dev entries driverhibvt-i2c 120b0000.i2c: hibvt-i2c0@100000hz registeredhibvt-i2c 120b1000.i2c: hibvt-i2c1@100000hz registeredhibvt-i2c 120b2000.i2c: hibvt-i2c2@100000hz registeredhibvt-i2c 120b3000.i2c: hibvt-i2c3@100000hz registeredhibvt-i2c 120b4000.i2c: hibvt-i2c4@100000hz registeredhibvt-i2c 120b5000.i2c: hibvt-i2c5@100000hz registeredhibvt-i2c 120b6000.i2c: hibvt-i2c6@100000hz registeredhibvt-i2c 120b7000.i2c: hibvt-i2c7@100000hz registeredusbcore: registered new interface driver uvcvideoUSB Video Class driver <span class="token punctuation">(</span><span class="token number">1.1</span>.1<span class="token punctuation">)</span>himci: mmc <span class="token function">host</span> probehimci: mmc <span class="token function">host</span> probemmc0: CMDQ supported: depth: <span class="token number">16</span>scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>usbcore: registered new interface driver usbhidusbhid: USB HID core driverNET: Registered protocol family <span class="token number">10</span>scan elemnts: startp:6 endp:117Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>02/15<span class="token punctuation">]</span>NET: Registered protocol family <span class="token number">17</span>8021q: <span class="token number">802</span>.1Q VLAN Support v1.8Key <span class="token builtin class-name">type</span> dns_resolver registeredRegistering SWP/SWPB emulation handlerhibvt_rtc <span class="token number">12080000</span>.rtc: setting system clock to <span class="token number">1970</span>-01-01 00:55:31 UTC <span class="token punctuation">(</span><span class="token number">3331</span><span class="token punctuation">)</span>Waiting <span class="token keyword">for</span> root device /dev/mmcblk0p3<span class="token punctuation">..</span>.mmc0: new HS200 MMC card at address 0001mmc0: -524: cmdq: unable to set-upmmcblk0: mmc0:0001 8GTF4R <span class="token number">7.28</span> GiBmmcblk0boot0: mmc0:0001 8GTF4R partition <span class="token number">1</span> <span class="token number">4.00</span> MiBmmcblk0boot1: mmc0:0001 8GTF4R partition <span class="token number">2</span> <span class="token number">4.00</span> MiBmmcblk0rpmb: mmc0:0001 8GTF4R partition <span class="token number">3</span> <span class="token number">512</span> KiB mmcblk0: p1<span class="token punctuation">(</span>boot<span class="token punctuation">)</span> p2<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span> p3<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span> p4<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span> p5<span class="token punctuation">(</span>user<span class="token punctuation">)</span>EXT4-fs <span class="token punctuation">(</span>mmcblk0p3<span class="token punctuation">)</span>: mounted filesystem with ordered data mode. Opts: <span class="token punctuation">(</span>null<span class="token punctuation">)</span>VFS: Mounted root <span class="token punctuation">(</span>ext4 filesystem<span class="token punctuation">)</span> on device <span class="token number">179</span>:3.devtmpfs: mountedFreeing unused kernel memory: 1024K <span class="token punctuation">(</span>c0800000 - c0900000<span class="token punctuation">)</span>            _ _ _ _ _ _ _ _ _ _ _ _            <span class="token punctuation">\</span>  _  _   _  _ _ ___            / /__/ <span class="token punctuation">\</span> <span class="token operator">|</span>_/           / __   /  -  _ ___          / /  / /  / /  _ _ _ _/ /  /  <span class="token punctuation">\</span>_/  <span class="token punctuation">\</span>_ _________________<span class="token punctuation">\</span>___<span class="token punctuation">\</span>__________________<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S00devsmknod: /dev/console: File existsmknod: /dev/ttyAMA0: File existsmknod: /dev/null: File exists<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S01udevrandom: udevd: uninitialized urandom <span class="token builtin class-name">read</span> <span class="token punctuation">(</span><span class="token number">16</span> bytes <span class="token builtin class-name">read</span><span class="token punctuation">)</span>udevd<span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">]</span>: starting eudev-3.2.7<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S80networkAuto login as root <span class="token punctuation">..</span>.login<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span>: root login on <span class="token string">'ttyS000'</span>Welcome to HiLinux.None of nfsroot found <span class="token keyword">in</span> cmdline.~ <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、addr1启动流程"><a href="#3、addr1启动流程" class="headerlink" title="3、addr1启动流程"></a>3、addr1启动流程</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span>~ <span class="token comment"># umount: devtmpfs busy - remounted read-only</span>EXT4-fs <span class="token punctuation">(</span>mmcblk0p3<span class="token punctuation">)</span>: re-mounted. Opts: <span class="token punctuation">(</span>null<span class="token punctuation">)</span>The system is going down NOW<span class="token operator">!</span>Sent SIGTERM to all processesSent SIGKILL to all processesRequesting system <span class="token function">reboot</span>reboot: Restarting systemSystem startupUncompress Ok<span class="token operator">!</span>U-Boot <span class="token number">2016.11</span> <span class="token punctuation">(</span>Feb <span class="token number">18</span> <span class="token number">2022</span> - <span class="token number">14</span>:34:50 +0800<span class="token punctuation">)</span>hi3516dv300Relocation Offset is: 0f6d8000Relocating to 8fed8000, new gd at 8fe37ef0, sp at 8fe37ed0MMC:EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>scan elemnts: startp:7 endp:117Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>02/15<span class="token punctuation">]</span>** First descriptor is NOT a primary desc on <span class="token number">0</span>:1 **MMC/SD Card:    MID:         0x15    Read Block:  <span class="token number">512</span> Bytes    Write Block: <span class="token number">512</span> Bytes    Chip Size:   7456M Bytes <span class="token punctuation">(</span>High Capacity<span class="token punctuation">)</span>    Name:        <span class="token string">"8GTF4"</span>    Chip Type:   MMC    Version:     <span class="token number">0.0</span>    Speed:       100000000Hz    Bus Width:   4bithimci: <span class="token number">0</span> <span class="token punctuation">(</span>eMMC<span class="token punctuation">)</span>In:    serialOut:   serialErr:   serialNet:   eth0Hit any key to stop autoboot:  <span class="token number">0</span>MMC read: dev <span class="token comment"># 0, block # 10240, count 16384 ... 16384 blocks read: OK</span><span class="token comment">## Booting kernel from Legacy Image at 81000000 ...</span>   Image Name:   Linux-4.9.37   Image Type:   ARM Linux Kernel Image <span class="token punctuation">(</span>uncompressed<span class="token punctuation">)</span>   Data Size:    <span class="token number">3485592</span> Bytes <span class="token operator">=</span> <span class="token number">3.3</span> MiB   Load Address: <span class="token number">80008000</span>   Entry Point:  <span class="token number">80008000</span>   Loading Kernel Image <span class="token punctuation">..</span>. OKStarting kernel <span class="token punctuation">..</span>.Booting Linux on physical CPU 0x0Linux version <span class="token number">4.9</span>.37 <span class="token punctuation">(</span>book@100ask<span class="token punctuation">)</span> <span class="token punctuation">(</span>gcc version <span class="token number">6.3</span>.0 <span class="token punctuation">(</span>HC<span class="token operator">&amp;</span>C V1R3C00SPC200B005_20190606<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token comment">#1 SMP Fri Feb 18 16:25:27 CST 2022</span>CPU: ARMv7 Processor <span class="token punctuation">[</span>410fc075<span class="token punctuation">]</span> revision <span class="token number">5</span> <span class="token punctuation">(</span>ARMv7<span class="token punctuation">)</span>, <span class="token assign-left variable">cr</span><span class="token operator">=</span>10c5387dCPU: div instructions available: patching division codeCPU: PIPT / VIPT nonaliasing data cache, VIPT aliasing instruction cacheOF: fdt:Machine model: Hisilicon HI3516DV300 DEMO Boardcmz zone is not set<span class="token operator">!</span>cma: Reserved <span class="token number">16</span> MiB at 0x9f000000Memory policy: Data cache writeallocpercpu: Embedded <span class="token number">13</span> pages/cpu @debc9000 s21772 r8192 d23284 u53248Built <span class="token number">1</span> zonelists <span class="token keyword">in</span> Zone order, mobility grouping on.  Total pages: <span class="token number">130048</span>Kernel <span class="token builtin class-name">command</span> line: <span class="token assign-left variable">mem</span><span class="token operator">=</span>512M <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyAMA0,115200 <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/mmcblk0p3 <span class="token assign-left variable">rootfstype</span><span class="token operator">=</span>ext4 rw rootwait <span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span>PID <span class="token builtin class-name">hash</span> table entries: <span class="token number">2048</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>Dentry cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">65536</span> <span class="token punctuation">(</span>order: <span class="token number">6</span>, <span class="token number">262144</span> bytes<span class="token punctuation">)</span>Inode-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">32768</span> <span class="token punctuation">(</span>order: <span class="token number">5</span>, <span class="token number">131072</span> bytes<span class="token punctuation">)</span>Memory: 494488K/524288K available <span class="token punctuation">(</span>5120K kernel code, 167K rwdata, 1232K rodata, 1024K init, 313K bss, 13416K reserved, 16384K cma-reserved, 0K highmem<span class="token punctuation">)</span>Virtual kernel memory layout:    vector  <span class="token builtin class-name">:</span> 0xffff0000 - 0xffff1000   <span class="token punctuation">(</span>   <span class="token number">4</span> kB<span class="token punctuation">)</span>    fixmap  <span class="token builtin class-name">:</span> 0xffc00000 - 0xfff00000   <span class="token punctuation">(</span><span class="token number">3072</span> kB<span class="token punctuation">)</span>    vmalloc <span class="token builtin class-name">:</span> 0xe0800000 - 0xff800000   <span class="token punctuation">(</span> <span class="token number">496</span> MB<span class="token punctuation">)</span>    lowmem  <span class="token builtin class-name">:</span> 0xc0000000 - 0xe0000000   <span class="token punctuation">(</span> <span class="token number">512</span> MB<span class="token punctuation">)</span>    pkmap   <span class="token builtin class-name">:</span> 0xbfe00000 - 0xc0000000   <span class="token punctuation">(</span>   <span class="token number">2</span> MB<span class="token punctuation">)</span>    modules <span class="token builtin class-name">:</span> 0xbf000000 - 0xbfe00000   <span class="token punctuation">(</span>  <span class="token number">14</span> MB<span class="token punctuation">)</span>      .text <span class="token builtin class-name">:</span> 0xc0008000 - 0xc0600000   <span class="token punctuation">(</span><span class="token number">6112</span> kB<span class="token punctuation">)</span>      .init <span class="token builtin class-name">:</span> 0xc0800000 - 0xc0900000   <span class="token punctuation">(</span><span class="token number">1024</span> kB<span class="token punctuation">)</span>      .data <span class="token builtin class-name">:</span> 0xc0900000 - 0xc0929cc0   <span class="token punctuation">(</span> <span class="token number">168</span> kB<span class="token punctuation">)</span>       .bss <span class="token builtin class-name">:</span> 0xc092b000 - 0xc09796ec   <span class="token punctuation">(</span> <span class="token number">314</span> kB<span class="token punctuation">)</span>SLUB: <span class="token assign-left variable">HWalign</span><span class="token operator">=</span><span class="token number">64</span>, <span class="token assign-left variable">Order</span><span class="token operator">=</span><span class="token number">0</span>-3, <span class="token assign-left variable">MinObjects</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">CPUs</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">Nodes</span><span class="token operator">=</span><span class="token number">1</span>Hierarchical RCU implementation.        Build-time adjustment of leaf fanout to <span class="token number">32</span>.NR_IRQS:16 nr_irqs:16 <span class="token number">16</span>Gic dist init<span class="token punctuation">..</span>.arm_arch_timer: Architected cp15 timer<span class="token punctuation">(</span>s<span class="token punctuation">)</span> running at <span class="token number">50</span>.00MHz <span class="token punctuation">(</span>phys<span class="token punctuation">)</span>.clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0xb8812736b, max_idle_ns: <span class="token number">440795202655</span> nssched_clock: <span class="token number">56</span> bits at 50MHz, resolution 20ns, wraps every 4398046511100nsSwitching to timer-based delay loop, resolution 20nsclocksource: hisp804: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: <span class="token number">637086815595</span> nsConsole: colour dummy device 80x30Calibrating delay loop <span class="token punctuation">(</span>skipped<span class="token punctuation">)</span>, value calculated using timer frequency<span class="token punctuation">..</span> <span class="token number">100.00</span> BogoMIPS <span class="token punctuation">(</span>lpj<span class="token operator">=</span><span class="token number">500000</span><span class="token punctuation">)</span>pid_max: default: <span class="token number">32768</span> minimum: <span class="token number">301</span>Mount-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">1024</span> <span class="token punctuation">(</span>order: <span class="token number">0</span>, <span class="token number">4096</span> bytes<span class="token punctuation">)</span>Mountpoint-cache <span class="token builtin class-name">hash</span> table entries: <span class="token number">1024</span> <span class="token punctuation">(</span>order: <span class="token number">0</span>, <span class="token number">4096</span> bytes<span class="token punctuation">)</span>CPU: Testing <span class="token function">write</span> buffer coherency: okCPU0: thread -1, cpu <span class="token number">0</span>, socket <span class="token number">0</span>, mpidr <span class="token number">80000000</span>Setting up static identity map <span class="token keyword">for</span> 0x80100000 - 0x80100058CPU1: thread -1, cpu <span class="token number">1</span>, socket <span class="token number">0</span>, mpidr <span class="token number">80000001</span>Brought up <span class="token number">2</span> CPUsSMP: Total of <span class="token number">2</span> processors activated <span class="token punctuation">(</span><span class="token number">200.00</span> BogoMIPS<span class="token punctuation">)</span>.CPU: All CPU<span class="token punctuation">(</span>s<span class="token punctuation">)</span> started <span class="token keyword">in</span> SVC mode.devtmpfs: initializedVFP support v0.3: implementor <span class="token number">41</span> architecture <span class="token number">2</span> part <span class="token number">30</span> variant <span class="token number">7</span> <span class="token function">rev</span> <span class="token number">5</span>clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: <span class="token number">19112604462750000</span> nsfutex <span class="token builtin class-name">hash</span> table entries: <span class="token number">512</span> <span class="token punctuation">(</span>order: <span class="token number">3</span>, <span class="token number">32768</span> bytes<span class="token punctuation">)</span>pinctrl core: initialized pinctrl subsystemNET: Registered protocol family <span class="token number">16</span>DMA: preallocated <span class="token number">256</span> KiB pool <span class="token keyword">for</span> atomic coherent allocationsSerial: AMBA PL011 UART driver120a0000.uart: ttyAMA0 at MMIO 0x120a0000 <span class="token punctuation">(</span>irq <span class="token operator">=</span> <span class="token number">21</span>, base_baud <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> is a PL011 rev2console <span class="token punctuation">[</span>ttyAMA0<span class="token punctuation">]</span> enabledSCSI subsystem initializedssp-pl022 120c0000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c0000.spi: mapped registers from 0x120c0000 to e0834000ssp-pl022 120c1000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c1000.spi: mapped registers from 0x120c1000 to e0838000ssp-pl022 120c2000.spi: ARM PL022 driver, device ID: 0x00800022ssp-pl022 120c2000.spi: mapped registers from 0x120c2000 to e083a000usbcore: registered new interface driver usbfsusbcore: registered new interface driver hubusbcore: registered new device driver usbLinux video capture interface: v2.00clocksource: Switched to clocksource hisp804NET: Registered protocol family <span class="token number">2</span>TCP established <span class="token builtin class-name">hash</span> table entries: <span class="token number">4096</span> <span class="token punctuation">(</span>order: <span class="token number">2</span>, <span class="token number">16384</span> bytes<span class="token punctuation">)</span>TCP <span class="token builtin class-name">bind</span> <span class="token builtin class-name">hash</span> table entries: <span class="token number">4096</span> <span class="token punctuation">(</span>order: <span class="token number">3</span>, <span class="token number">32768</span> bytes<span class="token punctuation">)</span>TCP: Hash tables configured <span class="token punctuation">(</span>established <span class="token number">4096</span> <span class="token builtin class-name">bind</span> <span class="token number">4096</span><span class="token punctuation">)</span>UDP <span class="token builtin class-name">hash</span> table entries: <span class="token number">256</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>UDP-Lite <span class="token builtin class-name">hash</span> table entries: <span class="token number">256</span> <span class="token punctuation">(</span>order: <span class="token number">1</span>, <span class="token number">8192</span> bytes<span class="token punctuation">)</span>NET: Registered protocol family <span class="token number">1</span>RPC: Registered named UNIX socket transport module.RPC: Registered udp transport module.RPC: Registered tcp transport module.RPC: Registered tcp NFSv4.1 backchannel transport module.workingset: <span class="token assign-left variable">timestamp_bits</span><span class="token operator">=</span><span class="token number">30</span> <span class="token assign-left variable">max_order</span><span class="token operator">=</span><span class="token number">17</span> <span class="token assign-left variable">bucket_order</span><span class="token operator">=</span><span class="token number">0</span>NFS: Registering the id_resolver key <span class="token builtin class-name">type</span>Key <span class="token builtin class-name">type</span> id_resolver registeredKey <span class="token builtin class-name">type</span> id_legacy registeredfuse init <span class="token punctuation">(</span>API version <span class="token number">7.26</span><span class="token punctuation">)</span>Block layer SCSI generic <span class="token punctuation">(</span>bsg<span class="token punctuation">)</span> driver version <span class="token number">0.4</span> loaded <span class="token punctuation">(</span>major <span class="token number">252</span><span class="token punctuation">)</span>io scheduler noop registeredio scheduler deadline registeredio scheduler cfq registered <span class="token punctuation">(</span>default<span class="token punctuation">)</span>pl061_gpio 120d0000.gpio_chip: PL061 GPIO chip @0x120d0000 registeredpl061_gpio 120d1000.gpio_chip: PL061 GPIO chip @0x120d1000 registeredpl061_gpio 120d2000.gpio_chip: PL061 GPIO chip @0x120d2000 registeredpl061_gpio 120d3000.gpio_chip: PL061 GPIO chip @0x120d3000 registeredpl061_gpio 120d4000.gpio_chip: PL061 GPIO chip @0x120d4000 registeredpl061_gpio 120d5000.gpio_chip: PL061 GPIO chip @0x120d5000 registeredpl061_gpio 120d6000.gpio_chip: PL061 GPIO chip @0x120d6000 registeredpl061_gpio 120d7000.gpio_chip: PL061 GPIO chip @0x120d7000 registeredpl061_gpio 120d8000.gpio_chip: PL061 GPIO chip @0x120d8000 registeredpl061_gpio 120d9000.gpio_chip: PL061 GPIO chip @0x120d9000 registeredpl061_gpio 120da000.gpio_chip: PL061 GPIO chip @0x120da000 registeredpl061_gpio 120db000.gpio_chip: PL061 GPIO chip @0x120db000 registeredbrd: module loadedlibphy: hisi_femac_mii_bus: probedlibphy: Fixed MDIO Bus: probedhisi-femac <span class="token number">10010000</span>.ethernet: connect to PHY failed<span class="token operator">!</span>usbcore: registered new interface driver r8152xhci-hcd 100e0000.xhci_0: xHCI Host Controllerxhci-hcd 100e0000.xhci_0: new USB bus registered, assigned bus number <span class="token number">1</span>xhci-hcd 100e0000.xhci_0: hcc params 0x0220fe6c hci version 0x110 quirks 0x20010010xhci-hcd 100e0000.xhci_0: irq <span class="token number">29</span>, io mem 0x100e0000hub <span class="token number">1</span>-0:1.0: USB hub foundhub <span class="token number">1</span>-0:1.0: <span class="token number">1</span> port detectedxhci-hcd 100e0000.xhci_0: xHCI Host Controllerxhci-hcd 100e0000.xhci_0: new USB bus registered, assigned bus number <span class="token number">2</span>usb usb2: We don<span class="token string">'t know the algorithms for LPM for this host, disabling LPM.hub 2-0:1.0: USB hub foundhub 2-0:1.0: hub can'</span>t support USB3.0usbcore: registered new interface driver usb-storagemousedev: PS/2 mouse device common <span class="token keyword">for</span> all miceusbcore: registered new interface driver xpadhibvt_rtc <span class="token number">12080000</span>.rtc: rtc core: registered <span class="token number">12080000</span>.rtc as rtc0hibvt_rtc <span class="token number">12080000</span>.rtc: RTC driver <span class="token keyword">for</span> hibvt enabledi2c /dev entries driverhibvt-i2c 120b0000.i2c: hibvt-i2c0@100000hz registeredhibvt-i2c 120b1000.i2c: hibvt-i2c1@100000hz registeredhibvt-i2c 120b2000.i2c: hibvt-i2c2@100000hz registeredhibvt-i2c 120b3000.i2c: hibvt-i2c3@100000hz registeredhibvt-i2c 120b4000.i2c: hibvt-i2c4@100000hz registeredhibvt-i2c 120b5000.i2c: hibvt-i2c5@100000hz registeredhibvt-i2c 120b6000.i2c: hibvt-i2c6@100000hz registeredhibvt-i2c 120b7000.i2c: hibvt-i2c7@100000hz registeredusbcore: registered new interface driver uvcvideoUSB Video Class driver <span class="token punctuation">(</span><span class="token number">1.1</span>.1<span class="token punctuation">)</span>himci: mmc <span class="token function">host</span> probehimci: mmc <span class="token function">host</span> probemmc0: CMDQ supported: depth: <span class="token number">16</span>scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>scan elemnts: startp:7 endp:117Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>02/15<span class="token punctuation">]</span>usbcore: registered new interface driver usbhidusbhid: USB HID core driverNET: Registered protocol family <span class="token number">10</span>NET: Registered protocol family <span class="token number">17</span>8021q: <span class="token number">802</span>.1Q VLAN Support v1.8Key <span class="token builtin class-name">type</span> dns_resolver registeredRegistering SWP/SWPB emulation handlermmc0: new HS200 MMC card at address 0001mmc0: -524: cmdq: unable to set-upmmcblk0: mmc0:0001 8GTF4R <span class="token number">7.28</span> GiBmmcblk0boot0: mmc0:0001 8GTF4R partition <span class="token number">1</span> <span class="token number">4.00</span> MiBmmcblk0boot1: mmc0:0001 8GTF4R partition <span class="token number">2</span> <span class="token number">4.00</span> MiBmmcblk0rpmb: mmc0:0001 8GTF4R partition <span class="token number">3</span> <span class="token number">512</span> KiB mmcblk0: p1<span class="token punctuation">(</span>boot<span class="token punctuation">)</span> p2<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span> p3<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span> p4<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span> p5<span class="token punctuation">(</span>user<span class="token punctuation">)</span>hibvt_rtc <span class="token number">12080000</span>.rtc: setting system clock to <span class="token number">1970</span>-01-01 00:58:42 UTC <span class="token punctuation">(</span><span class="token number">3522</span><span class="token punctuation">)</span>EXT4-fs <span class="token punctuation">(</span>mmcblk0p3<span class="token punctuation">)</span>: mounted filesystem with ordered data mode. Opts: <span class="token punctuation">(</span>null<span class="token punctuation">)</span>VFS: Mounted root <span class="token punctuation">(</span>ext4 filesystem<span class="token punctuation">)</span> on device <span class="token number">179</span>:3.devtmpfs: mountedFreeing unused kernel memory: 1024K <span class="token punctuation">(</span>c0800000 - c0900000<span class="token punctuation">)</span>            _ _ _ _ _ _ _ _ _ _ _ _            <span class="token punctuation">\</span>  _  _   _  _ _ ___            / /__/ <span class="token punctuation">\</span> <span class="token operator">|</span>_/           / __   /  -  _ ___          / /  / /  / /  _ _ _ _/ /  /  <span class="token punctuation">\</span>_/  <span class="token punctuation">\</span>_ _________________<span class="token punctuation">\</span>___<span class="token punctuation">\</span>__________________<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S00devsmknod: /dev/console: File existsmknod: /dev/ttyAMA0: File existsmknod: /dev/null: File exists<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S01udevrandom: udevd: uninitialized urandom <span class="token builtin class-name">read</span> <span class="token punctuation">(</span><span class="token number">16</span> bytes <span class="token builtin class-name">read</span><span class="token punctuation">)</span>udevd<span class="token punctuation">[</span><span class="token number">87</span><span class="token punctuation">]</span>: starting eudev-3.2.7<span class="token punctuation">[</span>RCS<span class="token punctuation">]</span>: /etc/init.d/S80networkAuto login as root <span class="token punctuation">..</span>.login<span class="token punctuation">[</span><span class="token number">103</span><span class="token punctuation">]</span>: root login on <span class="token string">'ttyS000'</span>Welcome to HiLinux.None of nfsroot found <span class="token keyword">in</span> cmdline.~ <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_10_Rootfs的单独编译和验证</title>
      <link href="/2021/10/16/hi3516dv300-10-rootfs-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/16/hi3516dv300-10-rootfs-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-内核启动后，就会去挂载根文件系统"><a href="#1-内核启动后，就会去挂载根文件系统" class="headerlink" title="1.内核启动后，就会去挂载根文件系统"></a>1.内核启动后，就会去挂载根文件系统</h2><ul><li><p>移植了应用程序，就往bin目录里面放</p></li><li><p>移植了库，就往lib目录里面放</p></li><li><p>要区分一个边界：哪些东西是一定要你去做的，哪些东西不一定是要你做的</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">14.1</span>、rootfs知识点回顾<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>rootfs的作用和意义，包含内容<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>rootfs的制作步骤：构建文件夹形式的rootfs，用mkfs工具制作成image<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>构建文件夹形式rootfs的关键步骤：基础文件夹、etc内配置文件、busybox移植、复制动态库<span class="token number">14.2</span>、分析Study16DV300开发板资料状况<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>官方SDK中相关文档和资料。分析结论：大量的有用资料在osdrv/Makefile中，但是你得能看懂。<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>官方SDK和配套SDK中，readme_cn.txt中几乎无有用信息<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>配套SDK中，make.sh脚本中有可用信息，值得详细分析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>rootfs中的bin文件夹，存放应用程序，是要通过busybox生成的</p></li><li><p>rootfs中的lib文件夹，存放的是共享链接库</p></li><li><p>rootfs中的etc文件夹，是存放了一些文件的</p></li><li><p>在动态链接库(lib)中，可以来判断一下，相应的动态链接库是放在哪里？</p></li></ul><blockquote><p>放在：<br>并且，一般使用的是这个：a7_softfp_neon-vfpv4<br>它的动态链接库就放在：lib.tgz里面<br>里面就有很多.so文件，就是我们文件系统所需要的.so文件<br>这就是一个典型的交叉编译工具链里面的动态链接库的样子<br>busybox也是通过make menuconfig来生成.config文件的</p></blockquote><h2 id="2-自制根文件系统"><a href="#2-自制根文件系统" class="headerlink" title="2.自制根文件系统"></a>2.自制根文件系统</h2><p><img src="https://pic.huangruimin.tech/20220204212223.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">15</span>.自制rootfs实践<span class="token number">15.1</span>、参考资料<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>osdrv/Makefile<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>make.sh<span class="token number">15.2</span>、实践<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>参考核心课程1期中讲的理论和方法，完全可以为Study16DV300开发板自制一个最小rootfs。<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>步骤1：解压rootfs.tgz得到基础，已有etc内配置文件<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>步骤2：配置编译安装busybox，可参考make.sh中build_busybox函数<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>步骤3：复制动态库，在工具链的runtime_glibc/a7_softfp_neon-vfpv4目录中<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>步骤4：制作成image，可参考make.sh中make_rootfs函数<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>步骤5：烧录并启动测试<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token parameter variable">-j8</span><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token function">install</span> ./make_ext4fs <span class="token parameter variable">-l</span> 200M <span class="token parameter variable">-s</span> aston_rootfs_hi3516dv300.ext4 rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>制作细节看下一节笔记：15-自制rootfs实践</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_9_Kernel的单独编译和验证</title>
      <link href="/2021/10/15/hi3516dv300-9-kernel-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/15/hi3516dv300-9-kernel-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Kernel的单独编译和验证"><a href="#1-Kernel的单独编译和验证" class="headerlink" title="1.Kernel的单独编译和验证"></a>1.Kernel的单独编译和验证</h2><h3 id="1-1-打补丁"><a href="#1-1-打补丁" class="headerlink" title="1.1 打补丁"></a>1.1 打补丁</h3><ul><li>tar.gz的压缩比例没有那么狠</li><li>tar.xz的压缩比例则更狠，先得用xz软件解压成gz</li></ul><p><img src="https://pic.huangruimin.tech/20211229204822.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">14</span>         <span class="token builtin class-name">cd</span> opensource/kernel<span class="token number">15</span>         <span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> linux-4.9.37.tar.gz<span class="token number">16</span>         <span class="token function">mv</span> linux-4.9.37 linux-4.9.y<span class="token number">17</span>         <span class="token builtin class-name">cd</span> linux-4.9.y<span class="token number">18</span>         patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/linux-4.9.37.patch<span class="token number">19</span>         <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token number">20</span>         <span class="token function">tar</span> <span class="token parameter variable">-czvf</span> linux-4.9.y.tgz linux-4.9.y<span class="token number">21</span>         <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-编译Image"><a href="#1-2-编译Image" class="headerlink" title="1.2 编译Image"></a>1.2 编译Image</h3><h4 id="1-2-1-readme上的说明"><a href="#1-2-1-readme上的说明" class="headerlink" title="1.2.1 readme上的说明"></a>1.2.1 readme上的说明</h4><p><img src="https://pic.huangruimin.tech/20211229212759.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">46</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>单独编译kernel<span class="token punctuation">(</span>以hi3516dv300举例<span class="token punctuation">)</span>：<span class="token number">47</span>     注意：单独编译内核之前请先阅读osdrv/opensource/kernel下的readme_cn.txt说明。<span class="token number">48</span><span class="token number">49</span>     待进入内核源代码目录后，执行以下操作<span class="token number">50</span>     <span class="token function">cp</span> arch/arm/configs/hi3516dv300_smp_defconfig  .config<span class="token number">51</span>     <span class="token punctuation">(</span>emmc启动时执行如下操作：cp arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config<span class="token punctuation">)</span><span class="token number">52</span><span class="token number">53</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span class="token number">54</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- uImage<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-2-具体操作过程说明"><a href="#1-2-2-具体操作过程说明" class="headerlink" title="1.2.2 具体操作过程说明"></a>1.2.2 具体操作过程说明</h4><ul><li><p>首先，生成相应的.config文件，并且要对应是EMMC的才行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y<span class="token function">cp</span> arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>make menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其实这一步的menuconfig，也是在生成.config文件而已<br>注意这一步也是要先load那个.config文件</p></blockquote></li><li><p>编译Image</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- uImage <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在刚刚的步骤中，只是把make menuconfig中选择为y的部分编译进去了</p></blockquote></li></ul><blockquote><p>实际上，在海思当中，有很多驱动是以模块的形式存在的，需要单独编译ko文件</p></blockquote><h3 id="1-3-编译模块"><a href="#1-3-编译模块" class="headerlink" title="1.3 编译模块"></a>1.3 编译模块</h3><blockquote><p>这一步，就是把配置为M的那些东西，也把它编译出来了<br>其实，也就是编译ko文件<br>编译好ko文件后，就把这些ko文件复制到根文件系统中去<br>当系统起来后，再通过imsmode的方式去加载它</p></blockquote><h4 id="1-3-1-readme中的说明文件"><a href="#1-3-1-readme中的说明文件" class="headerlink" title="1.3.1 readme中的说明文件"></a>1.3.1 readme中的说明文件</h4><p><img src="https://pic.huangruimin.tech/20211229222422.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">56</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>单独编译模块<span class="token punctuation">(</span>以hi3516dv300举例<span class="token punctuation">)</span>： <span class="token number">57</span>     待进入内核源代码目录后，执行以下操作 <span class="token number">58</span>     <span class="token function">cp</span> arch/arm/configs/hi3516dv300_smp_defconfig  .config <span class="token number">59</span>     <span class="token punctuation">(</span>emmc启动时执行如下操作：cp arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config<span class="token punctuation">)</span> <span class="token number">60</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig <span class="token number">61</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- modules<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-2-具体操作过程说明"><a href="#1-3-2-具体操作过程说明" class="headerlink" title="1.3.2 具体操作过程说明"></a>1.3.2 具体操作过程说明</h4><ul><li><p>首先，生成相应的.config文件，并且要对应是EMMC的才行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y<span class="token function">cp</span> arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>make menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其实这一步的menuconfig，也是在生成.config文件而已<br>注意这一步也是要先load那个.config文件</p></blockquote></li><li><p>编译模块</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- modules <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="2烧录"><a href="#2烧录" class="headerlink" title="2烧录"></a>2烧录</h2><h3 id="2-1-Kernel的路径"><a href="#2-1-Kernel的路径" class="headerlink" title="2.1 Kernel的路径"></a>2.1 Kernel的路径</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y/arch/arm/boot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.huangruimin.tech/20220218163130.png"></p><h3 id="2-2-烧写成功的截图"><a href="#2-2-烧写成功的截图" class="headerlink" title="2.2 烧写成功的截图"></a>2.2 烧写成功的截图</h3><p><img src="https://pic.huangruimin.tech/20211229224425.png"></p><h3 id="2-3-查看内核的编译时间"><a href="#2-3-查看内核的编译时间" class="headerlink" title="2.3 查看内核的编译时间"></a>2.3 查看内核的编译时间</h3><p><img src="https://pic.huangruimin.tech/20211229224803.png"></p><h3 id="2-4-查看具体加载了哪些模块"><a href="#2-4-查看具体加载了哪些模块" class="headerlink" title="2.4 查看具体加载了哪些模块"></a>2.4 查看具体加载了哪些模块</h3><p><img src="https://pic.huangruimin.tech/20211229225608.png"></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_8_Uboot的单独编译和验证</title>
      <link href="/2021/10/14/hi3516dv300-8-uboot-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/14/hi3516dv300-8-uboot-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Uboot的单独编译和验证"><a href="#1-Uboot的单独编译和验证" class="headerlink" title="1.Uboot的单独编译和验证"></a>1.Uboot的单独编译和验证</h2><ul><li>参考文献1：SDK内osdrv中的readme</li><li>参考文献2：ReleaseDoc中的《Hi3516CV500╱Hi3516DV300╱Hi3516AV300 U-boot 移植应用开发指南.pdf》</li></ul><h2 id="2-编译"><a href="#2-编译" class="headerlink" title="2.编译"></a>2.编译</h2><h3 id="2-1-首先进入到Uboot源码路径下："><a href="#2-1-首先进入到Uboot源码路径下：" class="headerlink" title="2.1 首先进入到Uboot源码路径下："></a>2.1 首先进入到Uboot源码路径下：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> u-boot-2016.11.tgz<span class="token builtin class-name">cd</span> u-boot-2016.11/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中这个Uboot是根据海思官方开发板移植过的，一般如果没有特殊的需求，Uboot就和官方的一样</p><h3 id="2-2-然后生成config文件"><a href="#2-2-然后生成config文件" class="headerlink" title="2.2 然后生成config文件"></a>2.2 然后生成config文件</h3><p>其中生成.config文件就有以下4种方法：</p><ul><li>这一条也是readme中的，对应EMMC的硬件版本：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_emmc_defconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>这一条是readme中写的，也是默认编译的SPI_Flash的，对EMMC硬件来说是不能用的：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_defconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>其中这一条是手册中写的，但用的是SPI_Flash版本的，对EMMC硬件来说是不能用的：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>注意：使用下面这条命令时：make ARCH=arm CROSS_COMPILE=arm-himix200-linux- -j 8还会重新提示你进行选择配置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ./configs/hi3516dv300_emmc_defconfig ./.config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="2-3-执行menuconfig配置，当然默认不用配置"><a href="#2-3-执行menuconfig配置，当然默认不用配置" class="headerlink" title="2.3 执行menuconfig配置，当然默认不用配置"></a>2.3 执行menuconfig配置，当然默认不用配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连续按2下ESC即可直接推出配置的界面</p><blockquote><p>注意这一步也是要先load那个.config文件</p></blockquote><blockquote><p>注意这一步也是在写.config文件的</p></blockquote><blockquote><p>这一步在默认情况下不用去配置</p></blockquote><h3 id="2-4-编译生成中间文件u-boot-bin"><a href="#2-4-编译生成中间文件u-boot-bin" class="headerlink" title="2.4 编译生成中间文件u-boot.bin"></a>2.4 编译生成中间文件u-boot.bin</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token parameter variable">-j</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但这里生成的只是中间件，很多厂商都选择把一些跟硬件相关的把它独立出来，这个原理跟设备树有点类似，也就是和硬件相关的配置还在下面的步骤中</p><h3 id="2-5-编译生成gzip文件"><a href="#2-5-编译生成gzip文件" class="headerlink" title="2.5 编译生成gzip文件"></a>2.5 编译生成gzip文件</h3><p>首先进入到路径：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip<span class="token function">make</span><span class="token builtin class-name">cd</span> bin<span class="token function">cp</span> ./gzip /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/arch/arm/cpu/armv7/hi3516dv300/hw_compressed <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-配置表格文件"><a href="#2-6-配置表格文件" class="headerlink" title="2.6 配置表格文件"></a>2.6 配置表格文件</h3><ul><li>表格路径</li></ul><p><img src="https://pic.huangruimin.tech/20220217214541.png"></p><ul><li>设计思想：把Uboot配套的整个硬件的很多的这个值写到了Excel中</li></ul><blockquote><p>第一项，配置Uboot里面的PLL</p></blockquote><ul><li>配置好表格文件后，点击Generate reg bin file，生成reg_info.bin文件</li></ul><h3 id="2-7-拷贝相关文件"><a href="#2-7-拷贝相关文件" class="headerlink" title="2.7 拷贝相关文件"></a>2.7 拷贝相关文件</h3><ul><li>拷贝reg_info.bin到U-bot源码目录，重命名为.reg</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这里通过SSH工具拷贝reg_info.bin文件</p></blockquote><blockquote><p>然后进行重命名</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> ./reg_info.bin ./.reg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>将生成的u-boot.bin复制到osdrv/tools/pc/uboot_tools/目录<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token function">cp</span> ./u-boot.bin <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/tools/pc/uboot_tools/ <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="2-8-编译生成u-boot-hi3516dv300-bin"><a href="#2-8-编译生成u-boot-hi3516dv300-bin" class="headerlink" title="2.8 编译生成u-boot-hi3516dv300.bin"></a>2.8 编译生成u-boot-hi3516dv300.bin</h3><ul><li><p>注意make的时候用的是u-boot-z.bin，但实际生成的是u-boot-hi3516dv300.bin</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- u-boot-z.bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>在当前Uboot源码路径下生成的u-boot-hi3516dv300.bin就是能够在单板上运行的uboot镜像</p></li></ul><h2 id="3-烧录并设置环境变量"><a href="#3-烧录并设置环境变量" class="headerlink" title="3 烧录并设置环境变量"></a>3 烧录并设置环境变量</h2><h3 id="3-1-烧写"><a href="#3-1-烧写" class="headerlink" title="3.1 烧写"></a>3.1 烧写</h3><ul><li><p>参考以前烧写实战</p></li><li><p>以前三星的，他的整个环境变量是放在跟Uboot独立的一个空间里面，当我们重新去烧写Uboot的时候，并不会覆盖之前的bootcmd和bootargs，所以以前对的是可以保存的</p></li><li><p>但海思的不是这么设计，它的环境变量整个是和Uboot在一起的，所以重新烧写Uboot时，我们这份Uboot里面的环境变量，会覆盖之前的，但是默认的环境变量又不对。所以要重新配置才行。</p></li><li><p>烧录之后是不能启动的，原因在于要设置bootcmd和bootargs</p></li><li><p>其中烧写的相关配置如下图所示：<br><img src="https://pic.huangruimin.tech/20211205202224.png"></p></li></ul><h3 id="3-2-设置换将变量"><a href="#3-2-设置换将变量" class="headerlink" title="3.2 设置换将变量"></a>3.2 设置换将变量</h3><ul><li><p>设置环境变量时，发现只认识setenv，并不认识set这个环境变量</p></li><li><p>也并不是每次都要重新设置环境变量</p></li><li><p>具体的环境变量如下：</p><blockquote><p>bootcmd ：Uboot 首先执行这句</p></blockquote></li></ul><blockquote><p>bootargs：Uboot 给Kernel传参</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">printenv</span>setenv bootcmd <span class="token string">"mmc read 0 0x81000000 0x2800 0x5000; bootm 0x81000000"</span>setenv bootargs <span class="token string">"mem=512M console=ttyAMA0,115200 root=/dev/mmcblk0p3 rootfstype=ext4 rw rootwait blkdevparts=mmcblk0:5M(boot),10M(kernel),500M(rootfs),200M(userdata),-(user)"</span>saveenv<span class="token function">printenv</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_7_开发板配套SDK解读</title>
      <link href="/2021/10/13/hi3516dv300-7-kai-fa-ban-pei-tao-sdk-jie-du/"/>
      <url>/2021/10/13/hi3516dv300-7-kai-fa-ban-pei-tao-sdk-jie-du/</url>
      
        <content type="html"><![CDATA[<h2 id="1、文件夹结构"><a href="#1、文件夹结构" class="headerlink" title="1、文件夹结构"></a>1、文件夹结构</h2><p><img src="https://pic.huangruimin.tech/20211224152259.png"><br>注意：这里有很多符号链接，因为这些文件夹都是链接到别的地方的</p><blockquote><p>这里有干货的文件夹，就只有osdrv与smp</p></blockquote><blockquote><p>make_ext4fs是编译的工具</p></blockquote><blockquote><p>烧录的时候有用到userdata，userdata里面有很多要用到的配置</p></blockquote><blockquote><p>很多芯片的官方，都想做成这样一键编译的形式，问题是，做好后，就不能动</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_6_官方SDK开发实战</title>
      <link href="/2021/10/12/hi3516dv300-6-guan-fang-sdk-kai-fa-shi-zhan/"/>
      <url>/2021/10/12/hi3516dv300-6-guan-fang-sdk-kai-fa-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SDK脚本管理解析"><a href="#1-SDK脚本管理解析" class="headerlink" title="1. SDK脚本管理解析"></a>1. SDK脚本管理解析</h2><h3 id="1-1-sdk-unpack脚本解析"><a href="#1-1-sdk-unpack脚本解析" class="headerlink" title="1.1 sdk.unpack脚本解析"></a>1.1 sdk.unpack脚本解析</h3><ul><li>就是为了解压而已</li></ul><h3 id="1-2-scripts-common-sh脚本解析"><a href="#1-2-scripts-common-sh脚本解析" class="headerlink" title="1.2 scripts/common.sh脚本解析"></a>1.2 scripts/common.sh脚本解析</h3><ul><li>定义了很多函数，整个SDK管理的所在</li></ul><h3 id="1-3-osdrv-readme-cn-txt"><a href="#1-3-osdrv-readme-cn-txt" class="headerlink" title="1.3 osdrv/readme_cn.txt"></a>1.3 osdrv/readme_cn.txt</h3><ul><li>定义了怎么编译，包括一键编译，全部编译</li></ul><h2 id="2-如何安装交叉编译工具链"><a href="#2-如何安装交叉编译工具链" class="headerlink" title="2.如何安装交叉编译工具链"></a>2.如何安装交叉编译工具链</h2><p><img src="https://pic.huangruimin.tech/20211223141315.png"></p><blockquote><p>位于：/home/book/Hi3516DV300/arm-himix200-linux中</p></blockquote><ul><li><p>正确的安装命令：</p><blockquote><p>sudo source ./arm-himix200-linux.install</p></blockquote></li><li><p>如果遇到sudo: source: command not found，那么先执行：</p><blockquote><p>sudo su</p></blockquote></li><li><p>如下图所示：<br><img src="https://pic.huangruimin.tech/20211223144953.png"><br><img src="https://pic.huangruimin.tech/20211223145209.png"></p></li><li><p>要明白x86-arm的含义：</p><blockquote><p>x86表示的是宿主运行环境，arm表示目标运行环境</p></blockquote></li><li><p>最后安装的工具如下图所示：<br><img src="https://pic.huangruimin.tech/20211223150519.png"></p></li><li><p>/etc/profile：系统启动之初，就能启动它</p></li><li><p>.bach.src：其实是低一个等级的</p></li><li><p>最后检查下/etc/profile里面，其实是有export PATH=”/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:$PATH”的，说明是添加到环境变量里面去了。</p></li><li><p>最后安装好后的情况如下输出所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">book@100ask:~$ <span class="token function">ls</span>Configuring_ubuntu.sh  Documents  examples.desktop  Music       Pictures  snap       tftpbootDesktop                Downloads  Hi3516DV300       nfs_rootfs  Public    Templates  Videosbook@100ask:~$ arm-himix200-linux-gcc <span class="token parameter variable">-v</span>Using built-in specs.<span class="token assign-left variable">COLLECT_GCC</span><span class="token operator">=</span>arm-himix200-linux-gcc<span class="token assign-left variable">COLLECT_LTO_WRAPPER</span><span class="token operator">=</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/host_bin/<span class="token punctuation">..</span>/libexec/gcc/arm-linux-gnueabi/6.3.0/lto-wrapperTarget: arm-linux-gnueabiConfigured with: /home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/src/gcc-6.3.0/configure <span class="token parameter variable">--host</span><span class="token operator">=</span>i386-redhat-linux <span class="token parameter variable">--build</span><span class="token operator">=</span>i386-redhat-linux <span class="token parameter variable">--target</span><span class="token operator">=</span>arm-linux-gnueabi <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install --enable-threads --disable-libmudflap --disable-libssp --disable-libstdcxx-pch --with-gnu-as --with-gnu-ld --enable-languages<span class="token operator">=</span>c,c++ --enable-shared --enable-lto --enable-symvers<span class="token operator">=</span>gnu --enable-__cxa_atexit --disable-nls --enable-clocale<span class="token operator">=</span>gnu --enable-extra-hisi-multilibs --with-sysroot<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install/target --with-build-sysroot<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install/target --with-gmp<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --with-mpfr<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --with-mpc<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --enable-libgomp --disable-libitm --enable-poison-system-directories --with-pkgversion<span class="token operator">=</span><span class="token string">'HC&amp;C V1R3C00SPC200B005_20190606'</span> --disable-bootstrapThread model: posixgcc version <span class="token number">6.3</span>.0 <span class="token punctuation">(</span>HC<span class="token operator">&amp;</span>C V1R3C00SPC200B005_20190606<span class="token punctuation">)</span>book@100ask:~$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>解压过程中会有这种报错，所以，要重新配置一下：</p></li></ul><p><img src="https://pic.huangruimin.tech/20211223153942.png"></p><p><img src="https://pic.huangruimin.tech/20211223154131.png"></p><ul><li>注意，在解压之前，需要把芯片的型号给确定好，就是要在</li></ul><p><img src="https://pic.huangruimin.tech/20211223165806.png"><br><img src="https://pic.huangruimin.tech/20211223165831.png"></p><ul><li>接下来就是进行解压</li></ul><p><img src="https://pic.huangruimin.tech/20211223170123.png"></p><ul><li><p>注意查阅OSDRV文件夹下的readme</p></li><li><p>荣品给的那一份，其实是编译好的，并没有重新压缩回去</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_5_官方SDK管理脚本解析</title>
      <link href="/2021/10/11/hi3516dv300-5-guan-fang-sdk-guan-li-jiao-ben-jie-xi/"/>
      <url>/2021/10/11/hi3516dv300-5-guan-fang-sdk-guan-li-jiao-ben-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Hi3516CV500-SDK-V2-0-2-1解析"><a href="#1-Hi3516CV500-SDK-V2-0-2-1解析" class="headerlink" title="1.Hi3516CV500_SDK_V2.0.2.1解析"></a>1.Hi3516CV500_SDK_V2.0.2.1解析</h2><p><img src="https://pic.huangruimin.tech/20211206212307.png"><br> 可以看出</p><ul><li>官方最早推出这个芯片的时候，使用的还是SPI Flash的</li><li>smp：表示对称多核心，Hi3516DV300是双核A7，两个都是A7，那么就叫做对称。</li><li>glibc：表示用的C库，表示是用的是GCC的C库，glibc表示的是比较完善的c库</li><li>随便打开一个看看，有不同的Uboot，Kernel，Rootfs，如下图：<br> <img src="https://pic.huangruimin.tech/20211206212811.png"></li></ul><blockquote><p>2k，64k，128表示的是：block(块)大小</p></blockquote><blockquote><p>4bit，24bit：表示的是总线的大小，是根文件系统制作的差异</p></blockquote><blockquote><p>后缀表示不同的根文件系统类型</p></blockquote><blockquote><p>如果目标板用的是SPI_Flash，那么直接用这里面的就行了，但是我们用的是EMMC，对我们没用。</p></blockquote><p><img src="https://pic.huangruimin.tech/20211206214147.png"></p><blockquote><p>这里的osal，全称是：Operating System Abstract Layer</p></blockquote><blockquote><p>就是把操作系统和上层之间，定义一层，把它们隔离开，这么做，就是为了很轻松地不依赖Linux，海思上层对接osal，lite-os上层也对接osal，这样维护起来就轻松了</p></blockquote><h2 id="2-SDK管理脚本解析"><a href="#2-SDK管理脚本解析" class="headerlink" title="2.SDK管理脚本解析"></a>2.SDK管理脚本解析</h2><h3 id="2-1-sdk-cleanup脚本解析"><a href="#2-1-sdk-cleanup脚本解析" class="headerlink" title="2.1 sdk.cleanup脚本解析"></a>2.1 sdk.cleanup脚本解析</h3><ul><li>就是为了恢复到原始状态<blockquote><p>run_command_progress_float就是为了以进度条的形式运行<br>smp表示的是对称多核<br>amp表示的是非对称多核<br>这里面主要做了两个事：</p><blockquote><ul><li>删除smp</li><li>删除osdrv</li></ul></blockquote></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_4_SDK资源简介</title>
      <link href="/2021/10/10/hi3516dv300-4-sdk-zi-yuan-jian-jie/"/>
      <url>/2021/10/10/hi3516dv300-4-sdk-zi-yuan-jian-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="芯片资料的获取途径"><a href="#芯片资料的获取途径" class="headerlink" title="芯片资料的获取途径"></a>芯片资料的获取途径</h2><ul><li>国内：代理商，相对来说比较封闭</li><li>国外：最Open的是TI<blockquote><p>国内的芯片厂商相对来说比较封闭，必须要找到正规的代理商，还要以公司的名义和代理商签保密协议，代理商才会给你，跟市场的推广因素有关，正规的途径：通过你的公司，联系海思的代理商，从他那边去获取。</p></blockquote></li></ul><blockquote><p>如果公司有效益，经常出货，那么他可能会给你技术支持，但是如果没什么效益，那么他可能不太理你。</p></blockquote><blockquote><p>但是网上找到的SDK包，那么是没有保障的。</p></blockquote><blockquote><p>只是拿来出课程，那么么代理商可能不太理你</p></blockquote><h2 id="实际用哪个版本"><a href="#实际用哪个版本" class="headerlink" title="实际用哪个版本"></a>实际用哪个版本</h2><ul><li>尽量使用最新的，老一个版本也不会有太大问题，特别新也不是一个好事</li></ul><h2 id="SDK进行对比"><a href="#SDK进行对比" class="headerlink" title="SDK进行对比"></a>SDK进行对比</h2><ul><li>Hi3516DV300平台官方SDK<blockquote><p>SVP_PC做芯片内部的人脸识别，跑一些深度学习的功能</p></blockquote></li></ul><blockquote><p>toolchain是开发工具链</p></blockquote><blockquote><p>00.hardware-&gt;chip目录下是Hi3516DV300的封装</p></blockquote><blockquote><p>Hi3516CV500_Middleware_V2.0.2.0.tgz 是海思的轻量级GUI框架</p></blockquote><ul><li><p>Hi3518EV200平台官方SDK对比</p><blockquote><p>相似度是非常高的</p></blockquote></li><li><p>Study16DV300SDK对比</p><blockquote><p>这一份是来自于荣品电子</p></blockquote></li></ul><blockquote><p>荣品电子是比较早去做Hi3516DV300这芯片的板子，还有方案的</p></blockquote><blockquote><p>他们拿了海思的SDK，去适配他们的板子</p></blockquote><blockquote><p>朱有鹏又参考了荣品二次开发包</p></blockquote><ul><li>学习SDK方法<blockquote><p>修改GPIO，查看Kernel中GPIO源码<br>Step1：管理脚本，文档<br>Step2：Uboot，Kernel<br>Step3：mpp</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_3_烧录记录2</title>
      <link href="/2021/10/09/hi3516dv300-3-shao-lu-ji-lu-2/"/>
      <url>/2021/10/09/hi3516dv300-3-shao-lu-ji-lu-2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Uboot烧录设置"><a href="#1-Uboot烧录设置" class="headerlink" title="1 Uboot烧录设置"></a>1 Uboot烧录设置</h2><ul><li>注意一定要选中烧录EMMC模式</li><li>如果Uboot已经被清除掉了，那么，就不用重新上电了</li><li>如果Uboot没有被清除，那么，就点击下载后，重新上电</li><li>按照目前的情况来看，用串口来烧写kernel，rootfs，userdata也是可以的</li><li>烧录成功的结果如下图所示：<br><img src="https://pic.huangruimin.tech/20211205202224.png"></li></ul><h2 id="2-kernel-Rootfs-UserData烧录设置"><a href="#2-kernel-Rootfs-UserData烧录设置" class="headerlink" title="2 kernel Rootfs UserData烧录设置"></a>2 kernel Rootfs UserData烧录设置</h2><ul><li>首先，特别要注意的是，通过网络烧录的时候，要关闭Windows防火墙，关闭局域网的就行了</li></ul><p><img src="https://pic.huangruimin.tech/20220120014059.png"></p><p><img src="https://pic.huangruimin.tech/20220120013941.png"></p><ul><li>本质上是通过fastboot软件，通过网口来烧录的</li><li>先选中网口，并且关闭Windows的防火墙</li><li>服务器IP，注意是PC的IP，并且注意是哪个网卡</li><li>最主要的就是填对Server IP，Board Config的话，是可以不管</li><li>烧录到哪个分区，烧录长度多大，都通过分区表文件来解析了</li><li>特别要注意的是：当Uboot起来后，还要等网络起来，才能烧录Kernel，Rootfs，UserData</li><li>烧录成功的结果<br><img src="https://pic.huangruimin.tech/20211206150905.png"></li><li>烧录的过程接入如下所示：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">SerialPort has been connented, Please power off, <span class="token keyword">then</span> power on the device.If it doesn<span class="token string">'t work, please try to repower on.# ---- 36%# ---- 100%Boot download completed!     System startupUncompress Ok!U-Boot 2016.11 (Oct 18 2021 - 15:05:04 +0800)hi3516dv300Relocation Offset is: 0f6d2000Relocating to 8fed2000, new gd at 8fe31ef0, sp at 8fe31ed0MMC:   EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix set temp-phase 3scan elemnts: startp:13 endp:2Tuning SampleClock. mix set phase:[04/07] ele:[07/15] ** First descriptor is NOT a primary desc on 0:1 **MMC/SD Card:    MID:         0x15    Read Block:  512 Bytes    Write Block: 512 Bytes    Chip Size:   7456M Bytes (High Capacity)    Name:        "8GTF4"    Chip Type:   MMC    Version:     0.0    Speed:       100000000Hz    Bus Width:   4bithimci: 0 (eMMC)In:    serialOut:   serialErr:   serialNet:   eth0Warning: eth0 (eth0) using random MAC address - 32:ff:d7:fa:75:83start download process.Boot started successfully!waiting phy ready, it will take 8s.Send command:     setenv serverip 192.168.1.7[EOT](OK)Send command:     setenv ethaddr 00:ff:98:ab:cb:c7[EOT](OK)Send command:     setenv ipaddr 192.168.1.20[EOT](OK)Send command:     setenv netmask 255.255.255.0[EOT](OK)Send command:     setenv gatewayip 192.168.1.1[EOT](OK)Send command:     getinfo ddrfreegetinfo - print hardware informationUsage:getinfo bootmode - get start memeory type e.g. nand/spi etcgetinfo nand - get nand flash informationgetinfo spi - get spi flash informationgetinfo version - get system versiongetinfo - print hardware informationUsage:getinfo bootmode - get start memeory type e.g. nand/spi etcgetinfo nand - get nand flash informationgetinfo spi - get spi flash informationgetinfo version - get system version[EOT](ERROR)      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool&gt;Send command:     mw.b 0x81000000 0xFF 0x369a00[EOT](OK)Send command:     tftp 0x81000000 uImage_hi3516dv300_smpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>uImage_hi3516dv300_smp<span class="token string">'.Load address: 0x81000000Loading: *_################################################################################       #################################################################################       ############################################################################       ############################################################       592.8 KiB/sdoneBytes transferred = 3577924 (369844 hex)[EOT](OK)Send command:     crc32 81000000 369844crc32 for 81000000 ... 81369843 ==&gt; 243e7010[EOT](OK)Send command:     mmc write 0x0 0x81000000 0x2800 0x1b4dMMC write: dev # 0, block # 10240, count 6989 ... 6989 blocks written: OK[EOT](OK)Partition kernel burned successfully!      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool&gt;      Tftp server Download Home switched to &lt;E:\Program Files (x86)\HiTool-BVT-5.2.15\HiTool&gt;Send command:     tftp 0x81000000 rootfs_hi3516dv300.ext4.tmpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>rootfs_hi3516dv300.ext4.tmp<span class="token string">'.Load address: 0x81000000LoadingiB/sdoneBytes transferred = 134215720 (7fff828 hex)[EOT](OK)Send command:     crc32 81000000 7fff828crc32 for 81000000 ... 88fff827 ==&gt; 17e26214[EOT](OK)Send command:     mmc write.ext4sp 0x0 0x81000000 0x7800 0x3fff0MMC write ext4 sparse: dev # 0, block # 30720, count 262128 ... Writing at 30736 blk# --   0% complete.Writing at 39280 blk# --   1% complete.Writing at 71280 blk# --   7% complete.Writing at 74992 blk# --   8% complete.Writing at 78800 blk# --   9% complete.Writing at 83440 blk# --  10% complete.Writing at 92192 blk# --  11% complete.Writing at 93888 blk# --  12% complete.Writing at 99072 blk# --  13% complete.Writing at 107408 blk# --  14% complete.Writing at 109472 blk# --  15% complete.Writing at 115264 blk# --  16% complete.Writing at 119872 blk# --  17% complete.Writing at 125264 blk# --  18% complete.Writing at 131200 blk# --  19% complete.Writing at 136448 blk# --  20% complete.Writing at 140944 blk# --  21% complete.Writing at 146192 blk# --  22% complete.Writing at 151632 blk# --  23% complete.Writing at 157552 blk# --  24% complete.Writing at 162432 blk# --  25% complete.Writing at 177808 blk# --  28% complete.Writing at 184560 blk# --  29% complete.Writing at 188016 blk# --  30% complete.Writing at 193328 blk# --  31% complete.Writing at 198656 blk# --  32% complete.Writing at 204016 blk# --  33% complete.Writing at 209872 blk# --  34% complete.Writing at 217296 blk# --  35% complete.Writing at 219696 blk# --  36% complete.Writing at 236208 blk# --  39% complete.Writing at 248784 blk# --  41% complete.Writing at 252928 blk# --  42% complete.Writing at 270112 blk# --  45% complete.Writing at 281776 blk# --  47% complete.Writing at 293760 blk# --  50% complete.Writing at 306512 blk# --  52% complete.Writing at 319536 blk# --  55% complete.Writing at 337424 blk# --  58% complete.Writing at 343472 blk# --  59% complete.Writing at 363744 blk# --  63% complete.Writing at 370848 blk# --  64% complete.Writing at 393840 blk# --  69% complete.Writing at 413168 blk# --  72% complete.Writing at 414672 blk# --  73% complete.Writing at 422560 blk# --  74% complete.Writing at 425920 blk# --  75% complete.Writing at 431664 blk# --  76% complete.Writing at 435632 blk# --  77% complete.Writing at 454160 blk# --  80% complete.Writing at 456432 blk# --  81% complete.Writing at 465008 blk# --  82% complete.Writing at 467696 blk# --  83% complete.Writing at 472064 blk# --  84% complete.Writing at 476704 blk# --  85% complete.Writing at 499680 blk# --  89% complete.Writing at 515600 blk# --  92% complete.Writing at 518288 blk# --  93% complete.Writing at 523856 blk# --  94% complete.Writing at 531200 blk# --  95% complete.Writing at 534208 blk# --  96% complete.Writing at 539376 blk# --  97% complete.Writing at 550032 blk# --  99% complete.Writing at 554976 blk# -- 100% complete.sparse: 127 MB / 127 MB.[EOT](OK)Successfully burnt sparse file part 1 to the device.File process: 51%Send command:     tftp 0x81000000 rootfs_hi3516dv300.ext4.tmpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>rootfs_hi3516dv300.ext4.tmp<span class="token string">'.Load address: 0x81000000LoadingiB/sdoneBytes transferred = 131223900 (7d2515c hex)[EOT](OK)Send command:     crc32 81000000 7d2515ccrc32 for 81000000 ... 88d2515b ==&gt; f0bda6da[EOT](OK)Send command:     mmc write.ext4sp 0x0 0x81000000 0x477f0 0xba010MMC write ext4 sparse: dev # 0, block # 292848, count 761872 ... Writing at 292864 blk# --   0% complete.Writing at 308400 blk# --   1% complete.Writing at 323328 blk# --   2% complete.Writing at 338576 blk# --   3% complete.Writing at 369408 blk# --   5% complete.Writing at 394144 blk# --   6% complete.Writing at 419152 blk# --   8% complete.Writing at 436704 blk# --   9% complete.Writing at 452272 blk# --  10% complete.Writing at 467856 blk# --  11% complete.Writing at 483280 blk# --  12% complete.Writing at 498656 blk# --  13% complete.Writing at 514192 blk# --  14% complete.Writing at 529600 blk# --  15% complete.Writing at 554816 blk# --  17% complete.Writing at 570256 blk# --  18% complete.Writing at 589168 blk# --  19% complete.Writing at 609072 blk# --  20% complete.Writing at 624480 blk# --  21% complete.Writing at 632784 blk# --  22% complete.Writing at 648736 blk# --  23% complete.Writing at 664512 blk# --  24% complete.Writing at 679936 blk# --  25% complete.Writing at 695456 blk# --  26% complete.Writing at 707664 blk# --  27% complete.Writing at 723408 blk# --  28% complete.Writing at 739280 blk# --  29% complete.Writing at 751472 blk# --  30% complete.Writing at 779968 blk# --  31% complete.Writing at 780448 blk# --  32% complete.Writing at 795856 blk# --  33% complete.Writing at 812032 blk# --  34% complete.Writing at 1341456 blk# --  68% complete.Writing at 1816592 blk# -- 100% complete.sparse: 125 MB / 372 MB.[EOT](OK)Successfully burnt sparse file part 2 to the device.File process: 100%Partition rootfs burned successfully!      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool\userdata_dv300\imx307_2l&gt;Send command:     mw.b 0x81000000 0xFF 0x5aa200[EOT](OK)Send command:     tftp 0x81000000 userdata-HDMI-2imx307.ext4Hisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>userdata-HDMI-2imx307.ext4'.Load address: 0x81000000Loading: *_<span class="token comment">#############################################################################</span>       <span class="token comment">###############################################################################</span>       <span class="token comment">############################################################################</span>       <span class="token comment">#############################################################################</span>       <span class="token comment">#############################################################################</span>       <span class="token comment">############################################################################</span>       <span class="token comment">################</span>       <span class="token number">927.7</span> KiB/s<span class="token keyword">done</span>Bytes transferred <span class="token operator">=</span> <span class="token number">5939408</span> <span class="token punctuation">(</span>5aa0d0 hex<span class="token punctuation">)</span><span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Send command:     crc32 <span class="token number">81000000</span> 5aa0d0crc32 <span class="token keyword">for</span> <span class="token number">81000000</span> <span class="token punctuation">..</span>. 815aa0cf <span class="token operator">==</span><span class="token operator">&gt;</span> d2561d2a<span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Send command:     mmc write.ext4sp 0x0 0x81000000 0x101800 0x64000MMC <span class="token function">write</span> ext4 sparse: dev <span class="token comment"># 0, block # 1054720, count 409600 ... </span>Writing at <span class="token number">1054736</span> blk<span class="token comment"># --   0% complete.</span>Writing at <span class="token number">1077808</span> blk<span class="token comment"># --   2% complete.</span>Writing at <span class="token number">1579008</span> blk<span class="token comment"># --  64% complete.</span>Writing at <span class="token number">1873920</span> blk<span class="token comment"># -- 100% complete.</span>sparse: <span class="token number">5</span> MB / <span class="token number">200</span> MB.<span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Partition userdata burned successfully<span class="token operator">!</span>Partition burnt completed<span class="token operator">!</span>Send command:     resetreset success<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这个，本质都是fastboot这一套</li><li>4个一起烧写也是可以的</li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_2_烧录记录1</title>
      <link href="/2021/10/08/hi3516dv300-2-shao-lu-ji-lu-1/"/>
      <url>/2021/10/08/hi3516dv300-2-shao-lu-ji-lu-1/</url>
      
        <content type="html"><![CDATA[<h2 id="1-分区及相关参数"><a href="#1-分区及相关参数" class="headerlink" title="1.分区及相关参数"></a>1.分区及相关参数</h2><ul><li>分区大小一般自己留有余量，分区大小，自己定，比实际镜像大小大一些就可以。</li><li>分区大小改了，相应的参数也要发生变化：</li></ul><blockquote><p>bootcmd：Uboot启动好了之后，Uboot会自动执行bootcmd这个环境变量，这个环境变量里面的主要内容就是告诉我们：kernel在什么地方，然后就可以读取内核到DDR里面去，然后再去启动内核。bootcmd如果设错了，uboot就找不到内核镜像，或找到的内核镜像是错的。</p></blockquote><blockquote><p>bootargs：是uboot给kernel的传参，影响的是内核启动的过程。这个如果不对，将来内核在启动的时候，可能启动到一半，就死掉了。</p></blockquote><ul><li><p>fastboot：Hitool内部也是用fastboot来烧录，但是封装好了，可以不用去管他，通过分区表文件来计算出具体参数。</p></li><li><p>启动并进入Uboot后的界面，注意要启动的那几秒按一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">System startupUncompress Ok<span class="token operator">!</span>U-Boot <span class="token number">2016.11</span> <span class="token punctuation">(</span>Oct <span class="token number">18</span> <span class="token number">2021</span> - <span class="token number">15</span>:05:04 +0800<span class="token punctuation">)</span>hi3516dv300Relocation Offset is: 0f6d2000Relocating to 8fed2000, new gd at 8fe31ef0, sp at 8fe31ed0MMC:EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>scan elemnts: startp:12 endp:120Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>06/15<span class="token punctuation">]</span>** First descriptor is NOT a primary desc on <span class="token number">0</span>:1 **MMC/SD Card:    MID:         0x15    Read Block:  <span class="token number">512</span> Bytes    Write Block: <span class="token number">512</span> Bytes    Chip Size:   7456M Bytes <span class="token punctuation">(</span>High Capacity<span class="token punctuation">)</span>    Name:        <span class="token string">"8GTF4"</span>    Chip Type:   MMC    Version:     <span class="token number">0.0</span>    Speed:       100000000Hz    Bus Width:   4bithimci: <span class="token number">0</span> <span class="token punctuation">(</span>eMMC<span class="token punctuation">)</span>In:    serialOut:   serialErr:   serialNet:   eth0Warning: eth0 <span class="token punctuation">(</span>eth0<span class="token punctuation">)</span> using random MAC address - ce:07:43:a5:2b:a5Writing to MMC<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token keyword">done</span>Hit any key to stop autoboot:  <span class="token number">0</span>hisilicon <span class="token comment">#</span>hisilicon <span class="token comment"># printenv</span><span class="token assign-left variable">arch</span><span class="token operator">=</span>arm<span class="token assign-left variable">baudrate</span><span class="token operator">=</span><span class="token number">115200</span><span class="token assign-left variable">board</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">board_name</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">bootargs</span><span class="token operator">=</span>mem<span class="token operator">=</span>512M <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyAMA0,115200 <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/mmcblk0p3 <span class="token assign-left variable">rootfstype</span><span class="token operator">=</span>ext4 rw rootwait <span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token assign-left variable">bootcmd</span><span class="token operator">=</span>mmc <span class="token builtin class-name">read</span> <span class="token number">0</span> 0x81000000 0x2800 0x4000<span class="token punctuation">;</span>bootm 0x81000000<span class="token assign-left variable">bootdelay</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">cpu</span><span class="token operator">=</span>armv7<span class="token assign-left variable">ethact</span><span class="token operator">=</span>eth0<span class="token assign-left variable">soc</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">stderr</span><span class="token operator">=</span>serial<span class="token assign-left variable">stdin</span><span class="token operator">=</span>serial<span class="token assign-left variable">stdout</span><span class="token operator">=</span>serial<span class="token assign-left variable">vendor</span><span class="token operator">=</span>hisilicon<span class="token assign-left variable">verify</span><span class="token operator">=</span>nEnvironment size: <span class="token number">441</span>/262140 byteshisilicon <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="2-分析一下blkdevparts-分区表"><a href="#2-分析一下blkdevparts-分区表" class="headerlink" title="2.分析一下blkdevparts(分区表)"></a>2.分析一下blkdevparts(分区表)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其中-(user)表示的就是剩余的<br>mmcblk0表示的是第0个设备的设备文件名</p></blockquote><blockquote><p>分析一下分区表:</p><blockquote><p>首先一共5个分区(包括一个剩下的用户分区，后面需要去挂载这个分区)</p></blockquote></blockquote><h2 id="3-分析一下bootcmd"><a href="#3-分析一下bootcmd" class="headerlink" title="3.分析一下bootcmd"></a>3.分析一下bootcmd</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">bootcmd</span><span class="token operator">=</span>mmc <span class="token builtin class-name">read</span> <span class="token number">0</span> 0x81000000 0x2800 0x4000<span class="token punctuation">;</span>bootm 0x81000000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>mmc read 0 表示读取的第0个mmc设备</p></blockquote><blockquote><p>0x81000000 这个表示DDR的地址</p></blockquote><blockquote><p>0x2800 这个表示eMMC的地址，这就是从eMMC的这个地址读取kernel到DDR中去</p><blockquote><p>具体计算方法：<br>0x2800(hex mode)-&gt;10240(dec mode)<br>10240(dec mode) * 512(byte)= 5,242,880(byte)<br>5,242,880(byte) / 1024 = 5120(kb)<br>5120(kb) / 1024 = 5(M)</p></blockquote></blockquote><blockquote><p>0x4000 这个表示读取多长</p><blockquote><p>具体计算方法为：<br>0x4000(hex mode)-&gt;16,384(dec mode)<br>16,384(dec mode) * 512(byte)= 8,388,608(byte)<br>8,388,608(byte) / 1024 = 8,192(kb)<br>8,192(kb) / 1024 = 8(M)</p></blockquote></blockquote><p>这里实际上只读取了8M，是不对的，但不影响(因为实际的kernel只有3M)，正确的做法是在这里读取10M</p><blockquote><p>10 * 1024 * 1024 / 512 (dec mode) -&gt; 50000(hex mode)</p></blockquote><p>修改的方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setenv bootcmd <span class="token string">"mmc read 0 0x81000000 0x2800 0x5000; bootm 0x81000000"</span><span class="token function">printenv</span>saveenv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>寻找破坏原有的uboot的命令：<br>首先输入help<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hisilicon <span class="token comment"># help</span>?       - <span class="token builtin class-name">alias</span> <span class="token keyword">for</span> <span class="token string">'help'</span>base    - print or <span class="token builtin class-name">set</span> address offsetbdinfo  - print Board Info structureboot    - boot default, i.e., run <span class="token string">'bootcmd'</span>bootd   - boot default, i.e., run <span class="token string">'bootcmd'</span>bootelf - Boot from an ELF image <span class="token keyword">in</span> memorybootm   - boot application image from memorybootp   - boot image via network using BOOTP/TFTP protocolbootvx  - Boot vxWorks from an ELF imagecipher_test- CIPHER Encrypt And Decrypt Test<span class="token function">cmp</span>     - memory compareconinfo - print console devices and information<span class="token function">cp</span>      - memory copycrc32   - checksum calculationdcache  - <span class="token builtin class-name">enable</span> or disable data cacheddr     - ddr training <span class="token keyword">function</span>decjpg  - jpgd   - decode jpeg picture.decjpg <span class="token punctuation">[</span>format<span class="token punctuation">]</span>dhcp    - boot image via network using DHCP/TFTP protocoldm      - Driver model low level access<span class="token builtin class-name">echo</span>    - <span class="token builtin class-name">echo</span> args to consoleeditenv - edit environment variable<span class="token function">env</span>     - environment handling commandserase   - erase FLASH memory<span class="token builtin class-name">exit</span>    - <span class="token builtin class-name">exit</span> script<span class="token boolean">false</span>   - <span class="token keyword">do</span> nothing, unsuccessfullyfatinfo - print information about filesystemfatload - load binary <span class="token function">file</span> from a dos filesystemfatls   - list files <span class="token keyword">in</span> a directory <span class="token punctuation">(</span>default /<span class="token punctuation">)</span>fatsize - determine a <span class="token function">file</span><span class="token string">'s sizeflinfo  - print FLASH memory informationgetinfo - print hardware informationgo      - start application at address '</span>addr'go_cpu1 - Perform power on and unreset  CPU1_A7gzwrite - <span class="token function">unzip</span> and <span class="token function">write</span> memory to block device<span class="token builtin class-name">hash</span>    - Calcluate <span class="token builtin class-name">hash</span>hash_test- hash_test <span class="token punctuation">[</span>x<span class="token punctuation">]</span>:<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> SHA1<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> SHA256<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> HMAC-SHA1<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> HMAC-SHA256<span class="token punctuation">;</span><span class="token builtin class-name">help</span>    - print <span class="token builtin class-name">command</span> description/usageicache  - <span class="token builtin class-name">enable</span> or disable instruction cacheiminfo  - print header information <span class="token keyword">for</span> application imageimxtract- extract a part of a multi-imageitest   - <span class="token builtin class-name">return</span> true/false on integer compareklad_test- KLAD Testloadb   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>kermit mode<span class="token punctuation">)</span>loads   - load S-Record <span class="token function">file</span> over serial lineloadx   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>xmodem mode<span class="token punctuation">)</span>loady   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>ymodem mode<span class="token punctuation">)</span>loop    - infinite loop on address rangemd      - memory displaymii     - MII utility commandsmm      - memory modify <span class="token punctuation">(</span>auto-incrementing address<span class="token punctuation">)</span>mmc     - MMC sub systemmmcinfo - display MMC infomw      - memory <span class="token function">write</span> <span class="token punctuation">(</span>fill<span class="token punctuation">)</span>nfs     - boot image via network using NFS protocolnm      - memory modify <span class="token punctuation">(</span>constant address<span class="token punctuation">)</span>part    - disk partition related commands<span class="token function">ping</span>    - send ICMP ECHO_REQUEST to network <span class="token function">host</span>printenv- print environment variablesprotect - <span class="token builtin class-name">enable</span> or disable FLASH <span class="token function">write</span> protectionpxe     - commands to get and boot from pxe filesreset   - Perform RESET of the CPUrng_test- RNG Testrsa_enc_test- RSA PKCS1<span class="token comment"># V1_5 encrypt/decrypt Test</span>rsa_sign_test- RSA PKCS1<span class="token comment"># V1_5 Sign Test</span>run     - run commands <span class="token keyword">in</span> an environment variablesaveenv - save environment variables to persistent storagesetenv  - <span class="token builtin class-name">set</span> environment variablessetexpr - <span class="token builtin class-name">set</span> environment variable as the result of <span class="token builtin class-name">eval</span> expressionsetvobg - setvobg   - <span class="token builtin class-name">set</span> vo backgroud color.        - setvobg <span class="token punctuation">[</span>dev color<span class="token punctuation">]</span>showvar - print <span class="token builtin class-name">local</span> hushshell variables<span class="token function">sleep</span>   - delay execution <span class="token keyword">for</span> some <span class="token function">time</span><span class="token builtin class-name">source</span>  - run script from memorystartgx - startgx   - <span class="token function">open</span> graphics layer.        - startgx <span class="token punctuation">[</span>layer addr stride x y w h<span class="token punctuation">]</span>startvl - startvl   - <span class="token function">open</span> video layer.        - startvl <span class="token punctuation">[</span>layer addr stride x y w h<span class="token punctuation">]</span>startvo - startvo   - <span class="token function">open</span> vo device with a certain output interface.        - startvo <span class="token punctuation">[</span>dev intftype sync<span class="token punctuation">]</span>stopgx  - stopgx   - close graphics layer.        - stopgx <span class="token punctuation">[</span>layer<span class="token punctuation">]</span>stopvl  - stopvl   - close video layer.        - stopvl <span class="token punctuation">[</span>layer<span class="token punctuation">]</span>stopvo  - stopvo   - close interface of vo device.        - stopvo <span class="token punctuation">[</span>dev<span class="token punctuation">]</span>sysboot - <span class="token builtin class-name">command</span> to get and boot from syslinux files<span class="token builtin class-name">test</span>    - minimal <span class="token builtin class-name">test</span> like /bin/shtftpboot- boot image via network using TFTP protocol<span class="token boolean">true</span>    - <span class="token keyword">do</span> nothing, successfully<span class="token function">unzip</span>   - <span class="token function">unzip</span> a memory regionusb     - USB sub-systemusbboot - boot from USB deviceusbtftp - download or upload image using USB protocolversion - print monitor, compiler and linker versionhisilicon <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>接着输入help mmc<pre class="line-numbers language-none"><code class="language-none">help mmcmmc - MMC sub systemUsage:mmc info - display info of the current MMC devicemmc reg [dev] - display register of the current MMC devicemmc read dev addr blk# cntmmc write dev addr blk# cntmmc erase blk# cntmmc rescanmmc part - lists available partition on current mmc devicemmc dev [dev] [part] - show or set current mmc device [partition]mmc list - lists available devicesmmc hwpartition [args...] - does hardware partitioning  arguments (sizes in 512-byte blocks):    [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes    [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition    [check|set|complete] - mode, complete set partitioning completed  WARNING: Partitioning is a write-once setting once it is set to complete.  Power cycling is required to initialize partitions after set to complete.mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified devicemmc bootpart-resize &lt;dev&gt; &lt;boot part size MB&gt; &lt;RPMB part size MB&gt; - Change sizes of boot and RPMB partitions of specified devicemmc partconf dev boot_ack boot_partition partition_access - Change the bits of the PARTITION_CONFIG field of the specified devicemmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device   WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values.mmc setdsr &lt;value&gt; - set DSR register valuehisilicon #<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>最后进行擦除操作<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mmc <span class="token function">write</span> dev addr blk<span class="token comment"># cnt</span>mmc erase blk<span class="token comment"># cnt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>其中#表示从那个blk开始擦除，cnt表示擦除多少个blk<br>这里的cnt也是以512byte为单位的</p></blockquote></li></ul><blockquote><blockquote><p>这里擦除uboot是从0地址开始的，其中的blk#，那么也就是0了<br>假设是300K<br>300 * 1024 / 512 = 600 cnt</p></blockquote></blockquote><blockquote><p>所以就这样擦除：<br>这里保险起见，擦除1000个cnt<br>1000(dec)-&gt;03E8(hex)</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mmc erase <span class="token number">0</span> 0x03E8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>擦除后不会有任何反应，是因为uboot和kernel已经加载到DDR去运行了</p></blockquote><blockquote><p>现在去重启，串口就不会有输出了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_1_下载准备</title>
      <link href="/2021/10/07/hi3516dv300-1-xia-zai-zhun-bei/"/>
      <url>/2021/10/07/hi3516dv300-1-xia-zai-zhun-bei/</url>
      
        <content type="html"><![CDATA[<h2 id="烧录说明"><a href="#烧录说明" class="headerlink" title="烧录说明"></a>烧录说明</h2><ul><li>不同厂家的芯片，甚至是不同平台的，烧录都是有差别的</li><li>内部也是有代码，出厂只有一段内部代码，与功能无关</li></ul><h2 id="两个下载阶段"><a href="#两个下载阶段" class="headerlink" title="两个下载阶段"></a>两个下载阶段</h2><ul><li>裸机下载uboot.bin，使用HiTool软件，通过串口</li><li>基于uboot运行后的fastboot，使用HiTool或其他软件，通过网口或USB口</li></ul><h2 id="出厂默认镜像介绍"><a href="#出厂默认镜像介绍" class="headerlink" title="出厂默认镜像介绍"></a>出厂默认镜像介绍</h2><ul><li><p>在网盘里，共4个，等于是做了4个分区，好处是把配置独立于rootfs，避免每个产品烧录不同的rootfs<br><img src="http://pic.huangruimin.tech/20211204222045.png"></p></li><li><p>HiTool安装的核心是HiBurn软件，目前使用的是：HiTool-BVT-5.2.15，默认是已经自带了JRE</p></li><li><p>一开始不要点左上角的连接符号</p></li><li><p>里面集成了TFTP工具，也可以使用</p></li><li><p>选择Network后，在Board Config那个地方，一般是会通过串口，把这个Config信息设置到板端的，最好设置成和板端一样，如果没有设置成一样，一般来说，也是没关系的</p></li><li><p>Burn by Partition</p><blockquote><p>早期是不用EMMC的，用的是：SPI NAND/ NAND和SPI NOR，所以，现在应当是烧写EMMC</p></blockquote></li><li><p>Burn eMMC</p><blockquote><p>前面三个都是老的，千万别去用<br>应当选择的是这个：Burn eMMC<br>uboot分区，是二进制的，不需要选择文件系统<br>Kernel的uImage，也是二进制的，不需要选择文件系统<br>注意要设置开始地址和长度<br>可以直接打开XML文件进行配置</p></blockquote></li><li><p>Merge Image</p><blockquote><p>作用是把这几个镜像合并成1个镜像<br>这个是量产的时候使用的</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ARM </tag>
            
            <tag> Linux </tag>
            
            <tag> Hi3516DV300 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux采用4G模块上网_PPP拨号</title>
      <link href="/2019/09/12/linux-cai-yong-4g-mo-kuai-shang-wang-ppp-bo-hao/"/>
      <url>/2019/09/12/linux-cai-yong-4g-mo-kuai-shang-wang-ppp-bo-hao/</url>
      
        <content type="html"><![CDATA[<h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h2><p>本章将继续讲解Jetson Nano采用SIM7600 4G模块进行无线上网，紧接上一章NDIS拨号上网，本章将讲解PPP拨号上网，本教程同样适用于树莓派。</p><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><p>接下来，将介绍Jetson Nano或Raspberry Pi采用NDIS驱动通过SIM7600 4G模块上网的过程。</p><h3 id="3-1-硬件准备"><a href="#3-1-硬件准备" class="headerlink" title="3.1 硬件准备"></a>3.1 硬件准备</h3><ul><li><a href="http://www.waveshare.net/shop/SIM7600CE-4G-HAT.htm">SIM7600CE 4G HAT</a>及其配件</li><li><a href="http://www.waveshare.net/shop/Jetson-Nano-Developer-Kit.htm">Jetson Nano</a>及其配件，或Raspberry Pi 及其配件</li><li>可上网的4G SIM卡</li></ul><h3 id="3-2-硬件连接"><a href="#3-2-硬件连接" class="headerlink" title="3.2 硬件连接"></a>3.2 硬件连接</h3><p>硬件连接如下图所示：<br><img src="http://pic.huangruimin.tech/20191115140317.png"></p><p>注意：</p><ul><li>若接到40Pin引脚上使用，则注意将SIM7600的Flight Mode，PWR引脚拉低，即需要设计初始化脚本，详情见相关产品页面，否则将进入飞行模式。</li><li>若树莓派通过USB线单独给SIM7600供电，则可能出现供电不稳定，导致SIM7600开机后关机的现象。</li><li>若仅仅使用拨号上网功能，则可以不接到Jetson Nano或Raspberry Pi的40Pin上。</li></ul><h2 id="4-正式开始"><a href="#4-正式开始" class="headerlink" title="4. 正式开始"></a>4. 正式开始</h2><h3 id="4-1-检查硬件连接，网络连接-该步骤必须检查并确认"><a href="#4-1-检查硬件连接，网络连接-该步骤必须检查并确认" class="headerlink" title="4.1 检查硬件连接，网络连接(该步骤必须检查并确认)"></a>4.1 检查硬件连接，网络连接(该步骤必须检查并确认)</h3><ul><li><p>长按SIM7600CE 4G HAT上的PWKKEY键，使得SIM7600CE 4G HAT开机，正常开机后，NET灯应当闪烁(若未闪烁，请检查SIM卡是否可用，或是否进入了飞行模式)。</p></li><li><p>检查Jetson Nano的Ubuntu系统或树莓派的Raspbian系统是否内置了高通USB串口驱动，非新版本镜像系统可能未内置该驱动，查看方式如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看Ubuntu版本</span><span class="token function">uname</span> <span class="token parameter variable">-a</span>lsb_release <span class="token parameter variable">-a</span><span class="token function">cat</span> /proc/version<span class="token comment"># 查看是否有高通USB虚拟串口驱动</span>lsusb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115144137.png"><br>如果能看到Qualcomm/Option字样，则说明内置了高通USB虚拟串口驱动</p></li><li><p>输入AT指令，设置为4G上网，查看网络连接状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span class="token comment"># 关闭ModemManager进程，以防止minicom调试AT串口时，显示没用的数据，若没有该进程，则不用关闭。</span><span class="token function">killall</span> ModemManager<span class="token comment"># 安装minicom串口工具</span><span class="token function">apt-get</span> <span class="token function">install</span> minicom<span class="token comment"># 查看串口设备，AT指令串口，为/dev/ttyUSB2</span><span class="token function">ls</span> /dev/ttyUSB*<span class="token comment"># 用minicom打开串口</span><span class="token function">sudo</span> minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2<span class="token comment"># 强制设置为4G上网</span>AT+CNMP<span class="token operator">=</span><span class="token number">38</span><span class="token comment"># 查询网络质量</span>AT+CSQ<span class="token comment"># 查询网络注册状</span>AT+CREG?<span class="token comment"># 查询网络运营商</span>AT+COPS?<span class="token comment"># 查询网络波段</span>AT+CPSI?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115170503.png"></p></li></ul><p>至此，SIM7600CE和Jetson Nano连接正常，网络连接正常。</p><h3 id="4-2-配置PPP拨号脚本并连接"><a href="#4-2-配置PPP拨号脚本并连接" class="headerlink" title="4.2 配置PPP拨号脚本并连接"></a>4.2 配置PPP拨号脚本并连接</h3><ul><li><p>首先：安装ppp拨号程序：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> pppd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>接着：切换到root用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后：修改拨号脚本文件，为了简便，直接将以下两个文件拷贝到Jetson Nano或树莓派：</p></li></ul><p><img src="http://pic.huangruimin.tech/20191119094531.png"></p><p>以上两个文件将在文章末尾给出。</p><ul><li>紧接着：再将以上两个文件复制(替换)到相关路径下：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 将chat放到/etc/ppp</span><span class="token function">cp</span> ./chat /etc/ppp<span class="token comment"># 将dial放到/etc/ppp/peers</span><span class="token function">cp</span> ./dial /etc/ppp/peers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119181003.jpg"></p><ul><li>最后：执行拨号命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 开始拨号</span>pppd call dial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119104536.png"><br>如下图所示，则为拨号成功的效果：<br><img src="http://pic.huangruimin.tech/20191119105516.png"></p><ul><li>测试：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作，不要关闭拨号成功的终端，新开一个终端操作</span><span class="token comment"># 查看网口及其ip</span><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span class="token comment"># 为避免DNS解析不了，添加以下默认路由</span>route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token number">0.0</span>.0.0 ppp0<span class="token comment"># 通过ppp0上网测试</span><span class="token function">ping</span> <span class="token parameter variable">-I</span> ppp0 www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119110004.png"><br><img src="http://pic.huangruimin.tech/20191119110054.png"><br>如上图所示，如果采用ppp0网口ping通了百度，则采用ppp拨号上网成功。</p><ul><li>断开连接</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 断开ppp连接</span><span class="token function">killall</span> pppd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-测速"><a href="#5-测速" class="headerlink" title="5 测速"></a>5 测速</h2><p>最后，对采用ppp拨号上网进行测速：</p><p><img src="http://pic.huangruimin.tech/20191119102754.png"></p><p>注意，以上数值仅供参考，不同地域，不同运营商，测速所得出的数据略有差距，在理想的情况下，在SIMCOM实验室测试，理想上行与下行速度为20Mbps。</p><h2 id="6-拨号相关文件"><a href="#6-拨号相关文件" class="headerlink" title="6 拨号相关文件"></a>6 拨号相关文件</h2><p><a href="http://pic.huangruimin.tech/chat%26dial.rar">chat&amp;dial.rar</a></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IC和通用外设开发 </tag>
            
            <tag> 网络通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux采用4G模块上网_NDIS拨号</title>
      <link href="/2019/09/11/linux-cai-yong-4g-mo-kuai-shang-wang-ndis-bo-hao/"/>
      <url>/2019/09/11/linux-cai-yong-4g-mo-kuai-shang-wang-ndis-bo-hao/</url>
      
        <content type="html"><![CDATA[<h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h2><p>本章将介绍Jetson Nano如何采用SIM7600 4G模块进行无线上网，并描述其相关细节，本章将先讲解NDIS拨号。</p><h2 id="2-采用4G模块的上网方式有哪些？"><a href="#2-采用4G模块的上网方式有哪些？" class="headerlink" title="2.采用4G模块的上网方式有哪些？"></a>2.采用4G模块的上网方式有哪些？</h2><p>Jetson Nano 或Raspberry Pi通过SIM7600模组，可采用以下几种方式进行无线上网：</p><ul><li><p>采用AT指令使用封装好的TCP，MQTT，HTTP(S)</p><blockquote><p>该方式适用于资源比较紧张的微处理器，如MCU等，或适用于对数据量比较少的应用场景，如通过http(s),MQTT给服务器，云平台等上传传感器数据。<br>对于Jetson Nano，如果网络应用不复杂，数据量比较小时(比如传输传感器数据至服务器，接收服务器下发的控制指令)，采用AT指令即可快速使用功能。</p></blockquote></li><li><p>采用NDIS驱动上网</p><blockquote><p>该方式必须依赖于Linux系统，适用于需要采用Linux网络套接字编程开发的应用场景，将驱动加载到内核后，将SIM7600和Jetson Nano采用USB线连接，待SIM7600开机后，即可识别到wwan0网口，可通过该网口上网。<br>该方式底层依赖于SIM7600的USB虚拟串口。<br>该方式为官方推荐的上网方式，同样，建议采用该种方式进行拨号上网。</p></blockquote></li><li><p>采用ppp拨号上网</p><blockquote><p>该方式必须依赖于Linux系统，适用于需要采用Linux网络套接字编程开发的应用场景，配置并运行相关脚本后，将SIM7600和Jetson Nano采用USB线连接，待SIM7600开机后，即可识别到ppp0网口，可通过该网口上网。<br>该方式底层依赖于SIM7600的USB虚拟串口。</p></blockquote></li><li><p>采用wvdial拨号上网</p><blockquote><p>该方式的底层实现同ppp拨号上网，不再阐述。</p></blockquote></li></ul><h2 id="3-准备工作"><a href="#3-准备工作" class="headerlink" title="3. 准备工作"></a>3. 准备工作</h2><p>接下来，将介绍Jetson Nano或Raspberry Pi采用NDIS驱动通过SIM7600 4G模块上网的过程。</p><h3 id="3-1-硬件准备"><a href="#3-1-硬件准备" class="headerlink" title="3.1 硬件准备"></a>3.1 硬件准备</h3><ul><li><a href="http://www.waveshare.net/shop/SIM7600CE-4G-HAT.htm">SIM7600CE 4G HAT</a>及其配件</li><li><a href="http://www.waveshare.net/shop/Jetson-Nano-Developer-Kit.htm">Jetson Nano</a>(Jetson Nano及其配件)及其配件(或Raspberry Pi 及其配件)</li><li>可上网的4G SIM卡</li></ul><h3 id="3-2-硬件连接"><a href="#3-2-硬件连接" class="headerlink" title="3.2 硬件连接"></a>3.2 硬件连接</h3><p>硬件连接如下图所示：<br><img src="http://pic.huangruimin.tech/20191115140317.png"><br><strong>注意</strong></p><p>1.若接到40Pin引脚上使用，则注意将SIM7600的Flight Mode，PWR引脚拉低，即需要设计初始化脚本，详情见相关产品页面，否则将进入飞行模式。</p><p>2.若树莓派通过USB线单独给SIM7600供电，则可能出现供电不稳定，导致SIM7600开机后关机的现象。</p><p>3.若仅仅使用拨号上网功能，则可以不接到Jetson Nano或Raspberry Pi的40Pin上。</p><h2 id="4-正式开始"><a href="#4-正式开始" class="headerlink" title="4. 正式开始"></a>4. 正式开始</h2><h3 id="4-1-检查硬件连接，网络连接"><a href="#4-1-检查硬件连接，网络连接" class="headerlink" title="4.1 检查硬件连接，网络连接"></a>4.1 检查硬件连接，网络连接</h3><ul><li><p>长按SIM7600CE 4G HAT上的PWKKEY键，使得SIM7600CE 4G HAT开机，正常开机后，NET灯应当闪烁(若未闪烁，请检查SIM卡是否可用，或是否进入了飞行模式)。</p></li><li><p>检查Jetson Nano的Ubuntu系统或树莓派的Raspbian系统是否内置了高通USB串口驱动，非新版本镜像系统可能未内置该驱动，查看方式如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看Ubuntu版本</span><span class="token function">uname</span> <span class="token parameter variable">-a</span>lsb_release <span class="token parameter variable">-a</span><span class="token function">cat</span> /proc/version<span class="token comment"># 查看是否有高通USB虚拟串口驱动</span>lsusb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115144137.png"><br>如果能看到Qualcomm/Option字样，则说明内置了高通USB虚拟串口驱动</p></li><li><p>输入AT指令，设置为4G上网，查看网络连接状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 关闭ModemManager进程，以防止minicom调试AT串口时，显示没用的数据</span><span class="token function">sudo</span> <span class="token function">su</span><span class="token function">killall</span> ModemManager<span class="token comment"># 安装minicom串口工具</span><span class="token function">apt-get</span> <span class="token function">install</span> minicom<span class="token comment"># 查看串口设备，AT指令串口，为/dev/ttyUSB2</span><span class="token function">ls</span> /dev/ttyUSB*<span class="token comment"># 用minicom打开串口</span><span class="token function">sudo</span> minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2<span class="token comment"># 强制设置为4G上网</span>AT+CNMP<span class="token operator">=</span><span class="token number">38</span><span class="token comment"># 查询网络质量</span>AT+CSQ<span class="token comment"># 查询网络注册状</span>AT+CREG?<span class="token comment"># 查询网络运营商</span>AT+COPS?<span class="token comment"># 查询网络波段</span>AT+CPSI?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115170503.png"></p></li></ul><p>至此，SIM7600CE和Jetson Nano或Raspberry Pi硬件连接正常，网络连接正常。</p><h3 id="4-2-编译并安装驱动模块文件"><a href="#4-2-编译并安装驱动模块文件" class="headerlink" title="4.2 编译并安装驱动模块文件"></a>4.2 编译并安装驱动模块文件</h3><p>对于Jetson Nano的Ubuntu系统，默认没有simcom的用于wwan0网口的驱动模块文件，可用以下命令查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsmod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115172607.png"></p><p>但是对于Raspberry Pi的Raspbian系统，默认是安装了高通的用于wwan0网口的驱动模块文件，如下图：<br><img src="http://pic.huangruimin.tech/20191119185038.png"><br>对于Raspberry Pi，需要先卸载该驱动，再安装上simcom的用于wwan0网口的驱动模块文件，卸载方式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span>rmmod qmi_wwan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119185306.png"></p><p>在此基础上，执行后续步骤。</p><p>将编译以下驱动模块源程序：</p><p><img src="http://pic.huangruimin.tech/20191115175209.png"></p><p><strong>该源程序及其Makefile将在文章末尾出给出</strong></p><p>为了避免交叉编译的繁琐(交叉编译需要在虚拟机Ubuntu下编译Jetson Nano内核后，再编译驱动模块)，可直接将以上两个文件保存到Jetson Nano文件系统中，再编译，注意该过程需要使用超级用户，如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115174747.png"></p><p>由上图可查看到，已编译成内核驱动模块文件。</p><p>接下来，将安装该驱动模块文件，注意需要使用超级用户：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">insmod simcom_wwan.kolsmod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115175626.png"></p><p>此时，simcom_wwan驱动模块已安装上。</p><p>可查看到内核的打印信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115180339.png"></p><p>Raspberry Pi编译及安装驱动模块的操作同Jetson Nano。</p><h3 id="4-3-开始拨号，并分配IP"><a href="#4-3-开始拨号，并分配IP" class="headerlink" title="4.3 开始拨号，并分配IP"></a>4.3 开始拨号，并分配IP</h3><p>此时，可看到已经出现wwan0网口：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115180615.png"></p><p>但是该网口并未分配IP地址，如需分配IP，需要</p><ul><li>首先开启网口</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> wwan0 up<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后拨号</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2AT<span class="token variable">$QCRMCALL</span><span class="token operator">=</span><span class="token number">1,1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115181625.png"></p><ul><li>最后，分配IP</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> udhcpcudhcpc <span class="token parameter variable">-i</span> wwan0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115182613.png"></p><p>此时，已经分配到IP，可对该网口进行测试：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span class="token function">ping</span> <span class="token parameter variable">-I</span> wwan0 www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115182856.png"></p><p>由上图可知，wwan0网口测试通过。</p><p>如果出现dns解析异常，输入以下命令可解决：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token number">0.0</span>.0.0 wwan0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-测速"><a href="#5-测速" class="headerlink" title="5 测速"></a>5 测速</h2><p>最后，对采用NDIS拨号上网进行测速：</p><p><img src="http://pic.huangruimin.tech/20191115185342.png"><br>注意，以上数值仅供参考，不同地域，不同运营商，测速所得出的数据略有差距，在理想的情况下，在SIMCOM实验室测试，理想上行与下行速度为20Mbps。</p><h2 id="6-驱动源码"><a href="#6-驱动源码" class="headerlink" title="6 驱动源码"></a>6 驱动源码</h2><p>simcom_wwan.c&amp;Makefile：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* * Copyright (c) 2016 Xiaobin Wang &lt;xiaobin.wang@sim.com&gt; * * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License * version 2 as published by the Free Software Foundation. */</span><span class="token comment">/* * history  * V1.00 - first release  -20160822*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/module.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/netdevice.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/ethtool.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/etherdevice.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/mii.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb/cdc.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb/usbnet.h&gt;</span></span><span class="token comment">/* very simplistic detection of IPv4 or IPv6 headers */</span><span class="token keyword">static</span> bool <span class="token function">possibly_iphdr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xd0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0x40</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* SIMCOM devices combine the "control" and "data" functions into a * single interface with all three endpoints: interrupt + bulk in and * out */</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_bind</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> rv <span class="token operator">=</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>  <span class="token comment">//struct usb_driver *subdriver = NULL;</span><span class="token class-name">atomic_t</span> <span class="token operator">*</span>pmcount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">/* ignore any interface with additional descriptors */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>extralen<span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span>  <span class="token comment">/* Some makes devices where the interface descriptors and endpoint * configurations of two or more interfaces are identical, even * though the functions are completely different.  If set, then * driver_info-&gt;data is a bitmap of acceptable interface numbers * allowing us to bind to one such interface without binding to * all of them */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>dev<span class="token operator">-&gt;</span>driver_info<span class="token operator">-&gt;</span>data <span class="token operator">&amp;&amp;</span>    <span class="token operator">!</span><span class="token function">test_bit</span><span class="token punctuation">(</span>intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>desc<span class="token punctuation">.</span>bInterfaceNumber<span class="token punctuation">,</span> <span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>driver_info<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">dev_info</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>intf<span class="token operator">-&gt;</span>dev<span class="token punctuation">,</span> <span class="token string">"not on our whitelist - ignored"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rv <span class="token operator">=</span> <span class="token operator">-</span>ENODEV<span class="token punctuation">;</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">atomic_set</span><span class="token punctuation">(</span>pmcount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* collect all three endpoints */</span>rv <span class="token operator">=</span> <span class="token function">usbnet_get_endpoints</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rv <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token comment">/* require interrupt endpoint for subdriver */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dev<span class="token operator">-&gt;</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>rv <span class="token operator">=</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* can't let usbnet use the interrupt endpoint */</span>dev<span class="token operator">-&gt;</span>status <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"simcom usbnet bind here\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/*   * SIMCOM SIM7600 only support the RAW_IP mode, so the host net driver would   * remove the arp so the packets can transmit to the modem  */</span>  dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>flags <span class="token operator">|=</span> IFF_NOARP<span class="token punctuation">;</span>      <span class="token comment">/* make MAC addr easily distinguishable from an IP header */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">possibly_iphdr</span><span class="token punctuation">(</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token number">0x02</span><span class="token punctuation">;</span><span class="token comment">/* set local assignment bit */</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;=</span> <span class="token number">0xbf</span><span class="token punctuation">;</span><span class="token comment">/* clear "IP" bit */</span><span class="token punctuation">}</span>  <span class="token comment">/*   * SIMCOM SIM7600 need set line state  */</span>  <span class="token function">usb_control_msg</span><span class="token punctuation">(</span>      <span class="token function">interface_to_usbdev</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">usb_sndctrlpipe</span><span class="token punctuation">(</span><span class="token function">interface_to_usbdev</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token comment">//USB_CDC_REQ_SET_CONTROL_LINE_STATE</span>      <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token comment">//USB_DIR_OUT | USB_TYPE_CLASS| USB_RECIP_INTERFACE</span>      <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//line state 1</span>      intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>desc<span class="token punctuation">.</span>bInterfaceNumber<span class="token punctuation">,</span>      <span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> rv<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">simcom_wwan_unbind</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usb_driver</span> <span class="token operator">*</span>subdriver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>subdriver <span class="token operator">&amp;&amp;</span> subdriver<span class="token operator">-&gt;</span>disconnect<span class="token punctuation">)</span>subdriver<span class="token operator">-&gt;</span><span class="token function">disconnect</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_PM</span></span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_suspend</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">,</span> <span class="token class-name">pm_message_t</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev <span class="token operator">=</span> <span class="token function">usb_get_intfdata</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> ret<span class="token punctuation">;</span>ret <span class="token operator">=</span> <span class="token function">usbnet_suspend</span><span class="token punctuation">(</span>intf<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_resume</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev <span class="token operator">=</span> <span class="token function">usb_get_intfdata</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>ret <span class="token operator">=</span> <span class="token function">usbnet_resume</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span><span class="token function">simcom_wwan_tx_fixup</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span>skb<span class="token punctuation">,</span> <span class="token class-name">gfp_t</span> flags<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//skip ethernet header </span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">skb_pull</span><span class="token punctuation">(</span>skb<span class="token punctuation">,</span> ETH_HLEN<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">return</span> skb<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span>  <span class="token punctuation">{</span>    <span class="token function">dev_err</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>intf<span class="token operator">-&gt;</span>dev<span class="token punctuation">,</span> <span class="token string">"Packet Dropped\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>skb <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token function">dev_kfree_skb_any</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_rx_fixup</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span>skb<span class="token punctuation">)</span><span class="token punctuation">{</span>  __be16 proto<span class="token punctuation">;</span>  <span class="token comment">/* This check is no longer done by usbnet */</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>len <span class="token operator">&lt;</span> dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>hard_header_len<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token number">0x40</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packetv4 coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>proto <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>ETH_P_IP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">0x60</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packetv6 coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>proto <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>ETH_P_IPV6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">0x00</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packet coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_multicast_ether_addr</span><span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">/* possibly bogus destination - rewrite just in case */</span><span class="token function">skb_reset_mac_header</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> fix_dest<span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token comment">/* pass along other packets without modifications */</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">skb_headroom</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span> <span class="token operator">&lt;</span> ETH_HLEN<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">skb_push</span><span class="token punctuation">(</span>skb<span class="token punctuation">,</span> ETH_HLEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">skb_reset_mac_header</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_proto <span class="token operator">=</span> proto<span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_source<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ETH_ALEN<span class="token punctuation">)</span><span class="token punctuation">;</span>fix_dest<span class="token operator">:</span><span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_dest<span class="token punctuation">,</span> dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">,</span> ETH_ALEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">driver_info</span>simcom_wwan_usbnet_driver_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>description<span class="token operator">=</span> <span class="token string">"SIMCOM wwan/QMI device"</span><span class="token punctuation">,</span><span class="token punctuation">.</span>flags<span class="token operator">=</span> FLAG_WWAN<span class="token punctuation">,</span><span class="token punctuation">.</span>bind  <span class="token operator">=</span> simcom_wwan_bind<span class="token punctuation">,</span><span class="token punctuation">.</span>unbind<span class="token operator">=</span> simcom_wwan_unbind<span class="token punctuation">,</span><span class="token punctuation">.</span>rx_fixup       <span class="token operator">=</span> simcom_wwan_rx_fixup<span class="token punctuation">,</span><span class="token punctuation">.</span>tx_fixup       <span class="token operator">=</span> simcom_wwan_tx_fixup<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">usb_device_id</span> products<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token function">USB_DEVICE</span><span class="token punctuation">(</span><span class="token number">0x1e0e</span><span class="token punctuation">,</span> <span class="token number">0x9025</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>driver_info <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>simcom_wwan_usbnet_driver_info <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function">USB_DEVICE</span><span class="token punctuation">(</span><span class="token number">0x1e0e</span><span class="token punctuation">,</span> <span class="token number">0x9001</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>driver_info <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>simcom_wwan_usbnet_driver_info <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">/* END */</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">MODULE_DEVICE_TABLE</span><span class="token punctuation">(</span>usb<span class="token punctuation">,</span> products<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">usb_driver</span> simcom_wwan_usb_driver <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>name        <span class="token operator">=</span> <span class="token string">"simcom_wwan"</span><span class="token punctuation">,</span><span class="token punctuation">.</span>id_table      <span class="token operator">=</span> products<span class="token punctuation">,</span><span class="token punctuation">.</span>probe      <span class="token operator">=</span>usbnet_probe<span class="token punctuation">,</span><span class="token punctuation">.</span>disconnect    <span class="token operator">=</span> usbnet_disconnect<span class="token punctuation">,</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_PM</span></span><span class="token punctuation">.</span>suspend      <span class="token operator">=</span> simcom_wwan_suspend<span class="token punctuation">,</span><span class="token punctuation">.</span>resume      <span class="token operator">=</span>simcom_wwan_resume<span class="token punctuation">,</span><span class="token punctuation">.</span>reset_resume         <span class="token operator">=</span> simcom_wwan_resume<span class="token punctuation">,</span><span class="token punctuation">.</span>supports_autosuspend <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">int</span> __init <span class="token function">simcom_wwan_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">usb_register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>simcom_wwan_usb_driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">module_init</span><span class="token punctuation">(</span>simcom_wwan_init<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> __exit <span class="token function">simcom_wwan_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">usb_deregister</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>simcom_wwan_usb_driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">module_exit</span><span class="token punctuation">(</span>simcom_wwan_exit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_AUTHOR</span><span class="token punctuation">(</span><span class="token string">"Xiaobin Wang &lt;xiaobin.wang@sim.com&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_DESCRIPTION</span><span class="token punctuation">(</span><span class="token string">"SIM7600 RMNET WWAN driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_LICENSE</span><span class="token punctuation">(</span><span class="token string">"GPL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake">obj-m:=simcom_wwan.o    simcom_wwanmodule-objs:=module    KDIR:=/lib/modules/$<span class="token punctuation">(</span>shell uname -r<span class="token punctuation">)</span>/build    MAKE:=make    default:$<span class="token punctuation">(</span>MAKE<span class="token punctuation">)</span> -C $<span class="token punctuation">(</span>KDIR<span class="token punctuation">)</span> SUBDIRS=$<span class="token punctuation">(</span>PWD<span class="token punctuation">)</span> modules    clean:$<span class="token punctuation">(</span>MAKE<span class="token punctuation">)</span> -C $<span class="token punctuation">(</span>KDIR<span class="token punctuation">)</span> SUBDIRS=$<span class="token punctuation">(</span>PWD<span class="token punctuation">)</span> clean <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IC和通用外设开发 </tag>
            
            <tag> 网络通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I2C转16路PWM</title>
      <link href="/2019/06/18/i2c-zhuan-16-lu-pwm/"/>
      <url>/2019/06/18/i2c-zhuan-16-lu-pwm/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1 基本介绍"></a>1 基本介绍</h2><h3 id="1-1-该IC主要参数特征如下："><a href="#1-1-该IC主要参数特征如下：" class="headerlink" title="1.1 该IC主要参数特征如下："></a>1.1 该IC主要参数特征如下：</h3><ul><li>I2C接口，支持高达16路PWM输出，每路12位分辨率(4096级)</li><li>内置25MHz晶振，可不连接外部晶振，也可以连接外部晶振，最大50MHz</li><li>支持2.3V-5.5V电压，最大耐压值5.5V,逻辑电平3.3V</li><li>具有上电复位，以及软件复位等功能<br><img src="http://pic.huangruimin.tech/20190518024522.png"><br><strong>注</strong>：本教程侧重PCA9685的PWM输出，但PCA9685亦可用于WS2812等LED颜色控制等。</li></ul><h3 id="1-2-控制精度"><a href="#1-2-控制精度" class="headerlink" title="1.2 控制精度"></a>1.2 控制精度</h3><p>假设舵机为50HZ的控制频率，脉宽为0.5ms~2.5ms，12位分辨率(4096级)，相关精度计算如下：</p><ul><li><p>PWM周期：<br><img src="http://pic.huangruimin.tech/20190518130821.png"></p></li><li><p>时间分辨率：<br><img src="http://pic.huangruimin.tech/20190518130904.png"></p></li><li><p>最大脉宽时间：<br><img src="http://pic.huangruimin.tech/20190518130937.png"></p></li><li><p>最大脉宽时间可分成的份数：<br><img src="http://pic.huangruimin.tech/20190518131003.png"></p></li><li><p>0-180度的舵机，角度分辨率：<br><img src="http://pic.huangruimin.tech/20190518131028.png"></p></li></ul><h2 id="2-硬件参数"><a href="#2-硬件参数" class="headerlink" title="2 硬件参数"></a>2 硬件参数</h2><h3 id="2-1-封装及引脚排列"><a href="#2-1-封装及引脚排列" class="headerlink" title="2.1 封装及引脚排列"></a>2.1 封装及引脚排列</h3><p>PCA9685有两种封装：TSSOP28, HVQFN28，其相应的引脚排列如下图所示：<br><img src="http://pic.huangruimin.tech/20190518024735.png"><br>引脚功能描述如下图所示：<br><img src="http://pic.huangruimin.tech/20190518024833.png"><br><img src="http://pic.huangruimin.tech/20190518024855.png"></p><h3 id="2-2-器件地址"><a href="#2-2-器件地址" class="headerlink" title="2.2 器件地址"></a>2.2 器件地址</h3><p>PCA9685的器件地址是由引脚A0，A1，A2，A3，A4，A5共同决定，并且该引脚不可悬空，由于有6个引脚共同决定器件地址，因此，可以有64个器件地址，由于该IC上电便保留LED All Call address (E0h，1110 000)以及Software Reset address(06h，0000 0110)，实际仅有62个可用器件地址，因此，理论上，1个I2C接口可控制16*62=992路PWM，其引脚控制器件地址的示意图如下图所示：<br><img src="http://pic.huangruimin.tech/20190518025127.png"><br>默认情况下，若将A0-A5全部接地，则其器件地址为:0x40。</p><h3 id="2-3-寄存器及其地址"><a href="#2-3-寄存器及其地址" class="headerlink" title="2.3 寄存器及其地址"></a>2.3 寄存器及其地址</h3><p>默认情况下，上电复位后，寄存器地址的默认值均为0，寄存器地址及其用途见下图所示:<br><img src="http://pic.huangruimin.tech/20190518025235.png"><br><img src="http://pic.huangruimin.tech/20190518025305.png"><br>图中节选的部分寄存器地址中，主要关心以下寄存器：</p><ul><li>模式设置寄存器：MODE1，MODE2。</li><li>脉宽(占空比)设置寄存器：LED0_ON_L,LED0_ON_H,LED0_OFF_L,LED0_OFF_H……LED15……每一路PWM通道占用4个寄存器。</li><li>周期(频率)设置寄存器：PRE_SCALE。</li></ul><p>接下来介绍以上寄存器的使用及其注意事项。</p><h3 id="2-4-模式设置寄存器"><a href="#2-4-模式设置寄存器" class="headerlink" title="2.4 模式设置寄存器"></a>2.4 模式设置寄存器</h3><h4 id="2-4-1-MODE1寄存器"><a href="#2-4-1-MODE1寄存器" class="headerlink" title="2.4.1 MODE1寄存器"></a>2.4.1 MODE1寄存器</h4><p>首先介绍MODE1寄存器,如下图:<br><img src="http://pic.huangruimin.tech/20190518025438.png"><br>在使用该寄存器的时候要注意：</p><ul><li><p>如果未停止所有PWM输出就将其进入到睡眠模式，那么，所有输出通道在下一轮都将输出高电平。</p></li><li><p>睡眠后重新启动PWM的操作为:<br><img src="http://pic.huangruimin.tech/20190518025531.png"></p></li><li><p>注意，在设置PWM频率(写PRESCALE寄存器)的时候，要先设置为Sleep模式，请参考后面源码部分。</p></li></ul><h4 id="2-4-2-MODE2寄存器"><a href="#2-4-2-MODE2寄存器" class="headerlink" title="2.4.2 MODE2寄存器"></a>2.4.2 MODE2寄存器</h4><p>该寄存器的各位功能如下图所示:<br><img src="http://pic.huangruimin.tech/20190518025715.png"></p><h3 id="2-5-PWM通道寄存器及其占空比设置"><a href="#2-5-PWM通道寄存器及其占空比设置" class="headerlink" title="2.5 PWM通道寄存器及其占空比设置"></a>2.5 PWM通道寄存器及其占空比设置</h3><p>PWM通道寄存器如下图：<br><img src="http://pic.huangruimin.tech/20190518025806.png"><br>由图可知，对于每一个通道，有4个寄存器，每个寄存器图解如下图所示:<br><img src="http://pic.huangruimin.tech/20190518025850.png"><br>在设置PWM占空比的时候，首先，配置舵机的示例如下图所示(ON &lt; OFF的情况):<br><img src="http://pic.huangruimin.tech/20190518030017.png"><br>当特殊情况下，PWM周期大于定时器一次计数时,如下图所示(ON&gt;OFF的情况):<br><img src="http://pic.huangruimin.tech/20190518031556.png"></p><h3 id="2-6-PWM周期-频率-寄存器及其周期-频率-设置"><a href="#2-6-PWM周期-频率-寄存器及其周期-频率-设置" class="headerlink" title="2.6 PWM周期(频率)寄存器及其周期(频率)设置"></a>2.6 PWM周期(频率)寄存器及其周期(频率)设置</h3><p>接下来介绍配置PWM频率的寄存器:<br>一般情况下，在用内置晶振，为25MHZ，通过配置PRE_SCALE寄存器进行配置，配置的PRE_SCALE寄存器的值与PWM频率的关系如下图所示:<br><img src="http://pic.huangruimin.tech/20230826011112.png"><br>如果在舵机控制中，采用内置晶振，取osc_clock=25000000，update_rate=50(舵机控制频率50Hz)</p><h3 id="2-7-推荐硬件设计"><a href="#2-7-推荐硬件设计" class="headerlink" title="2.7 推荐硬件设计"></a>2.7 推荐硬件设计</h3><p>首先，OE引脚须接低电平以确保IC使能，如果连接LED灯，则推荐以下几种连接方式，如下图所示:<br><img src="http://pic.huangruimin.tech/20190518030252.png"></p><h2 id="3-软件设计"><a href="#3-软件设计" class="headerlink" title="3 软件设计"></a>3 软件设计</h2><h3 id="3-1-Micro-bit平台TypeScript版"><a href="#3-1-Micro-bit平台TypeScript版" class="headerlink" title="3.1 Micro:bit平台TypeScript版"></a>3.1 Micro:bit平台TypeScript版</h3><p>接下来进行软件设计部分讲解，由于本次开发采用Micro:bit底层开发，采用的是TypeScript(JavaScript的超类),所以暂提供该语言，提供基本操作方法及其思路，日后再更新C,cpp及其它平台(STM32,Linux树莓派，Arduino等)操作方法，源码如下，可结合DataSheet及以上教程理解：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 使用此文件来定义自定义函数和图形块。 * 想了解更详细的信息，请前往 https://makecode.microbit.org/blocks/custom */</span> <span class="token comment">/** * 自定义图形块 */</span><span class="token comment">//% weight=5 color=#0fbc11 icon="\uf113"</span>namespace Servo <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token constant">PCA9685_ADDRESS</span> <span class="token operator">=</span> <span class="token number">0x40</span>    <span class="token keyword">const</span> <span class="token constant">MODE1</span> <span class="token operator">=</span> <span class="token number">0x00</span>    <span class="token keyword">const</span> <span class="token constant">MODE2</span> <span class="token operator">=</span> <span class="token number">0x01</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR1</span> <span class="token operator">=</span> <span class="token number">0x02</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR2</span> <span class="token operator">=</span> <span class="token number">0x03</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR3</span> <span class="token operator">=</span> <span class="token number">0x04</span>    <span class="token keyword">const</span> <span class="token constant">PRESCALE</span> <span class="token operator">=</span> <span class="token number">0xFE</span>    <span class="token keyword">const</span> <span class="token constant">LED0_ON_L</span> <span class="token operator">=</span> <span class="token number">0x06</span>    <span class="token keyword">const</span> <span class="token constant">LED0_ON_H</span> <span class="token operator">=</span> <span class="token number">0x07</span>    <span class="token keyword">const</span> <span class="token constant">LED0_OFF_L</span> <span class="token operator">=</span> <span class="token number">0x08</span>    <span class="token keyword">const</span> <span class="token constant">LED0_OFF_H</span> <span class="token operator">=</span> <span class="token number">0x09</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_ON_L</span> <span class="token operator">=</span> <span class="token number">0xFA</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_ON_H</span> <span class="token operator">=</span> <span class="token number">0xFB</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_OFF_L</span> <span class="token operator">=</span> <span class="token number">0xFC</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_OFF_H</span> <span class="token operator">=</span> <span class="token number">0xFD</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHA_L</span> <span class="token operator">=</span> <span class="token number">2047</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHA_H</span> <span class="token operator">=</span> <span class="token number">4095</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHB_L</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHB_H</span> <span class="token operator">=</span> <span class="token number">2047</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHC_L</span> <span class="token operator">=</span> <span class="token number">1023</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHC_H</span> <span class="token operator">=</span> <span class="token number">3071</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHD_L</span> <span class="token operator">=</span> <span class="token number">3071</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHD_H</span> <span class="token operator">=</span> <span class="token number">1023</span>     <span class="token keyword">let</span> initialized <span class="token operator">=</span> <span class="token boolean">false</span>     <span class="token keyword">function</span> <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">addr</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">reg</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> buf <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">createBuffer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> reg        buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value        pins<span class="token punctuation">.</span><span class="token function">i2cWriteBuffer</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> buf<span class="token punctuation">)</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">i2cread</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">addr</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">reg</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        pins<span class="token punctuation">.</span><span class="token function">i2cWriteNumber</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> NumberFormat<span class="token punctuation">.</span>UInt8BE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> val <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">i2cReadNumber</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> NumberFormat<span class="token punctuation">.</span>UInt8BE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> val<span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span>        <span class="token function">setFreq</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4095</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">setPwm</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        initialized <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">setFreq</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">freq</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token comment">// Constrain the frequency</span>        <span class="token keyword">let</span> prescaleval <span class="token operator">=</span> <span class="token number">25000000</span><span class="token punctuation">;</span>        prescaleval <span class="token operator">/=</span> <span class="token number">4096</span><span class="token punctuation">;</span>        prescaleval <span class="token operator">/=</span> freq<span class="token punctuation">;</span>        prescaleval <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> prescale <span class="token operator">=</span> prescaleval<span class="token punctuation">;</span> <span class="token comment">//Math.Floor(prescaleval + 0.5);</span>        <span class="token keyword">let</span> oldmode <span class="token operator">=</span> <span class="token function">i2cread</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> newmode <span class="token operator">=</span> <span class="token punctuation">(</span>oldmode <span class="token operator">&amp;</span> <span class="token number">0x7F</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x10</span><span class="token punctuation">;</span> <span class="token comment">// sleep</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> newmode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// go to sleep</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">PRESCALE</span><span class="token punctuation">,</span> prescale<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// set the prescaler</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> oldmode<span class="token punctuation">)</span><span class="token punctuation">;</span>        control<span class="token punctuation">.</span><span class="token function">waitMicros</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> oldmode <span class="token operator">|</span> <span class="token number">0xa1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">setPwm</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">on</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">off</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>channel <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> channel <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">)</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> buf <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">createBuffer</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">LED0_ON_L</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> channel<span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> on <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>on <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> off <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>off <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        pins<span class="token punctuation">.</span><span class="token function">i2cWriteBuffer</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token comment">/** * Servo Execute * @param degree [0-180] degree of servo; eg: 90, 0, 180*/</span>    <span class="token comment">//% blockId=setServo block="Servo channel|%channel|degree %degree"</span>    <span class="token comment">//% weight=85</span>    <span class="token comment">//% degree.min=0 degree.max=180</span>    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Servo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span><span class="token literal-property property">degree</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialized<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">// 50hz: 20,000 us</span>        <span class="token keyword">let</span> v_us <span class="token operator">=</span> <span class="token punctuation">(</span>degree <span class="token operator">*</span> <span class="token number">1800</span> <span class="token operator">/</span> <span class="token number">180</span> <span class="token operator">+</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.6 ~ 2.4</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> v_us <span class="token operator">*</span> <span class="token number">4096</span> <span class="token operator">/</span> <span class="token number">20000</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">/** * Servo Execute * @param pulse [500-2500] pulse of servo; eg: 1500, 500, 2500*/</span>    <span class="token comment">//% blockId=setServoPulse block="Servo channel|%channel|pulse %pulse"</span>    <span class="token comment">//% weight=85</span>    <span class="token comment">//% pulse.min=500 pulse.max=2500</span>    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ServoPulse</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span><span class="token literal-property property">pulse</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialized<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">// 50hz: 20,000 us</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> pulse <span class="token operator">*</span> <span class="token number">4096</span> <span class="token operator">/</span> <span class="token number">20000</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上便是Micro:bit驱动PCA9685的源代码，注意源代码中的时间为us，而教程中的时间为ms。</p><h3 id="3-2-树莓派平台Python版"><a href="#3-2-树莓派平台Python版" class="headerlink" title="3.2 树莓派平台Python版"></a>3.2 树莓派平台Python版</h3><p>要运行该程序，首先选装python，安装好Python后，还需要安装树莓派平台的smbus库：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-smbus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>树莓派平台采用Python驱动PCA9685的Python代码如下所示:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span> <span class="token keyword">import</span> time<span class="token keyword">import</span> math<span class="token keyword">import</span> smbus <span class="token comment"># ============================================================================</span><span class="token comment"># Raspi PCA9685 16-Channel PWM Servo Driver</span><span class="token comment"># ============================================================================</span> <span class="token keyword">class</span> <span class="token class-name">PCA9685</span><span class="token punctuation">:</span>   <span class="token comment"># Registers/etc.</span>  __SUBADR1            <span class="token operator">=</span> <span class="token number">0x02</span>  __SUBADR2            <span class="token operator">=</span> <span class="token number">0x03</span>  __SUBADR3            <span class="token operator">=</span> <span class="token number">0x04</span>  __MODE1              <span class="token operator">=</span> <span class="token number">0x00</span>  __PRESCALE           <span class="token operator">=</span> <span class="token number">0xFE</span>  __LED0_ON_L          <span class="token operator">=</span> <span class="token number">0x06</span>  __LED0_ON_H          <span class="token operator">=</span> <span class="token number">0x07</span>  __LED0_OFF_L         <span class="token operator">=</span> <span class="token number">0x08</span>  __LED0_OFF_H         <span class="token operator">=</span> <span class="token number">0x09</span>  __ALLLED_ON_L        <span class="token operator">=</span> <span class="token number">0xFA</span>  __ALLLED_ON_H        <span class="token operator">=</span> <span class="token number">0xFB</span>  __ALLLED_OFF_L       <span class="token operator">=</span> <span class="token number">0xFC</span>  __ALLLED_OFF_H       <span class="token operator">=</span> <span class="token number">0xFD</span>   <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token number">0x40</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>bus <span class="token operator">=</span> smbus<span class="token punctuation">.</span>SMBus<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>address <span class="token operator">=</span> address    self<span class="token punctuation">.</span>debug <span class="token operator">=</span> debug    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Reseting PCA9685"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Writes an 8-bit value to the specified register/address"</span>    self<span class="token punctuation">.</span>bus<span class="token punctuation">.</span>write_byte_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> value<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I2C: Write 0x%02X to register 0x%02X"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Read an unsigned byte from the I2C device"</span>    result <span class="token operator">=</span> self<span class="token punctuation">.</span>bus<span class="token punctuation">.</span>read_byte_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> reg<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I2C: Device 0x%02X returned 0x%02X from reg 0x%02X"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> result <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result  <span class="token keyword">def</span> <span class="token function">setPWMFreq</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> freq<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets the PWM frequency"</span>    prescaleval <span class="token operator">=</span> <span class="token number">25000000.0</span>    <span class="token comment"># 25MHz</span>    prescaleval <span class="token operator">/=</span> <span class="token number">4096.0</span>       <span class="token comment"># 12-bit</span>    prescaleval <span class="token operator">/=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>freq<span class="token punctuation">)</span>    prescaleval <span class="token operator">-=</span> <span class="token number">1.0</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Setting PWM frequency to %d Hz"</span> <span class="token operator">%</span> freq<span class="token punctuation">)</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Estimated pre-scale: %d"</span> <span class="token operator">%</span> prescaleval<span class="token punctuation">)</span>    prescale <span class="token operator">=</span> math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>prescaleval <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Final pre-scale: %d"</span> <span class="token operator">%</span> prescale<span class="token punctuation">)</span>     oldmode <span class="token operator">=</span> self<span class="token punctuation">.</span>read<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">)</span><span class="token punctuation">;</span>    newmode <span class="token operator">=</span> <span class="token punctuation">(</span>oldmode <span class="token operator">&amp;</span> <span class="token number">0x7F</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x10</span>        <span class="token comment"># sleep</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> newmode<span class="token punctuation">)</span>        <span class="token comment"># go to sleep</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__PRESCALE<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>prescale<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> oldmode<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> oldmode <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">setPWM</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> on<span class="token punctuation">,</span> off<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets a single PWM channel"</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_ON_L<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> on <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_ON_H<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> on <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_OFF_L<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> off <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_OFF_H<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> off <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"channel: %d  LED_ON: %d LED_OFF: %d"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>channel<span class="token punctuation">,</span>on<span class="token punctuation">,</span>off<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">setServoPulse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> pulse<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets the Servo Pulse,The PWM frequency must be 50HZ"</span>    pulse <span class="token operator">=</span> pulse<span class="token operator">*</span><span class="token number">4096</span><span class="token operator">/</span><span class="token number">20000</span>        <span class="token comment">#PWM frequency is 50HZ,the period is 20000us</span>    self<span class="token punctuation">.</span>setPWM<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pulse<span class="token punctuation">)</span> <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>   pwm <span class="token operator">=</span> PCA9685<span class="token punctuation">(</span><span class="token number">0x40</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  pwm<span class="token punctuation">.</span>setPWMFreq<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>   <span class="token comment"># setServoPulse(2,2500)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pwm<span class="token punctuation">.</span>setServoPulse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>         time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span>             <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      pwm<span class="token punctuation">.</span>setServoPulse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>       time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存文件命名为: pca9685.py,命令行进入该文件所在的路径，运行该Python脚本:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> python pca9685.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行该命令后，便可控制舵机从0度转到180度，再从180度转到0度。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IC和通用外设开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_绘图板综合</title>
      <link href="/2018/02/08/rpi-opencv-hui-tu-ban-zong-he/"/>
      <url>/2018/02/08/rpi-opencv-hui-tu-ban-zong-he/</url>
      
        <content type="html"><![CDATA[<p>在上一节中，讲解了大量的概念，比较零散，于是，在这一节，将通过一个绘图板的综合项目将上一节的知识汇总起来，此外，之前的课程主要讲解OpenCV中一些基本操作，并未涉及OpenCV的精髓内容，因此，尽量早些完成相关操作的讲解，尽快进入算法讲解的环节中。</p><h2 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1.思路分析"></a>1.思路分析</h2><p>类似于液晶触摸的书写，我们来研究下如何实现绘图功能。</p><blockquote><p>本质上，绘图是绘制线条，曲线可以分解成很多直线，直线可以分解成很多点，因此，就先从绘制点开始。</p></blockquote><blockquote><p>绘制点时鼠标在移动，因此，要设置鼠标的回调函数，那当什么时候调用回调函数呢，显然，是鼠标左键按下并且鼠标在移动的时候。</p></blockquote><blockquote><p>因此，程序整体结构是：定义一个回调函数，这个回调函数用于画图；然后建立一个窗口，窗口绑定回调函数；最后将回调函数画的图显示在这个窗口上。</p></blockquote><p>想法有了，可以开始着手了。</p><h2 id="2-写出基本结构"><a href="#2-写出基本结构" class="headerlink" title="2.写出基本结构"></a>2.写出基本结构</h2><p>由于Python的便捷性，先采用Python实现，不用太顾及语法问题。</p><p>下面先调出第一个版本的源码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建一个窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 创建一个黑色图像</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 定义一个回调函数，用于绘制图像</span><span class="token keyword">def</span> <span class="token function">draw_point</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 将回调函数绑定到窗口上</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> draw_point<span class="token punctuation">)</span><span class="token comment"># 主循环显示图像</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 保存图像</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span> <span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个版本运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029181044.png"></p><h2 id="3-总结，改进"><a href="#3-总结，改进" class="headerlink" title="3.总结，改进"></a>3.总结，改进</h2><p>在上一版本中，鼠标按下后，只能画一个点，在此情况下，需要改进为鼠标按下后，就一直画点，于是，改进后，就有了以下代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">draw_circle</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>    <span class="token keyword">global</span> isMouseLBDown    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键按下</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mouse down"</span><span class="token punctuation">)</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">True</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONUP<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键抬起</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mouse up"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE<span class="token punctuation">:</span>        <span class="token comment"># 如果鼠标按下并且鼠标在移动</span>        <span class="token keyword">if</span> isMouseLBDown<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"drawing"</span><span class="token punctuation">)</span>            cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 创建一个黑色图像，并绑定窗口和鼠标回调函数  </span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>  cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 设置鼠标事件回调</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>draw_circle<span class="token punctuation">)</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>      <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token keyword">break</span>  cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>  img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029191417.png"></p><p>程序运行后，在黑窗中，按下鼠标左键，并且移动鼠标，即可绘制图案。</p><h2 id="3-再次总结，改进"><a href="#3-再次总结，改进" class="headerlink" title="3.再次总结，改进"></a>3.再次总结，改进</h2><p>经过一番改进，总算是能画图了，但是，画图过程中，如果画笔速度过快，那么，将会导致出现断点，并且使用上，不能调整画笔的颜色，画笔的宽度等一系列参数。为此做了以下改进：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token comment"># 判断鼠标是否按下的标志</span>isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># 画笔的颜色</span>circleColor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 画笔的粗壮</span>circleRadius <span class="token operator">=</span> <span class="token number">5</span><span class="token comment"># 上一次的点</span>lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 定义鼠标函数，用于绘图</span><span class="token keyword">def</span> <span class="token function">draw_circle</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">global</span> img    <span class="token keyword">global</span> isMouseLBDown    <span class="token keyword">global</span> color    <span class="token keyword">global</span> lastPoint    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键按下，按下就画圆，并且记录抬起按键之前的点</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">True</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>circleRadius<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> circleColor<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONUP<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键抬起</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE<span class="token punctuation">:</span>        <span class="token comment"># 如果鼠标左键按下，并且鼠标在移动,就画线</span>        <span class="token comment"># 并且记录按键抬起之前的点</span>        <span class="token keyword">if</span> isMouseLBDown<span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span> pt1<span class="token operator">=</span>lastPoint<span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>circleColor<span class="token punctuation">,</span> thickness<span class="token operator">=</span>circleRadius<span class="token punctuation">)</span>            lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token comment"># 定义滑动条回调函数，用于更改颜色</span><span class="token keyword">def</span> <span class="token function">updateCircleColor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> circleColor    <span class="token keyword">global</span> colorPreviewImg    r <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    circleColor <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span> g<span class="token punctuation">,</span> r<span class="token punctuation">)</span>    colorPreviewImg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> circleColor<span class="token comment"># 定义滑动条回调函数，用于更改线条的粗壮</span><span class="token keyword">def</span> <span class="token function">updateCircleRadius</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> circleRadius    <span class="token keyword">global</span> radiusPreview    circleRadius <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Circle_Radius'</span><span class="token punctuation">,</span> <span class="token string">'image'</span><span class="token punctuation">)</span>    radiusPreview<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>radiusPreview<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>circleRadius <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 预览画布用的画布</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔颜色用的画布</span>colorPreviewImg <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>colorPreviewImg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔粗壮用的画布</span>radiusPreview <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>radiusPreview<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment"># 预览画布用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔颜色用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'colorPreview'</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔粗壮用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'radiusPreview'</span><span class="token punctuation">)</span><span class="token comment"># 画画的鼠标回调，绑定在预览画布窗口上</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>draw_circle<span class="token punctuation">)</span>  <span class="token comment"># 更改颜色用的滑条回调，绑定在预览画布用的窗口</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span><span class="token comment"># 更改线条粗壮的滑条回调，绑定在预览画布用的窗口</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Circle_Radius'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>updateCircleRadius<span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 画布</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>     <span class="token comment"># 画笔颜色</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'colorPreview'</span><span class="token punctuation">,</span> colorPreviewImg<span class="token punctuation">)</span>    <span class="token comment"># 画笔线条粗壮</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'radiusPreview'</span><span class="token punctuation">,</span> radiusPreview<span class="token punctuation">)</span>    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token keyword">break</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>  img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行效如下图所示，通过该程序，即可比较方便地绘图，并且，可调整画笔的颜色以及画笔的粗细：<br><img src="http://pic.huangruimin.tech/20191029195835.png"></p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_10行代码为你的头像添加国旗</title>
      <link href="/2018/02/07/rpi-opencv-10-xing-dai-ma-wei-ni-de-tou-xiang-tian-jia-guo-qi/"/>
      <url>/2018/02/07/rpi-opencv-10-xing-dai-ma-wei-ni-de-tou-xiang-tian-jia-guo-qi/</url>
      
        <content type="html"><![CDATA[<p>在学完前面较为枯燥的概念后，接下来，是时候展现真正的技术了。由于OpenCV既是机器视觉库，也是图像处理库，给头像添加国旗，那自然是小菜一碟，如果用Python写的话，只要10行左右。</p><h2 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1 思路分析"></a>1 思路分析</h2><p>好比把大象装进冰箱要几步一样，为头像添加上国旗也是如此，先不讲通过什么语言实现，毕竟语言只是工具，OK，如果那，那为头像添加上国旗则需要以下几个步骤：</p><ul><li>Step1：读取头像和国旗图案。</li><li>Step2：把国旗叠加到头像上。</li><li>Step3：把叠加后的图片保存。</li></ul><p>把大象放进冰箱只要这么几步，但是具体把国旗叠加到头像上，需要考虑的一体细节:</p><ul><li>国旗必须缩放到合适大小，才能放到头像上。</li><li>国旗缩放后不能变形。<br>因此：<blockquote><p>就把国旗的宽度缩放至头像宽度的1/4，然后高度也按照同样的比例进行缩放。</p></blockquote></li></ul><p>核心问题已经解决了，剩下来就是工具自身实现的问题，在OpenCV中，读写图像，缩放图像，图像合成，图像显示，是比较基本的操作，现在，就开始驾驭工具，把大象放入冰箱，先从Python开始讲起：</p><h2 id="2-Python实现"><a href="#2-Python实现" class="headerlink" title="2 Python实现"></a>2 Python实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf8 -*-</span><span class="token keyword">import</span> cv2<span class="token comment"># Step1：读取头像和国旗图像。</span>img_head <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'head.jpg'</span><span class="token punctuation">)</span>img_flag <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'flag.jpg'</span><span class="token punctuation">)</span><span class="token comment"># Step2：把国旗叠加到头像上。</span><span class="token comment"># Step2.1：获取头像和国旗宽度</span>w_head<span class="token punctuation">,</span> h_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>w_flag<span class="token punctuation">,</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># Step2.2：根据宽度计算缩放比例</span>scale <span class="token operator">=</span> w_head <span class="token operator">/</span> w_flag <span class="token operator">/</span> <span class="token number">4</span><span class="token comment"># Step2.3：根据缩放比例缩放国旗</span>img_flag <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img_flag<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fx<span class="token operator">=</span>scale<span class="token punctuation">,</span> fy<span class="token operator">=</span>scale<span class="token punctuation">)</span><span class="token comment"># Step2.4：获取缩放后国旗的新尺寸</span>w_flag<span class="token punctuation">,</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># Step2.5：根据缩放后的尺寸叠加国旗到头像右下角</span><span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img_head<span class="token punctuation">[</span>w_head <span class="token operator">-</span> w_flag<span class="token punctuation">:</span><span class="token punctuation">,</span> h_head <span class="token operator">-</span> h_flag<span class="token punctuation">:</span><span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> img_flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token comment"># Step3：保存叠加后的图像</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'new_head.jpg'</span><span class="token punctuation">,</span> img_head<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序执行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191028175608.png"></p><p>注释有说明步骤相关的思路及其实现。</p><h2 id="3-cpp实现"><a href="#3-cpp实现" class="headerlink" title="3 cpp实现"></a>3 cpp实现</h2><p>接下来，来看看cpp执行相关的代码</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//Step1：读取头像和国旗图像。</span>    Mat img_head <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"head.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat img_flag <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"flag.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat img_flag_resized<span class="token punctuation">;</span>    <span class="token comment">//Step2：把国旗叠加到头像上。</span>    <span class="token comment">//Step2.1：获取头像和国旗宽度</span>    <span class="token keyword">int</span> w_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    <span class="token keyword">int</span> h_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token keyword">int</span> w_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    <span class="token keyword">int</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token comment">//Step2.2：根据宽度计算缩放比例</span>    <span class="token keyword">double</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>w_head<span class="token operator">/</span>w_flag<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">;</span>    <span class="token comment">//Step2.3：根据缩放比例缩放国旗    </span>    <span class="token function">resize</span><span class="token punctuation">(</span>img_flag<span class="token punctuation">,</span>img_flag_resized<span class="token punctuation">,</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>scale<span class="token punctuation">,</span>scale<span class="token punctuation">,</span>INTER_NEAREST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Step2.4：获取缩放后国旗的新尺寸</span>    w_flag <span class="token operator">=</span> img_flag_resized<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    h_flag <span class="token operator">=</span> img_flag_resized<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token comment">//Step2.5：根据缩放后的尺寸叠加国旗到头像右下角</span>    Mat imageROI<span class="token operator">=</span><span class="token function">img_head</span><span class="token punctuation">(</span><span class="token function">Rect</span><span class="token punctuation">(</span>w_head<span class="token operator">-</span>w_flag<span class="token punctuation">,</span>h_head<span class="token operator">-</span>h_flag<span class="token punctuation">,</span>w_flag<span class="token punctuation">,</span>h_flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    img_flag_resized<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>imageROI<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Step3：保存叠加后的图像</span>    <span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"new_head.jpg"</span><span class="token punctuation">,</span>img_head<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其CmakeList.txt为：</p><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>07_National_Flag<span class="token punctuation">)</span><span class="token keyword">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span>07_National_Flag main.cpp<span class="token punctuation">)</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>07_National_Flag <span class="token punctuation">${</span>OpenCV_LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果图下图所示：<br><img src="http://pic.huangruimin.tech/20191028194113.png"></p><p>其执行效果同Python。</p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_IDE及图像存储的数据结构</title>
      <link href="/2018/02/06/rpi-opencv-ide-ji-tu-xiang-cun-chu-de-shu-ju-jie-gou/"/>
      <url>/2018/02/06/rpi-opencv-ide-ji-tu-xiang-cun-chu-de-shu-ju-jie-gou/</url>
      
        <content type="html"><![CDATA[<p>本章将首先讲解开发OpenCV的基本的IDE，以方便代码提示，同时方便阅读底层源码，接着，讲解图像存储的基本数据结构。</p><h2 id="1-IDE"><a href="#1-IDE" class="headerlink" title="1 IDE"></a>1 IDE</h2><p>之前两章开发OpenCV均未使用到IDE，比如开发Python的代码，用记事本即可写，需要时执行该脚本即可，当开发cpp的代码则需要先Cmake生成Makefile，再make编译，最后执行，为提高效率，首先介绍常用的IDE的相关配置，以及如何将OpenCV集成到该工程中。</p><p>说明：</p><ul><li>关于Python中，目前采用的是OpenCV4，为什么却是import cv2呢？</li></ul><blockquote><p>OpenCV1采用C语言编写，OpenCV2，OpenCV3，OpenCV4均采用cpp编写，在Python中，cv1指代底 层算法为C语言的OpenCV版本，cv2指代底层算法为C ++语言的版本，所以，在Python中，import cv2可能是OpenCV2,OpenCV3,OpenCV4等版本。</p></blockquote><ul><li>Python版本的OpenCV能不能看到底层的Python实现？</li></ul><blockquote><p>不能，因为底层实现为cpp，OpenCV仅仅提供了Python接口，同时OpenCV还提供了C#，java，Andriod等的接口。</p></blockquote><ul><li>cpp版本的OpenCV，推荐用什么IDE呢？</li></ul><blockquote><p>因为工程是通过Cmake构建的，首先应该选择支持构建Cmake工程的IDE，在Linux(Raspbian)平台下，推荐Qt Creator，除了采用Cmake构建OpenCV工程外，Qt Creator还支持采用qmake构建OpenCV工程；此外，Qt creator还支持底层接口函数跳转，方便跳转到对应的函数中，方便OpenCV的算法研究，算法移植等工作。</p></blockquote><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>若在树莓派平台采用Raspbian系统结合Python3开发OpenCV，由于Python仅提供相应的接口，无法查阅底层的实现，加上Python本身的简洁优雅，使用树莓派自带的Thonny Python IDE即可，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901022724.png"></p><p>点击Load，打开00_Test_OpenCV.py，点击Run，即可运行相应的Python脚本，此外，该IDE支持断点调试，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901023321.png"></p><h3 id="1-2-cpp"><a href="#1-2-cpp" class="headerlink" title="1.2 cpp"></a>1.2 cpp</h3><p>在cpp开发环境中，首选Qt Creator，方便添加依赖，同时支持跳转底层代码，开发与研究两不误；同时，结合Qt自带的UI界面，方便做成桌面应用；并且，支持添加树莓派自带bcm2835，wiringPi等库，方便进行底层开发；结合C ++的特点，向上支持应用开发，向下支持底层开发。</p><h4 id="1-2-1-安装Qt-Creator"><a href="#1-2-1-安装Qt-Creator" class="headerlink" title="1.2.1 安装Qt Creator"></a>1.2.1 安装Qt Creator</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> qt5-default<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> qtcreator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装好之后，即可在菜单-&gt;编程界面中找到Qt Creator，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901012530.png"></p><h4 id="1-2-2-创建并运行Cmake项目"><a href="#1-2-2-创建并运行Cmake项目" class="headerlink" title="1.2.2 创建并运行Cmake项目"></a>1.2.2 创建并运行Cmake项目</h4><p>打开Qt Creator，新建工程，选择纯cpp项目：</p><p><img src="http://pic.huangruimin.tech/20190901014412.png"></p><p>选择合适的路径：</p><p><img src="http://pic.huangruimin.tech/20190901014532.png"></p><p>选择Cmake：</p><p><img src="http://pic.huangruimin.tech/20190901014622.png"></p><p>一般选择默认编译套件即可：</p><p><img src="http://pic.huangruimin.tech/20190901014720.png"></p><p>默认的工程中，已经包含了Cmakelists.txt和main.cpp文件，现在修改Cmakelists.txt和main.cpp文件为《树莓派OpenCV系列教程1：开发环境搭建》的内容，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901020105.png"><br><img src="http://pic.huangruimin.tech/20190901020016.png"></p><p>若Qt Creator提示有错误，一般Cmakelists.txt有误。</p><p>此时,点击Qt Creator左下角的绿色三角形，将运行程序，打开摄像头，并输出相关信息，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901021139.png"></p><p>程序设定了按下q键即可退出窗口，此时，按下q键即可退出。</p><h4 id="1-2-3-其它使用说明"><a href="#1-2-3-其它使用说明" class="headerlink" title="1.2.3 其它使用说明"></a>1.2.3 其它使用说明</h4><p>若想跳转到具体的函数，可按住Ctrl，再单击相应的函数即可，跳转到具体的函数之后，有相应的函数说明，方便查阅，如下图：</p><p><img src="http://pic.huangruimin.tech/20190901021813.png"></p><p>并且，Qt Creator支持编程提示，错误提示等功能，能大幅提高效率，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901022115.png"></p><h2 id="2-图像存储的数据结构"><a href="#2-图像存储的数据结构" class="headerlink" title="2 图像存储的数据结构"></a>2 图像存储的数据结构</h2><p>任何图像处理算法，都是从操作每个像素点开始的。即使我们不会使用OpenCV提供的图像处理算法，只要了解图像处理算法的基本原理，也可以写出具有相同功能的程序。接下来，我们首先讲解图像存储的基本数据结构，接着，讲解如何访问图像中的具体某个像素点，将分为Python3和cpp进行讲解。</p><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><h4 id="2-1-1-numpy基础"><a href="#2-1-1-numpy基础" class="headerlink" title="2.1.1 numpy基础"></a>2.1.1 numpy基础</h4><p>在Python中OpenCV图像读取(imread) 读入的数据格式是numpy的ndarray数据格式，此外，Python在数据计算领域火爆，numpy功不可没，所以，在讲解Python图像存储数据结构之前，有必要先讲解涉及到的numpy的相关操作：</p><h5 id="ndarray初始化数组"><a href="#ndarray初始化数组" class="headerlink" title="ndarray初始化数组"></a>ndarray初始化数组</h5><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># One-dimensional array</span>A1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># Two-dimensional array</span>A2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A1: \n%s'</span><span class="token operator">%</span>A1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2: \n%s'</span><span class="token operator">%</span>A2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A1<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>A2<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ndarray的属性"><a href="#ndarray的属性" class="headerlink" title="ndarray的属性"></a>ndarray的属性</h5><table><thead><tr><th>属性名称</th><th>含义</th></tr></thead><tbody><tr><td>ndarray.ndim</td><td>数组的维度,等于Rank</td></tr><tr><td>ndarray.shape</td><td>(行数, 列数)</td></tr><tr><td>ndarray.size</td><td>元素总个数 = 列数 * 行数</td></tr><tr><td>ndarray.dtype</td><td>数组元素数据类型</td></tr><tr><td>ndarray.itemsize</td><td>数组中每个元素,字节大小</td></tr></tbody></table><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.ndim = %d'</span> <span class="token operator">%</span> A2<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.shape'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A2<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.size = %d'</span> <span class="token operator">%</span> A2<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.dtype = %s'</span><span class="token operator">%</span>A2<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.itemsize = %d'</span><span class="token operator">%</span>A2<span class="token punctuation">.</span>itemsize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A2<span class="token punctuation">.</span>ndim <span class="token operator">=</span> <span class="token number">2</span>A2<span class="token punctuation">.</span>shape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>A2<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">6</span>A2<span class="token punctuation">.</span>dtype <span class="token operator">=</span> int64A2<span class="token punctuation">.</span>itemsize <span class="token operator">=</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ndarray的切片操作"><a href="#ndarray的切片操作" class="headerlink" title="ndarray的切片操作"></a>ndarray的切片操作</h5><p>对数组进行切片操作，指的是获取数组的其中某一个子区域，具体切片操作，详情见如下图：</p><h6 id="一维数组的切片操作"><a href="#一维数组的切片操作" class="headerlink" title="一维数组的切片操作"></a>一维数组的切片操作</h6><p><img src="http://pic.huangruimin.tech/20190901214035.png"><br>其中：<br>A = np.arange(10)表示生成0到9，步长为1的一维数组。</p><p>A[0:3:1]是A[0:3]及A[:3]的完整写法，表示取一维数组A中索引从0到3(但不包含3)，步长为1的元素。</p><p>A[-1:5:-1]中：这里start=-1代表最后一个元素，表示取一维数组A中索引从最后一个到第5个(但不包含5)，步长为-1的元素。</p><p>A[ : : -1]表示将一维数组A中的元素逆序取出</p><p>同理：</p><p>A[ : : 1]表示将一维数组A中的元素顺序取出</p><h6 id="多维数组的切片操作"><a href="#多维数组的切片操作" class="headerlink" title="多维数组的切片操作"></a>多维数组的切片操作</h6><p>对于多维数组的切片操作，中间需要使用逗号进行分隔，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901221239.png"></p><p>对于图像数据结构ndarray的切片操作，可参考上图。</p><h4 id="2-1-2-OpenCV中图像数据结构ndarray"><a href="#2-1-2-OpenCV中图像数据结构ndarray" class="headerlink" title="2.1.2 OpenCV中图像数据结构ndarray"></a>2.1.2 OpenCV中图像数据结构ndarray</h4><p>下图是OpenCV中BGR格式的数据结构：</p><p><img src="http://pic.huangruimin.tech/20190901221911.png"></p><p>第一维度 : Height 高度, 对应这张图片的 nRow行数</p><p>第二维度 : Width 宽度, 对应这张图片的nCol 列数</p><p>第三维度: Value BGR三通道的值.</p><p>BGR 分别代表：B: Blue 蓝色，G: Green 绿色，R: Red 红色</p><h4 id="2-1-3-从ndarray中取出像素点值"><a href="#2-1-3-从ndarray中取出像素点值" class="headerlink" title="2.1.3 从ndarray中取出像素点值"></a>2.1.3 从ndarray中取出像素点值</h4><p>注意，由于历史原因，OpenCV存储图像的数据结构采用的BGR格式，而非RGB，下面，将读取一幅图片，并把这幅图片的像素分片打印出来。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">102</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902000858.png"></p><p>通过对图像数据结构ndarray的切片操作，打印出了4个像素点的值，需要注意的是，每个点的像素值是以(B,G,R)的形式存储。</p><h3 id="2-2-cpp"><a href="#2-2-cpp" class="headerlink" title="2.2 cpp"></a>2.2 cpp</h3><p>与Python不同，在OpenCV4版本中(OpenCV1例外)，提供了Mat类作为图像容器，该对象利用了内存管理(非严格意义上的)，可以避免在退出程序前忘记释放内存造成的内存泄露。</p><p>总而言之，Mat就是一个类，由两个数据部分组成：矩阵头(包含矩阵尺寸、存储方法、存储地址等信息)和一个存储所有像素值的矩阵(根据所选存储方法的不同，矩阵可以是不同的维数)的指针。</p><h4 id="2-2-1-创建矩阵及输出矩阵的常用方法"><a href="#2-2-1-创建矩阵及输出矩阵的常用方法" class="headerlink" title="2.2.1 创建矩阵及输出矩阵的常用方法"></a>2.2.1 创建矩阵及输出矩阵的常用方法</h4><p>当使用拷贝构造函数，或对矩阵进行复制时，只复制信息头和矩阵指针，而不复制矩阵。</p><p>来看下面这段代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat A<span class="token punctuation">,</span>CA <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"1.jpg"</span>，CV_LOAD_IMAGE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat <span class="token function">B</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">;</span>C <span class="token operator">=</span> A<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在以上代码中，构造函数Mat B(A),赋值操作C=A,均只是复制矩阵A的信息头和矩阵指针，而不复制矩阵。</p><p>如果需要复制矩阵进行操作(实际不建议大量复制矩阵，因为图像一般比较占内存)，可使用以下操作：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat A<span class="token punctuation">,</span>B<span class="token punctuation">,</span>C<span class="token punctuation">;</span>A <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"1.jpg"</span>，CV_LOAD_IMAGE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> A<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>A<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样一来，B和C均复制了A的图像矩阵。</p><p>此外，可直观地使用以下方法创建矩阵：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat <span class="token function">M</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>CV_8UC3<span class="token punctuation">,</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"M = "</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> M <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下面将通过一个综合示例来演示创建矩阵及矩阵的输出方法：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"opencv2/core/core.hpp"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"opencv2/highgui/highgui.hpp"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//Create</span>    Mat I <span class="token operator">=</span> <span class="token class-name">Mat</span><span class="token double-colon punctuation">::</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> CV_64F<span class="token punctuation">)</span><span class="token punctuation">;</span>    I<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> CV_PI<span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"I=\n"</span> <span class="token operator">&lt;&lt;</span> I <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Mat r <span class="token operator">=</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> CV_8UC3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">randu</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(OpenCV default Style)=\n"</span> <span class="token operator">&lt;&lt;</span> r <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Python Style)=\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_PYTHON<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Numpy Style)=\n"</span> <span class="token operator">&lt;&lt;</span>  <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_NUMPY<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Comma Style)=\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_CSV<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(C Style)=\n"</span> <span class="token operator">&lt;&lt;</span>  <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_C<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Point2f <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Two Dimension Point p =\n"</span> <span class="token operator">&lt;&lt;</span> p <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Point3f <span class="token function">p3f</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Three Dimension Point p3f =\n"</span> <span class="token operator">&lt;&lt;</span> p3f <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    vector<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">&gt;</span> v<span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Point based on vector shortvec =\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">Mat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    vector<span class="token operator">&lt;</span>Point2f<span class="token operator">&gt;</span> <span class="token function">points</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        points<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Point2f</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Two Dimension points =\n"</span> <span class="token operator">&lt;&lt;</span> points<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相应的输出结果如下所示：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">I<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.141592653589793</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>OpenCV <span class="token keyword">default</span> Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">;</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">;</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Python Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>  <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Numpy Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>  <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token char">'uint8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Comma Style<span class="token punctuation">)</span><span class="token operator">=</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">;</span><span class="token punctuation">(</span>C Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">{</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Two Dimension Point p <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Three Dimension Point p3f <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Point based on vector shortvec <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Two Dimension points <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-2-从Mat中取出像素点"><a href="#2-2-2-从Mat中取出像素点" class="headerlink" title="2.2.2 从Mat中取出像素点"></a>2.2.2 从Mat中取出像素点</h4><p>本节，将介绍cpp中常用的从Mat类的实例化对象中取出像素点的3种方法，并且，每种方法均对颜色空间进行缩减，即：</p><p>0~100范围的像素值为0；</p><p>100~200范围的像素值为100；</p><p>200~255范围的像素值为200。</p><p>并且，每种方法均统计了运行时间。</p><h5 id="用指针访问像素"><a href="#用指针访问像素" class="headerlink" title="用指针访问像素"></a>用指针访问像素</h5><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    Mat srcImage <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"srcImage"</span><span class="token punctuation">,</span>srcImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat dstImage<span class="token punctuation">;</span>    dstImage<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">.</span>rows<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span>cols<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> time0 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">colorReduce</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">,</span>dstImage<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    time0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time0<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">getTickFrequency</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"This function  waste time:"</span><span class="token operator">&lt;&lt;</span>time0<span class="token operator">&lt;&lt;</span><span class="token string">" second"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"dstImage"</span><span class="token punctuation">,</span>dstImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">{</span>    outputImage <span class="token operator">=</span> inputImage<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rowNumber <span class="token operator">=</span> outputImage<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>        <span class="token comment">//Number of columns * Number of channels = number of elements per line</span>    <span class="token keyword">int</span> colNumber <span class="token operator">=</span> outputImage<span class="token punctuation">.</span>cols<span class="token operator">*</span>outputImage<span class="token punctuation">.</span><span class="token function">channels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> rowNumber<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//Get the first address of the i-th line</span>        uchar<span class="token operator">*</span> data <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">ptr</span><span class="token generic class-name"><span class="token operator">&lt;</span>uchar<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> colNumber<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            data<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在该程序中，先获取每一行的元素的个数，在双重遍历中，先获取第i行的首地址，然后通过指针获取第i的第j个元素，再对该元素进行处理。</p><p>该函数的运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902023319.png"></p><p>可见，遍历所有像素点并进行处理的时间为0.02秒左右</p><h5 id="用迭代器访问像素"><a href="#用迭代器访问像素" class="headerlink" title="用迭代器访问像素"></a>用迭代器访问像素</h5><p>用迭代器访问像素点的操作如下程序所示：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    Mat srcImage <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"srcImage"</span><span class="token punctuation">,</span>srcImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat dstImage<span class="token punctuation">;</span>    dstImage<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">.</span>rows<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span>cols<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> time0 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">colorReduce</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">,</span>dstImage<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    time0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time0<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">getTickFrequency</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"This function  waste time:"</span><span class="token operator">&lt;&lt;</span>time0<span class="token operator">&lt;&lt;</span><span class="token string">" second"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"dstImage"</span><span class="token punctuation">,</span>dstImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span>  <span class="token punctuation">{</span>  outputImage <span class="token operator">=</span> inputImage<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Start position iterator</span>Mat_<span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">begin</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//End position iterator</span>Mat_<span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator itend <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">end</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>it <span class="token operator">!=</span> itend<span class="token punctuation">;</span><span class="token operator">++</span>it<span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该函数运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902025830.png"></p><p>在该方法中，直接使用迭代器进行处理，采用迭代器访问相对于数组越界的可能性，还是非常安全的，经实测，该方法遍历所有像素点并进行处理的时间为0.04秒左右。</p><p>可见，采用迭代器访问像素点的方法比采用指针访问像素点的方法慢了近一倍，因此，为提高处理速度，建议采用指针访问像素点。</p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_OpenCV中HighGUI及相关上位机开发</title>
      <link href="/2018/02/05/rpi-opencv-opencv-zhong-highgui-ji-xiang-guan-shang-wei-ji-kai-fa/"/>
      <url>/2018/02/05/rpi-opencv-opencv-zhong-highgui-ji-xiang-guan-shang-wei-ji-kai-fa/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍OpenCV中自带组件HighGUI的简单使用。当我们在测试算法，查看算法效果的时候，需要用到可视化，动态调参的界面，也可能需要监听鼠标，键盘等的动作，这时，HighGUI就发挥大作用了，HighGUI作为OpenCV的图形化(GUI)组件，可以通过HighGUI开发一些简易的上位机。</p><h2 id="1-HighGUI所提供的接口类型"><a href="#1-HighGUI所提供的接口类型" class="headerlink" title="1 HighGUI所提供的接口类型"></a>1 HighGUI所提供的接口类型</h2><p>OpenCV的HighGUI提供了以下几种接口：</p><ul><li>创建多个窗口，在窗口中显示图像</li><li>监听鼠标相关的操作</li><li>创建按钮，滑块等简单交互组件，并获取其值</li></ul><p>下面将分别讲解该接口，最后通过一个综合案例了解该接口的使用。</p><h2 id="2-HighGUI窗口"><a href="#2-HighGUI窗口" class="headerlink" title="2 HighGUI窗口"></a>2 HighGUI窗口</h2><h3 id="2-1-namedWindow接口"><a href="#2-1-namedWindow接口" class="headerlink" title="2.1 namedWindow接口"></a>2.1 namedWindow接口</h3><p>函数原型：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token boolean">None</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span>winname<span class="token punctuation">[</span><span class="token punctuation">,</span> flags<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> cv<span class="token double-colon punctuation">::</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> winname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags <span class="token operator">=</span> WINDOW_AUTOSIZE <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该函数可以传入一些参数(flags)来实现窗口的一些设定。</p><p>设置选项1：窗口大小</p><ul><li>WINDOW_NORMAL 1 代表允许拖动窗口变换窗口大小。</li><li>WINDOW_AUTOSIZE 0 默认根据屏幕跟图片的大小， 自动缩放。 不允许手动变化窗口大小。</li></ul><p>设置选项2：设置宽高比</p><ul><li>WINDOW_FREERATIO 256 不固定宽高比。</li><li>WINDOW_KEEPRATIO 0 默认固定宽高比， 也就是窗口拖拽缩放， 必须保持原来的宽高比。</li></ul><p>设置选项3：窗口GUI版本</p><ul><li>WINDOW_GUI_NORMAL 16 旧版窗口组件。 不支持statusbar跟toolbar。 就是窗口上方的状态栏，工具栏。</li><li>WINDOW_GUI_EXPANDED 0 默认新版本功能增强的GUI窗口。</li></ul><p>一般地，我们想设置可以自由拖动，又不固定宽高比的窗口，那我们可以这样写：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>cv2<span class="token punctuation">.</span>WINDOW_NORMAL<span class="token operator">|</span>cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token operator">|</span>cv2<span class="token punctuation">.</span>WINDOW_GUI_EXPANDED<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token operator">|</span>WINDOW_GUI_EXPANDED<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-imshow接口"><a href="#2-2-imshow接口" class="headerlink" title="2.2 imshow接口"></a>2.2 imshow接口</h3><p>函数原型：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token boolean">None</span><span class="token operator">=</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>winname<span class="token punctuation">,</span> mat<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> winname<span class="token punctuation">,</span>InputArray mat <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这里，调用imshow函数时，如果”image_win”这个窗口之前并没有被声明，那么会先创建一个名字叫”image_win”的窗口，然后再更新这个窗口里面的图像。</p><p>该函数具体使用如下：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-窗口销毁"><a href="#2-3-窗口销毁" class="headerlink" title="2.3 窗口销毁"></a>2.3 窗口销毁</h3><p>该函数负责销毁窗口，但该函数对于小型项目而言，并不是很有必要，因为一般在程序结束时，会自动销毁窗口。该函数的具体使用如下：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>destroyWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">destroyWindow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-HighGUI鼠标事件监听"><a href="#3-HighGUI鼠标事件监听" class="headerlink" title="3 HighGUI鼠标事件监听"></a>3 HighGUI鼠标事件监听</h2><h3 id="3-1-鼠标支持的事件"><a href="#3-1-鼠标支持的事件" class="headerlink" title="3.1 鼠标支持的事件"></a>3.1 鼠标支持的事件</h3><p>首先，鼠标支持以下事件：</p><ul><li>EVENT_MOUSEMOVE 鼠标移动 Mouse Move</li><li>EVENT_LBUTTONDOWN 鼠标左键点击 Left Button Down</li><li>EVENT_RBUTTONDOWN 鼠标右键点击 Right Button Down</li><li>EVENT_MBUTTONDOWN 鼠标中键点击 Middle Button Down</li><li>EVENT_LBUTTONUP 鼠标左键抬起 Left Button Up</li><li>EVENT_RBUTTONUP 鼠标右键抬起 Right Button Up</li><li>EVENT_MBUTTONUP 鼠标中键抬起 Middle Button Up</li><li>EVENT_LBUTTONDBLCLK 鼠标左键双击 Left Button Double Click</li><li>EVENT_RBUTTONDBLCLK 鼠标右键双击 Right Button Double Click</li><li>EVENT_MBUTTONDBLCLK 鼠标中键双击 Middle Button Double Click</li></ul><h3 id="3-2-鼠标支持的事件标志"><a href="#3-2-鼠标支持的事件标志" class="headerlink" title="3.2 鼠标支持的事件标志"></a>3.2 鼠标支持的事件标志</h3><ul><li>EVENT_FLAG_LBUTTON 左键正在按下</li><li>EVENT_FLAG_RBUTTON 右键正在被按下</li><li>EVENT_FLAG_MBUTTON 中键正在被按下</li><li>EVENT_FLAG_CTRLKEY CTRL键正在被按下</li><li>EVENT_FLAG_SHIFTKEY SHIFT键正在被按下</li><li>EVENT_FLAG_ALTKEY ALT键正在被按下</li></ul><h3 id="3-3-鼠标事件回调函数及其设置"><a href="#3-3-鼠标事件回调函数及其设置" class="headerlink" title="3.3 鼠标事件回调函数及其设置"></a>3.3 鼠标事件回调函数及其设置</h3><p>将通过一个案例来了解该函数的具体使用，在该案例中，只有当鼠标在移动，并且Ctrl和鼠标左键同时按下时，才打印出相关信息：</p><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#That is actually what callback function define</span><span class="token keyword">def</span> <span class="token function">onMouse</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE <span class="token keyword">and</span> flags <span class="token operator">==</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>EVENT_FLAG_LBUTTON<span class="token operator">|</span>cv2<span class="token punctuation">.</span>EVENT_FLAG_CTRLKEY <span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#Judged, then in this occasion, do something</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token comment"># Set the callback function</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> onMouse<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cpp：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//That is actually what callback function define</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onMouse</span><span class="token punctuation">(</span> <span class="token keyword">int</span> event<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token operator">==</span>EVENT_MOUSEMOVE<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>flags<span class="token operator">==</span><span class="token punctuation">(</span>EVENT_FLAG_LBUTTON<span class="token operator">|</span>EVENT_FLAG_CTRLKEY<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//Judged, then in this occasion, do something</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>flags<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">setMouseCallback</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> onMouse<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在回调函数中：</p><ul><li>event 鼠标事件类型，详见3.1中鼠标支持的事件</li><li>x 鼠标当前在窗口Windows下的x坐标</li><li>y 鼠标在当前窗口Windows下的y坐标</li><li>flags 鼠标事件发生过程值中的一些其他事件标志/状态，详见3.2中鼠标支持的事件标志</li><li>param 用户自定义的参数</li></ul><h2 id="4-HighGUI滑动条组件"><a href="#4-HighGUI滑动条组件" class="headerlink" title="4 HighGUI滑动条组件"></a>4 HighGUI滑动条组件</h2><p>将通过一个案例来演示如何使用滑动组件，在本案例中，首先通过简单案例演示滑动组件的基本使用，接着，来做一个彩色画布。</p><h3 id="4-1-python3实现"><a href="#4-1-python3实现" class="headerlink" title="4.1 python3实现"></a>4.1 python3实现</h3><p>简单案例，先演示如何使用滑动组件。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token comment"># 创建窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span class="token comment"># 定义全局变量</span>value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 定义回调函数</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> value    r_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">)</span>    g_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">)</span>    b_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">)</span>    value <span class="token operator">=</span> <span class="token punctuation">(</span>r_value<span class="token punctuation">,</span> g_value<span class="token punctuation">,</span> b_value<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Update Value, value ={}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 创建滑动组件</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span><span class="token comment"># 设置默认值</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token comment"># 等待按键按下</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 销毁窗口</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行后的GUI界面如下图所示：<br><img src="http://pic.huangruimin.tech/20191029113000.png"><br>下面进阶案例，演示如何实现可变色画布</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npcanvas <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 更新图片，在更新颜色回调函数中调用</span><span class="token keyword">def</span> <span class="token function">updateImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> color    canvas<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token comment"># 更新颜色回调函数</span><span class="token keyword">def</span> <span class="token function">updateColor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> color    r_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    g_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    b_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    color <span class="token operator">=</span> <span class="token punctuation">(</span>b_value<span class="token punctuation">,</span>g_value<span class="token punctuation">,</span>r_value<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Update Value, value={}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">)</span>    updateImage<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 新建窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 创建滑条，并设置回调函数</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token comment"># 设置滑条初始化位置</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"进入RGB滑块实验， 键盘摁q退出程序"</span><span class="token punctuation">)</span><span class="token comment"># 首次初始化窗口的色块</span><span class="token comment"># 后面的更新 都是由getTrackbarPos产生变化而触发</span>updateImage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">continue</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行后，运行结果如下图所示，拖动滑动条即可进行调色：<br><img src="http://pic.huangruimin.tech/20191029130546.png"></p><h3 id="4-2-cpp实现"><a href="#4-2-cpp实现" class="headerlink" title="4.2 cpp实现"></a>4.2 cpp实现</h3><p>其cpp实现如下所示，其中像素点的操作没有Python中Numpy的操作那么便捷，采用的是容器访问像素点。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WINDOW_NAME</span> <span class="token string">"image"</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> r_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">int</span> g_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">int</span> b_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span>Mat <span class="token function">canvas</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span>CV_8UC3<span class="token punctuation">,</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">updateColor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> canvas<span class="token punctuation">.</span>rows<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> canvas<span class="token punctuation">.</span>cols<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>b_value<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>g_value<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>r_value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Red"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>r_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Green"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>g_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Blue"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码执行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029151245.png"></p><h2 id="5-用滑条模拟按键"><a href="#5-用滑条模拟按键" class="headerlink" title="5 用滑条模拟按键"></a>5 用滑条模拟按键</h2><p>在OpenCV中，按键组件是不存在的，一种比较主要的实现按键的方法是采用滑条组件来实现按键。</p><p>首先演示其实现的Python代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Button Pressed!!'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Do Something'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        do_something<span class="token punctuation">(</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其相应的实现效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029153207.png"><br>相应的，其cpp代码如下所示:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WINDOW_NAME</span> <span class="token string">"image_win"</span></span><span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Button Pressed"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Do Something"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>position <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTrackbarPos</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">,</span>WINDOW_NAME<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实现效果同Python。</p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_ROI、绘图等常用API</title>
      <link href="/2018/02/04/rpi-opencv-roi-hui-tu-deng-chang-yong-api/"/>
      <url>/2018/02/04/rpi-opencv-roi-hui-tu-deng-chang-yong-api/</url>
      
        <content type="html"><![CDATA[<p>本章接上一章之后，来介绍图像处理中的其它一些操作，主要包括ROI和绘图，这些操作在实际处理中也经常用到。</p><h2 id="1-ROI"><a href="#1-ROI" class="headerlink" title="1 ROI"></a>1 ROI</h2><p>ROI(Region Of Interest)是指需要处理的那一部分图像，本节将通过一个示例讲解通过鼠标选中图形ROI区域。</p><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>在Python中，主要涉及到selectROI函数，其函数原型如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">rect <span class="token operator">=</span> cv2<span class="token punctuation">.</span>selectROI<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> showCrosshair<span class="token punctuation">,</span> fromCenter<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>“image” : winName 窗口名称</p></li><li><p>img : 目标想要裁剪的图像</p></li><li><p>showCrosshair : 是否显示网格</p></li></ul><blockquote><p>True：显示网格</p></blockquote><blockquote><p>False：只有矩形</p></blockquote><ul><li>fromCenter:</li></ul><blockquote><p>True：第一次选中的点为矩形的中心.</p></blockquote><blockquote><p>False：第一次选中的点为矩形的左上角.</p></blockquote><p>返回的是一个tuple值, 代表矩形区域. 分别代表矩形左上角坐标 (x, y) 与矩形宽度w跟高度h</p><blockquote><p>(x, y, w, h) = rect</p></blockquote><p>使用numpy切片功能的时候要注意, 第一维指的是行数, 第二维度指的是列数.</p><blockquote><p>imCrop = img[y : y+h, x:x+w]</p></blockquote><p>接下来，直接上源码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span><span class="token comment"># create a window</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span> cv2<span class="token punctuation">.</span>WINDOW_NORMAL <span class="token operator">|</span> cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_roi'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span> cv2<span class="token punctuation">.</span>WINDOW_NORMAL <span class="token operator">|</span> cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># whether to show crosschair </span>showCrosshair <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># if true, then from the center</span><span class="token comment"># if false, then from the left-top</span>fromCenter <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># then let use to choose the ROI </span>rect <span class="token operator">=</span> cv2<span class="token punctuation">.</span>selectROI<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> showCrosshair<span class="token punctuation">,</span> fromCenter<span class="token punctuation">)</span><span class="token comment"># get the ROI</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span> <span class="token operator">=</span> rect<span class="token comment"># Crop image</span>imCrop <span class="token operator">=</span> img<span class="token punctuation">[</span>y <span class="token punctuation">:</span> y<span class="token operator">+</span>h<span class="token punctuation">,</span> x<span class="token punctuation">:</span>x<span class="token operator">+</span>w<span class="token punctuation">]</span><span class="token comment"># Display cropped image</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image_roi'</span><span class="token punctuation">,</span> imCrop<span class="token punctuation">)</span><span class="token comment"># write image to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image_roi.png'</span><span class="token punctuation">,</span> imCrop<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下图所示：<br><img src="http://huangruimin.club//20190905024424.png"></p><p>运行程序后，按住鼠标左键选中ROI，按下Enter键裁剪得到需要的ROI区域，并显示到另一个窗口中，如果需要取消ROI区域选择，请按下C键。</p><h3 id="1-2-C"><a href="#1-2-C" class="headerlink" title="1.2 C++"></a>1.2 C++</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;opencv2/opencv.hpp&gt;#include&lt;opencv2/highgui/highgui.hpp&gt;#include&lt;opencv2/imgproc/imgproc.hpp&gt;using namespace std;using namespace cv;int main(){Mat img,imCrop;Rect rect;img = imread("color.jpg");// create a windownamedWindow("image", WINDOW_NORMAL | WINDOW_FREERATIO);namedWindow("image_roi", WINDOW_NORMAL | WINDOW_FREERATIO);imshow("image",img);// whether to show crosschair bool showCrosshair = true;// if true, then from the center// if false, then from the left-topbool fromCenter = false;// then let use to choose the ROI rect = selectROI("image", img, showCrosshair, fromCenter);// get the ROI and crop the imageimCrop = img(rect);// Display cropped imageimshow("image_roi",imCrop);// write image to local diskimwrite("image_roi.jpg", imCrop);waitKey(0);return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其C++源码运行效果同Python源码。</p><h2 id="2-绘图"><a href="#2-绘图" class="headerlink" title="2 绘图"></a>2 绘图</h2><p>接下来将讲解OpenCV中绘图的使用，在计算机视觉领域，使用绘图功能是一个非常高频的需求，例如，在颜色识别，人脸识别，物体识别中，识别到具体的物体，可以将其打印出来，也可以直接在原图中绘制一个圆形等，显而易见，后者效果更好。</p><p>注意，OpenCV可以绘制的图形，其实matplotlib也都可以，OpenCV之所以还提供一个绘图功能是因为OpenCV绘图是直接在原图上进行绘图的，并且使用的是默认的BGR色彩空间，所以，OpenCV默认的绘图功能会更加方便一些。</p><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><p>接下来首先介绍在OpenCV中常见的几何图形绘制与文本绘制，例如，直线，矩形，圆形，多边形，椭圆等。</p><ul><li>初始化画布</li></ul><p>在Python中，图像数据是通过numpy的ndarray存储的，首先，应当初始化一个ndarra数据结构用于存储图像：<br>具体处理如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">InitPaint</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    paint <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">"uint8"</span><span class="token punctuation">)</span>    paint<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    <span class="token keyword">return</span> paint<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>绘制直线</li></ul><p>函数的函数原型：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制矩形</li></ul><p>函数原型：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制圆形</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制多边形</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pts<span class="token operator">=</span><span class="token punctuation">[</span>points<span class="token punctuation">]</span><span class="token punctuation">,</span> isClosed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制椭圆</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span>center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> startAngle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> endAngle<span class="token operator">=</span><span class="token number">360</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制文字</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">font <span class="token operator">=</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXcv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"HelloWorld"</span><span class="token punctuation">,</span> org<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontFace<span class="token operator">=</span>font<span class="token punctuation">,</span> fontScale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lineType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>样例演示</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npCOLOR_MAP <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"blue"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"green"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"red"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"white"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">InitPaint</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"white"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    paint <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">"uint8"</span><span class="token punctuation">)</span>    paint<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    <span class="token keyword">return</span> paintpaint <span class="token operator">=</span> InitPaint<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"blue"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span> COLOR_MAP<span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>points <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>points <span class="token operator">=</span> points<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> pts<span class="token operator">=</span><span class="token punctuation">[</span>points<span class="token punctuation">]</span><span class="token punctuation">,</span> isClosed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>img<span class="token operator">=</span>paint<span class="token punctuation">,</span>center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> startAngle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> endAngle<span class="token operator">=</span><span class="token number">360</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>font <span class="token operator">=</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXline <span class="token operator">=</span> cv2<span class="token punctuation">.</span>LINE_AAcv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token operator">=</span>paint<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"Hello"</span><span class="token punctuation">,</span> org<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontFace<span class="token operator">=</span>font<span class="token punctuation">,</span> fontScale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lineType<span class="token operator">=</span>line<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Paint'</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该程序运行后，将显示如下所示图像：</p><p><img src="http://huangruimin.club//20190905110410.png"></p><h3 id="2-2-C"><a href="#2-2-C" class="headerlink" title="2.2 C++"></a>2.2 C++</h3><p>其C++源码类似如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;opencv2/opencv.hpp&gt;#include&lt;opencv2/highgui/highgui.hpp&gt;#include&lt;opencv2/imgproc/imgproc.hpp&gt;using namespace std;using namespace cv;Mat InitPaint(int width, int height, Scalar color){Mat paint = Mat(width, height,CV_8UC3,color);return paint;}int main(){Mat paint = InitPaint(300,300,Scalar(255,255,255));line(paint, Point(0, 0), Point(300, 300), Scalar(0,255,0));circle(paint, Point(150, 150), 50, Scalar(0,255,0));circle(paint, Point(150, 150), 30, Scalar(255,0,0), -1);rectangle(paint, Point(10, 10), Point(60, 60),Scalar(0,0,255));Point points[1][4];points[0][0] = Point(100,50);    points[0][1] = Point(200,200);    points[0][2] = Point(270,200);    points[0][3] = Point(290,100);const Point* pts[] = {points[0]};int npt[] = {4}; polylines(paint, pts, npt,1,true, Scalar(0,0,255), 3);ellipse(paint,Point(256,256), Size(40,20), 0, 0, 360, Scalar(100, 200, 0), -1);int font = FONT_HERSHEY_SIMPLEX;int line = LINE_AA;putText(paint, "Hello", Point(10, 250), font, 2.0, Scalar(0, 0, 255), 1,line);imshow("Paint", paint);waitKey(0);return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其C++源码运行效果同Python源码。</p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_图像与视频载入、显示、输出</title>
      <link href="/2018/02/03/rpi-opencv-tu-xiang-yu-shi-pin-zai-ru-xian-shi-shu-chu/"/>
      <url>/2018/02/03/rpi-opencv-tu-xiang-yu-shi-pin-zai-ru-xian-shi-shu-chu/</url>
      
        <content type="html"><![CDATA[<p>本章，在介绍了图像的基本数据结构之后，来学习图像的一些基本操作，包括图像的载入、显示、ROI、绘图、输出等，这些操作是后续进行图像处理的必备工具。</p><h2 id="1-图像的载入-显示，与输出"><a href="#1-图像的载入-显示，与输出" class="headerlink" title="1 图像的载入,显示，与输出"></a>1 图像的载入,显示，与输出</h2><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>现在通过一个demo来认识Python3中图像的载入，显示，与输出操作：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># default read as BGR picture</span>img1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span><span class="token comment"># show it in the window</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image1'</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token comment"># write it to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image1.jpg'</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token comment"># read as grayscale picture</span>img2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token comment"># show it in the window</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image2'</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token comment"># write it to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image2.jpg'</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际运行效果如下图所示，在运行后，在python文件路径下可找到image1.jpg，image2.jpg文件，且image2.jpg是灰度图像。</p><p><img src="http://pic.huangruimin.tech/20190903024828.png"></p><h3 id="1-2-cpp"><a href="#1-2-cpp" class="headerlink" title="1.2 cpp"></a>1.2 cpp</h3><p>cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>Mat img1<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image1"</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"image1.jpg"</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat img2<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">,</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image2"</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"image2.jpg"</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-视频，摄像头的载入，显示"><a href="#2-视频，摄像头的载入，显示" class="headerlink" title="2 视频，摄像头的载入，显示"></a>2 视频，摄像头的载入，显示</h2><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><p>现在通过一个demo来理解Python3中视频，摄像头的载入与显示操作,且在该操作中，包含了摄像头的翻转，摄像头开窗定义等。</p><p>同时还包含了视频的载入，显示操作；注意，OpenCV只支持读取avi格式的视频，并且不包含音频。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2capCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> capCamera<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>capVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'demo.avi'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> capVideo<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this video"</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># set the image width and height</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span class="token comment">## image flip setup</span><span class="token comment"># * horizontal flip:  flipCode = 1</span><span class="token comment"># * Vertical flip:  flipCode = 0</span><span class="token comment"># * horizontal &amp; Vertical flip:  flipCode = -1</span>flipCode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># handle for the camera</span>    ret<span class="token punctuation">,</span> FrameCamera <span class="token operator">=</span> capCamera<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    FrameCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>FrameCamera<span class="token punctuation">,</span> flipCode<span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'camera'</span><span class="token punctuation">,</span>FrameCamera<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        <span class="token comment"># handle for the video</span>    ret<span class="token punctuation">,</span> FrameVideo <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'video'</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span>        FramVideoGray <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>FrameVideo<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'grayVideo'</span><span class="token punctuation">,</span>FramVideoGray<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        <span class="token comment"># handle for exit</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>capCamera<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190904020442.png"></p><h3 id="2-2-cpp"><a href="#2-2-cpp" class="headerlink" title="2.2 cpp"></a>2.2 cpp</h3><p>其cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>VideoCapture <span class="token function">capCamera</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>VideoCapture <span class="token function">capVideo</span><span class="token punctuation">(</span><span class="token string">"demo.avi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this video"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Mat FrameCamera<span class="token punctuation">,</span>FrameVideo<span class="token punctuation">;</span><span class="token comment">// image flip setup</span><span class="token comment">// horizontal flip:  flipCode = 1</span><span class="token comment">// Vertical flip:  flipCode = 0</span><span class="token comment">// horizontal &amp; Vertical flip:  flipCode = -1</span><span class="token keyword">int</span> flipCode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//read by operator "&gt;&gt;"</span>capCamera<span class="token operator">&gt;&gt;</span>FrameCamera<span class="token punctuation">;</span><span class="token function">flip</span><span class="token punctuation">(</span>FrameCamera<span class="token punctuation">,</span>FrameCamera<span class="token punctuation">,</span>flipCode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"camera"</span><span class="token punctuation">,</span>FrameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//read by function read</span><span class="token keyword">bool</span> ret <span class="token operator">=</span> capVideo<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"video"</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>FrameVideo<span class="token punctuation">,</span>FrameVideo<span class="token punctuation">,</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"grayVideo"</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capVideo<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">destroyAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-视频，摄像头的输出"><a href="#3-视频，摄像头的输出" class="headerlink" title="3 视频，摄像头的输出"></a>3 视频，摄像头的输出</h2><p>本节主要讲解视频，摄像头的输出，即，将视频流数据保存到本地。</p><p>OpenCV只支持生成avi格式的视频，且生成的视频文件不能大于2G，且不能添加音频。</p><h3 id="3-1-Python3"><a href="#3-1-Python3" class="headerlink" title="3.1 Python3"></a>3.1 Python3</h3><p>关于视频输出，主要用到VideoWriter对象，而视频的输入，主要用到VideoCapture对象，因此，视频的输出(视频录制)的主要过程就是将VideoCapture中读入的图片写入到VideoWriter当中，在给出demo程序之前，先给出VideoWrite的使用方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Encode the video format as MJPG</span>fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span><span class="token comment"># Config the framrate to 20 frame per second</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token comment"># Config the Window Size by camera</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span><span class="token comment"># Create the VideoWrite Object</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先，在写入视频的时候，必须先指定视频的编码格式，这里我们指定为MJPG格式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着，须指定视频的帧率跟窗口大小。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Config the framrate to 20 frame per second</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token comment"># Config the Window Size by camera</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，初始化VideoWriter的时候，将这些参数传入到其中。并指定输出视频文件的名称。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Create the VideoWrite Object</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来，将给出源码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#--------------------------------</span><span class="token comment"># set for camera</span>capCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span><span class="token number">640</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span><span class="token number">480</span><span class="token punctuation">)</span><span class="token comment"># set for camera output</span>fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token comment">#--------------------------------</span><span class="token comment">#--------------------------------</span><span class="token comment"># set for video</span>capVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'demo1.avi'</span><span class="token punctuation">)</span><span class="token comment"># set for video output</span>fourcc <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FOURCC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span>fps <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FPS<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span>outVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputVideo.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token comment">#--------------------------------</span>choose <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input C or V:\n"</span><span class="token punctuation">)</span><span class="token comment"># Process for camera</span><span class="token keyword">if</span> choose <span class="token operator">==</span> <span class="token string">'C'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span>frameCamera <span class="token operator">=</span> capCamera<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        outCamera<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frameCamera<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"frameCamera"</span><span class="token punctuation">,</span> frameCamera<span class="token punctuation">)</span>        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token comment"># Process for video</span><span class="token keyword">elif</span> choose <span class="token operator">==</span> <span class="token string">'V'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span>frameVideo <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret<span class="token punctuation">:</span>            outVideo<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"framVideo"</span><span class="token punctuation">,</span> frameVideo<span class="token punctuation">)</span>        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Please input right order"</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行该代码后，将首先提示用户输入选项C(Camera)或V(Video)：当输入C之后，将打开摄像头，录制视频，并将视频保存到本地；当输入V之后，将打开本地的视频，将本地的视频重新写入到本地。</p><h3 id="3-2-cpp"><a href="#3-2-cpp" class="headerlink" title="3.2 cpp"></a>3.2 cpp</h3><p>其cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//set for camera</span><span class="token comment">//---------------------------------------</span>VideoCapture <span class="token function">capCamera</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fourcc <span class="token operator">=</span> <span class="token class-name">VideoWriter</span><span class="token double-colon punctuation">::</span><span class="token function">fourcc</span><span class="token punctuation">(</span><span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'P'</span><span class="token punctuation">,</span><span class="token char">'G'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//double fps = capCamera.get(CAP_PROP_FPS);</span><span class="token keyword">double</span> fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token punctuation">;</span>Size frameSize <span class="token operator">=</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,%d\r\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VideoWriter outCamera<span class="token punctuation">;</span>outCamera<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"outputCamera.avi"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//---------------------------------------</span><span class="token comment">//set for video</span><span class="token comment">//---------------------------------------</span>VideoCapture <span class="token function">capVideo</span><span class="token punctuation">(</span><span class="token string">"demo.avi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this video"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>fourcc <span class="token operator">=</span> <span class="token class-name">VideoWriter</span><span class="token double-colon punctuation">::</span><span class="token function">fourcc</span><span class="token punctuation">(</span><span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'P'</span><span class="token punctuation">,</span><span class="token char">'G'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//fps = capCVideo.get(CAP_PROP_FPS);</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token punctuation">;</span>frameSize <span class="token operator">=</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,%d\r\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VideoWriter outVideo<span class="token punctuation">;</span>outVideo<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"outputVideo.avi"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//---------------------------------------</span><span class="token keyword">char</span> choose<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please input C or V \r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>choose<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat frameCamera<span class="token punctuation">,</span> frameVideo<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token char">'C'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>capCamera<span class="token operator">&gt;&gt;</span>frameCamera<span class="token punctuation">;</span>outCamera<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>frameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"frameCamera"</span><span class="token punctuation">,</span> frameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token char">'V'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">bool</span> ret <span class="token operator">=</span> capVideo<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">{</span>outVideo<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"framVideo"</span><span class="token punctuation">,</span> frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please input right order"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capVideo<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">destroyAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其cpp源码运行效果同Python源码。</p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_摄像头的基本使用</title>
      <link href="/2018/02/02/rpi-opencv-she-xiang-tou-de-ji-ben-shi-yong/"/>
      <url>/2018/02/02/rpi-opencv-she-xiang-tou-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍计算机视觉中最核心传感器-摄像头的基本使用，主要讲解了CSI摄像头，USB摄像头，网络摄像头的基本使用。</p><h2 id="1-CSI摄像头"><a href="#1-CSI摄像头" class="headerlink" title="1 CSI摄像头"></a>1 CSI摄像头</h2><p>首先将讲解CSI摄像头的使用：</p><p><img src="http://pic.huangruimin.tech/20190831153253.png"></p><h3 id="1-1-picamera"><a href="#1-1-picamera" class="headerlink" title="1.1 picamera"></a>1.1 picamera</h3><p>树莓派自带的摄像头为CSI摄像头，在树莓派平台中，发行版的Raspbian默认安装了树莓派平台的picamera:</p><p><a href="https://picamera.readthedocs.io/en/release-1.13/index.html">相关官方文档链接</a></p><p>执行该脚本将录制一段10秒的视频到本地：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> picameracamera <span class="token operator">=</span> picamera<span class="token punctuation">.</span>PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>start_recording<span class="token punctuation">(</span><span class="token string">'my_video.h264'</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>wait_recording<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>stop_recording<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但由于picamera输出的数据是RGB格式的，需要通过Numpy转换为BGR格式，代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">import</span> picamera<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">with</span> picamera<span class="token punctuation">.</span>PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> camera<span class="token punctuation">:</span>    camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span>    camera<span class="token punctuation">.</span>framerate <span class="token operator">=</span> <span class="token number">24</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    image <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">240</span> <span class="token operator">*</span> <span class="token number">320</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>    <span class="token comment"># save as bgr format for OpenCV</span>    camera<span class="token punctuation">.</span>capture<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token string">'bgr'</span><span class="token punctuation">)</span>    image <span class="token operator">=</span> image<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，picamera 也提供了PIRGBArray对象，用来保存RGB 图像数据,下面将在capture_continuous函数中，不断地把RGB转换成BGR图像，供OpenCV显示，以形成视频流。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> picamera<span class="token punctuation">.</span>array <span class="token keyword">import</span> PiRGBArray<span class="token keyword">from</span> picamera <span class="token keyword">import</span> PiCamera<span class="token keyword">import</span> time<span class="token keyword">import</span> cv2<span class="token comment"># initialize the camera and grab a reference to the raw camera capture</span>camera <span class="token operator">=</span> PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>framerate <span class="token operator">=</span> <span class="token number">32</span>rawCapture <span class="token operator">=</span> PiRGBArray<span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token comment"># allow the camera to warmup</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token comment"># capture frames from the camera</span><span class="token keyword">for</span> frame <span class="token keyword">in</span> camera<span class="token punctuation">.</span>capture_continuous<span class="token punctuation">(</span>rawCapture<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">"bgr"</span><span class="token punctuation">,</span> use_video_port<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    image <span class="token operator">=</span> frame<span class="token punctuation">.</span>array    <span class="token comment"># show the frame</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Frame"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>    <span class="token comment"># prepare for net stream</span>    rawCapture<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但由于picamera为树莓派或兼容树莓派平台专用的库，且仅能供树莓派使用，下面将介绍更为通用的使用方法。</p><h3 id="1-2-V4L2"><a href="#1-2-V4L2" class="headerlink" title="1.2 V4L2"></a>1.2 V4L2</h3><p>目前,CSI摄像头可通过picamera等库进行调用，但在Raspbian系统中，并不属于一个video设备而存在，若想将CSI摄像头作为一个视频设备文件使用，则要开启V4L2(Video for Linux 2)模块以开启：</p><p>开启方法如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在末尾添加一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcm2835-v4l2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时，CSI摄像头便成为了一个video设备，此时在中断执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-ltrh</span> /dev/video*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>便可查看到video设备，其中video0便是CSI摄像头：</p><p><img src="http://pic.huangruimin.tech/20190831152421.png"></p><p>该video设备可同时供Python与cpp调用，具体使用请参考《树莓派OpenCV系列教程1：开发环境搭建》的例程。</p><h2 id="2-USB摄像头"><a href="#2-USB摄像头" class="headerlink" title="2 USB摄像头"></a>2 USB摄像头</h2><p>树莓派除了支持CSI摄像头外，同样也支持USB摄像头：</p><p><img src="http://pic.huangruimin.tech/20190831153829.png"></p><p>若采用USB摄像头，若摄像头本身免驱，接入树莓派后，将直接识别的video设备，在/dev下可找到对应的video设备，在中断，输入命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-ltrh</span> /dev/video*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可查询到新接入的video设备。</p><p>但使用Python，cpp使用摄像头，区分不同的摄像头时：</p><p>cpp：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>python：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传入参数0代表使用CSI摄像头，传入其它参数代表使用其它video序号对应的USB摄像头。<br>具体使用请参考《1.OpenCV开发环境搭建》的例程。</p><h2 id="3-网络摄像头"><a href="#3-网络摄像头" class="headerlink" title="3 网络摄像头"></a>3 网络摄像头</h2><p>除了使用CSI摄像头，USB摄像头外，还可以将手机变成一个IP摄像头，具体方法如下：</p><p>在手机应用市场中，搜索这款名为IP摄像头的APP，图表如下：</p><p><img src="http://pic.huangruimin.tech/20190831160527.png"></p><p>安装好后，连接wifi，确保树莓派和手机处在同一局域网内，手机打开IP摄像头软件，同时点击打开IP摄像头服务器，即可将手机变成一个IP摄像头。如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190831161321.png"></p><p>此时,在浏览器中打开该IP地址，输入用户名:admin，密码:admin，即可浏览摄像头画面：</p><p><img src="http://pic.huangruimin.tech/20190831161042.png"></p><p>此时说明手机成为了一个IP摄像头，此摄像头可供OpenCV调用。</p><p>OpenCV调用IP摄像头的源程序如下：</p><h3 id="3-1-Python3"><a href="#3-1-Python3" class="headerlink" title="3.1 Python3"></a>3.1 Python3</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token triple-quoted-string string">'''Waveshare OpenCV Tutorial01_IP_Camera.pyA demo to show whether The OpenCV and IP camera is well installed'''</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OpenCV Version:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 0: use CSI camera,1：use USB camera</span>    ip_camera_url <span class="token operator">=</span> <span class="token string">'http://admin:admin@192.168.10.215:8081'</span>    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>ip_camera_url<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span> FrameImage <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Camera Capture'</span><span class="token punctuation">,</span>FrameImage<span class="token punctuation">)</span>            <span class="token comment">#Press Q to quit</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>__doc__<span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Release resource</span>    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20190831172850.png"></p><h3 id="3-2-cpp"><a href="#3-2-cpp" class="headerlink" title="3.2 cpp"></a>3.2 cpp</h3><p>相应地，cpp程序读取网络摄像头的程序如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Waveshare OpenCV Tutorial"</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"00_Test_OpenCV"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"A demo to show whether The OpenCV and IP camera is well installed"</span> <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"OpenCV Version:"</span> <span class="token operator">&lt;&lt;</span> CV_VERSION <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token keyword">const</span> string ip_camera_url <span class="token operator">=</span> <span class="token string">"http://admin:admin@192.168.10.215:8081"</span><span class="token punctuation">;</span>VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span>ip_camera_url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mat FrameImage<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cap<span class="token operator">&gt;&gt;</span>FrameImage<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Camera Capture"</span><span class="token punctuation">,</span>FrameImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Press Q to quit</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20190831181427.png"></p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_开发环境搭建</title>
      <link href="/2018/02/01/rpi-opencv-kai-fa-huan-jing-da-jian/"/>
      <url>/2018/02/01/rpi-opencv-kai-fa-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍OpenCV开发环境的搭建，搭建的版本为OpenCV4.1.0，同时支持Python3和cpp，在搭建好后，将通过一个cpp和Python的Demo打开CSI摄像头来测试开发环境是否搭建完成。</p><h2 id="1-烧录系统"><a href="#1-烧录系统" class="headerlink" title="1 烧录系统"></a>1 烧录系统</h2><p>本教程采用的镜像是树莓派官方2019年7月10日发布的发行版镜像，代号Buster，如下图所示：<br><img src="http://pic.huangruimin.tech/20190821152022.png"></p><h2 id="2-基本设置"><a href="#2-基本设置" class="headerlink" title="2 基本设置"></a>2 基本设置</h2><h3 id="2-1-把目录扩展到整个TF卡"><a href="#2-1-把目录扩展到整个TF卡" class="headerlink" title="2.1 把目录扩展到整个TF卡"></a>2.1 把目录扩展到整个TF卡</h3><p>本次搭建OpenCV开发环境，至少选择16G的TF卡，为了充分利用TF的存储空间，需要将TF卡空间扩展到整个TF卡。<br>在命令行输入命令，进入树莓派配置界面，用上下左右切换光标位置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> raspi-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20190830130336.png"><br><img src="http://pic.huangruimin.tech/20190830130406.png"></p><h3 id="2-2-开启摄像头"><a href="#2-2-开启摄像头" class="headerlink" title="2.2 开启摄像头"></a>2.2 开启摄像头</h3><p>作为开源计算机视觉库，主要进行图像处理，对摄像头图像数据进行处理是主要需求，因此，开启摄像头是很有必要的。</p><h4 id="2-2-1-启用摄像头"><a href="#2-2-1-启用摄像头" class="headerlink" title="2.2.1 启用摄像头"></a>2.2.1 启用摄像头</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> raspi-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入Interfacing Options-&gt;Camera-&gt;Yes，即可启用摄像头。<br>检测摄像头是否正常，可以使用以下命令进行检测：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">raspivid <span class="token parameter variable">-t</span> <span class="token number">0</span> <span class="token parameter variable">-cs</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-2-2-准备视频流设备"><a href="#2-2-2-准备视频流设备" class="headerlink" title="2.2.2 准备视频流设备"></a>2.2.2 准备视频流设备</h4><p>在OpenCV中，若要读取摄像头数据，需要开启v4l2(video for linux 2)，开启后，摄像头设备文件为/dev/video0，OpenCV将从该文件中读取视频流文件。</p><p>开启方法如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在末尾添加一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcm2835-v4l2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-更换软件源"><a href="#2-3-更换软件源" class="headerlink" title="2.3 更换软件源"></a>2.3 更换软件源</h3><p>鉴于国内网络环境下载各大镜像，软件包速度慢的问题，需要更换软件源，以防下载慢，且在本教程中，统一更换为清华源。</p><h4 id="2-3-1-更换树莓派软件源"><a href="#2-3-1-更换树莓派软件源" class="headerlink" title="2.3.1 更换树莓派软件源"></a>2.3.1 更换树莓派软件源</h4><p>包括系统源与系统更新源，操作方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 编辑 `/etc/apt/sources.list` 文件，删除原文件所有内容，用以下内容取代：</span>deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contribdeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib<span class="token comment"># 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：</span>deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图所示：<br><img src="http://pic.huangruimin.tech/20190830132453.png"><br><img src="http://pic.huangruimin.tech/20190830132542.png"></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">清华软件源Raspbian官方说明</a></p><h4 id="2-3-2-更换pip软件源"><a href="#2-3-2-更换pip软件源" class="headerlink" title="2.3.2 更换pip软件源"></a>2.3.2 更换pip软件源</h4><p>为加速Python pip安装速度，特更改Python软件源，操作方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pip <span class="token parameter variable">-U</span>pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">清华软件源Pypi官方说明</a></p><h3 id="2-4-重启"><a href="#2-4-重启" class="headerlink" title="2.4 重启"></a>2.4 重启</h3><p>以上步骤均完成之后，需要进行重启才生效，重启命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-安装OpenCV所需要的库"><a href="#3-安装OpenCV所需要的库" class="headerlink" title="3 安装OpenCV所需要的库"></a>3 安装OpenCV所需要的库</h2><h3 id="3-1-安装numpy"><a href="#3-1-安装numpy" class="headerlink" title="3.1 安装numpy"></a>3.1 安装numpy</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pip3 <span class="token function">install</span> numpy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2-安装OpenCV所需的依赖"><a href="#3-2-安装OpenCV所需的依赖" class="headerlink" title="3.2 安装OpenCV所需的依赖"></a>3.2 安装OpenCV所需的依赖</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential <span class="token function">git</span> cmake pkg-config <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libjpeg8-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libtiff5-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libjasper-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libpng12-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libavcodec-dev libavformat-dev libswscale-dev libv4l-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libgtk2.0-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libatlas-base-dev gfortran <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-下载OpenCV"><a href="#4-下载OpenCV" class="headerlink" title="4 下载OpenCV"></a>4 下载OpenCV</h2><p>本次安装的OpenCV版本为OpenCV 4.1.0，<a href="https://opencv.org/releases/">官方链接地址</a></p><p>需要下载包括OpenCV与OpenCV_Contrib两个仓库</p><p>OpenCV_4.1.0仓库：<a href="https://github.com/opencv/opencv/tree/4.1.0">Github地址</a></p><p>OpenCV_Contrib_4.1.0仓库：<a href="https://github.com/opencv/opencv_contrib/tree/4.1.0">Github地址</a></p><p>鉴于下载速度慢，建议采用Git Bash下载：</p><p>下载命令如下，注意添加–recursive及-b 4.1.0</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4.1</span>.0 <span class="token parameter variable">--recursive</span> https://github.com/opencv/opencv.git<span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4.1</span>.0 <span class="token parameter variable">--recursive</span> https://github.com/opencv/opencv_contrib.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下载后，建议采用Fillzilla或者U盘等方法把文件传输到树莓派中。</p><p><img src="http://pic.huangruimin.tech/20190830153146.png"></p><p>当然，也可以直接在树莓派命令行窗口执行以上命令进行下载，但请确保网络稳定。</p><h2 id="5-配置Cmake"><a href="#5-配置Cmake" class="headerlink" title="5 配置Cmake"></a>5 配置Cmake</h2><p>Cmake是一款跨平台的编译工具，经过配置，可输出适配于树莓派平台的Makefile</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Downloads/opencv-4.1.0<span class="token function">mkdir</span> build<span class="token builtin class-name">cd</span> build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置Cmake，执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cmake <span class="token parameter variable">-D</span> <span class="token assign-left variable">CMAKE_BUILD_TYPE</span><span class="token operator">=</span>RELEASE <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">CMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/usr/local <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">INSTALL_C_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">INSTALL_PYTHON_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">OPENCV_EXTRA_MODULES_PATH</span><span class="token operator">=</span>/home/pi/Downloads/opencv-4.1.0/opencv_contrib-3.4.0/modules <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">BUILD_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">WITH_LIBV4L</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON3_EXECUTABLE</span><span class="token operator">=</span>/usr/bin/python3.7 <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON_INCLUDE_DIR</span><span class="token operator">=</span>/usr/include/python3.7 <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON_LIBRARY</span><span class="token operator">=</span>/usr/lib/arm-linux-gnueabihf/libpython3.7m.so <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON3_NUMPY_INCLUDE_DIRS</span><span class="token operator">=</span>/usr/lib/python3/dist-packages/numpy/core/include <span class="token punctuation">\</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，以上命令需要根据您具体的软件环境进行修改，否则很可能报错。<br>其中：</p><ul><li>CMAKE_BUILD_TYPE=RELEASE \ 代表编译类型为发行版本</li><li>CMAKE_INSTALL_PREFIX=/usr/local \ 安装路径</li><li>INSTALL_C_EXAMPLES=ON \ C demo</li><li>INSTALL_PYTHON_EXAMPLES=ON \ Python demo</li><li>OPENCV_EXTRA_MODULES_PATH=/home/pi/Downloads/opencv-4.1.0/opencv_contrib-3.4.0/modules \ OpenCV Contrib路径</li><li>BUILD_EXAMPLES=ON \ 编译demo</li><li>WITH_LIBV4L=ON \ 开启Video for Linux</li><li>PYTHON3_EXECUTABLE=/usr/bin/python3.7 \ Python3路径</li><li>PYTHON_INCLUDE_DIR=/usr/include/python3.7 \ Python3 include文件夹</li><li>PYTHON_LIBRARY=/usr/lib/arm-linux-gnueabihf/libpython3.7m.so \ Python3库</li><li>PYTHON3_NUMPY_INCLUDE_DIRS=/usr/lib/python3/dist-packages/numpy/core/include \ Python3 Numpy安装路径</li><li>..</li></ul><p>如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190829173935.png"></p><p>cmake 配置完成后的界面如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190829172645.png"></p><p>注意：cmake执行时间一般在15分钟左右。</p><h2 id="6-编译"><a href="#6-编译" class="headerlink" title="6 编译"></a>6 编译</h2><p>在Cmake生成Makefile之后，便可进行编译：<br>输入并执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即开始进行编译，编译过程如下图所示：<br><img src="http://pic.huangruimin.tech/20190829203241.png"></p><p>注意：make编译时间比较长，一般编译时间在5小时左右。</p><h2 id="7-安装"><a href="#7-安装" class="headerlink" title="7 安装"></a>7 安装</h2><p>输入以下命令即可进行安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">make</span> insall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：install安装时间一般在1分钟左右。</p><h2 id="8-测试是否安装完成"><a href="#8-测试是否安装完成" class="headerlink" title="8 测试是否安装完成"></a>8 测试是否安装完成</h2><p>测试包括Python及cpp的测试，用到了摄像头及简单的OpenCV处理函数。</p><h3 id="8-1-Python3："><a href="#8-1-Python3：" class="headerlink" title="8.1 Python3："></a>8.1 Python3：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token triple-quoted-string string">'''Waveshare OpenCV Tutorial00_Test_OpenCV.pyA demo to show whether The OpenCV and CSI camera is well installed'''</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OpenCV Version:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 0: use CSI camera,1：use USB camera</span>    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span> FrameImage <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># change to gray image</span>            GrayImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>FrameImage<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>            <span class="token comment"># blur the image </span>            BlurImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>blur<span class="token punctuation">(</span>GrayImage<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># use canny to detect contour</span>            CannyImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>BlurImage<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span>            <span class="token comment"># show the image</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Camera Capture'</span><span class="token punctuation">,</span>CannyImage<span class="token punctuation">)</span>            <span class="token comment">#Press Q to quit</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>__doc__<span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Release resource</span>    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行该Python脚本的情况如下：<br><img src="http://pic.huangruimin.tech/20190830201403.png"></p><h3 id="8-2-cpp："><a href="#8-2-cpp：" class="headerlink" title="8.2 cpp："></a>8.2 cpp：</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Waveshare OpenCV Tutorial"</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"00_Test_OpenCV"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"A demo to show whether The OpenCV and CSI camera is well installed"</span> <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"OpenCV Version:"</span> <span class="token operator">&lt;&lt;</span> CV_VERSION <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token comment">// 0: use CSI camera,1：use USB camera</span>VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mat FrameImage<span class="token punctuation">,</span>GrayImage<span class="token punctuation">,</span>BlurImage<span class="token punctuation">,</span>CannyImage<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cap<span class="token operator">&gt;&gt;</span>FrameImage<span class="token punctuation">;</span><span class="token comment">//Change to gray image</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>FrameImage<span class="token punctuation">,</span>GrayImage<span class="token punctuation">,</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//blur the image</span><span class="token function">blur</span><span class="token punctuation">(</span>GrayImage<span class="token punctuation">,</span>BlurImage<span class="token punctuation">,</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//use canny to detect contour</span><span class="token function">Canny</span><span class="token punctuation">(</span>BlurImage<span class="token punctuation">,</span>CannyImage<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//show the image</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Camera Capture"</span><span class="token punctuation">,</span>CannyImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Press Q to quit</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CMakeLists.txt：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">cmake_minimum_required</span><span class="token punctuation">(</span>VERSION <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV<span class="token punctuation">)</span><span class="token function">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span><span class="token function">add_executable</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV <span class="token number">00</span>_Test_OpenCV<span class="token punctuation">.</span>cpp<span class="token punctuation">)</span><span class="token function">target_link_libraries</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV $<span class="token punctuation">{</span>OpenCV_LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译并运行：<br><img src="http://pic.huangruimin.tech/20190830201919.png"></p><h2 id="9-结语"><a href="#9-结语" class="headerlink" title="9 结语"></a>9 结语</h2><p>若中途有安装失败，或多次尝试安装失败，或者想在搭建环境的时候节省时间，可直接使用我们提供的镜像，在我们提供的镜像中，除了已安装OpenCV4.1.0之外，还安装了TensorFlow和Keras，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190830204006.png"></p>]]></content>
      
      
      <categories>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式系统中汉字字库编码集合</title>
      <link href="/2017/08/09/qian-ru-shi-xi-tong-zhong-han-zi-zi-ku-bian-ma-ji-he/"/>
      <url>/2017/08/09/qian-ru-shi-xi-tong-zhong-han-zi-zi-ku-bian-ma-ji-he/</url>
      
        <content type="html"><![CDATA[<h2 id="0-引言"><a href="#0-引言" class="headerlink" title="0 引言"></a>0 引言</h2><p>还记得通常在MCU驱动LCD，OLED是怎样显示汉字的吗？采用取字模工具，生成字模数组，然后要显示某个字符，直接索引这个字符的数组，然后对这个数组数据进行显示就行了，就像这样：<br><img src="http://pic.huangruimin.tech/20190519153008.png"></p><p>最近有开发一个物联网项目，将网络端的发过来的汉字显示到屏幕上，但问题来了，我还不知道网络端要发送具体哪些汉字，我是无法对具体的汉字取模，因此，得想办法先对所有汉字进行取模，或使用字库，于是就有了下文。</p><h2 id="1-字符编码"><a href="#1-字符编码" class="headerlink" title="1 字符编码"></a>1 字符编码</h2><p>先从字符编码说起:<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">参考阮一峰博客字符编码</a></p><ul><li>ASCII码：一共规定了128个字符的编码，这128个符号（包括32个不能打印出来的控制符号），只占用了一个字节的后面7位，最前面的一位统一规定为0。</li><li>非ASCII码：英语用128个符号编码就够了，但是用来表示其他语言，128个符号是不够的。</li></ul><blockquote><ul><li>GB2312，GBK，Unicode，UTF-8均为非ASCII编码</li></ul></blockquote><ul><li>Unicode码：如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是 Unicode，就像它的名字都表示的，这是一种所有符号的编码。</li></ul><blockquote><ul><li>注意：Unicode 只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储</li></ul></blockquote><ul><li>UTF-8码:UTF-8 就是在互联网上使用最广的一种 Unicode 的实现方式，是Unicode 的实现方式之一。</li><li>GB2312,GBK：GB2312是常用汉字的专用编码，GBK是所有汉字的专用编码。</li></ul><blockquote><ul><li>注意：GB类的汉字编码与后文的 Unicode 和 UTF-8 是毫无关系的</li></ul></blockquote><h2 id="2-液晶屏汉字显示原理"><a href="#2-液晶屏汉字显示原理" class="headerlink" title="2 液晶屏汉字显示原理"></a>2 液晶屏汉字显示原理</h2><ul><li>ASCII字符显示，由于ASCII字符仅128个，可以实现对每个字符一一取模，且占用MCU的RAM不会过大，此处不再介绍ASCII字符的显示。</li></ul><blockquote><ul><li>为什么显示英文一般不用字库芯片？<br>英文的单词都是由26个字母构成了，加上大小写的区别和其它一些字符，也不过才95个。假如要显示8 * 16像素大小的字符，每一个字符需要16个字节的字库空间，95个字符即是95 * 16=570个字节。即占用570个字节的RAM。对于小型MCU几K字节的RAM来说，绰绰有余了。</li></ul></blockquote><blockquote><ul><li>为什么显示中文需要字库芯片？<br>显示中文的话，需要每一个字的字模，16*16像素大小的中文，每一个中文都要32个字节。GBK收录了中文两万多个，如果要都能显示，需要700多K字节的空间。所以，我们选择了把这些字库放在外部存储器当中，可选择2M的FLASH存储芯片W25Q16做为存储媒介。放个700多K的字库足够了，并且，同时放两种字体的字库都没问题。</li></ul></blockquote><ul><li>常规汉字显示，采用相关的汉字取字模工具(PCtoLCD2002完美版)，取出字模，相关参数设置如下所示：</li></ul><p><img src="http://pic.huangruimin.tech/20190519171854.png"></p><p>由于我采用的液晶屏是逐行显示的，不同的液晶屏采用不同的显示模式，需根据具体情况选择字模。<br>取出“你”字模后，将字模数据复制到notepad++,调整成设置好的16列，21行的样式，在将16进制数据转换成2进制数据,然后将0替换成空格，即可找出汉字“你”的原型。</p><p><img src="http://pic.huangruimin.tech/20190519173234.png"></p><ul><li>对于液晶屏而言，字符，图片的显示都是像素点的点阵显示，因此，只要将上述数组中的数据转换成点阵数据显示到液晶屏中即可，对于二进制位1的位数据，显示出该像素点，对于二进制位0的位数据，不显示该像素点，即可显示出该汉字(暂不考虑颜色显示)。</li></ul><h2 id="3-字符显示的实现"><a href="#3-字符显示的实现" class="headerlink" title="3 字符显示的实现"></a>3 字符显示的实现</h2><p>上面讲到了字符显示的原理，接下来将讲解字符显示的实现，相关代码不依赖于底层，具有很好的移植性,且在文章最后放出了Github链接，要实现该代码的功能，需要以下前提条件：</p><blockquote><ul><li>已经在液晶屏上实现了画点功能，该函数将直接调用该功能</li><li>液晶屏在显示时，逐行扫描，且需要高位在前(参考上一节相关参数设置，其它类型的屏幕可能有所不同)</li></ul></blockquote><p>注：由于代码过长，为不影响阅读，仅放部分关键代码，如有需求，更多请参考文末的Github</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> font<span class="token operator">-&gt;</span>Height<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> font<span class="token operator">-&gt;</span>Width<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>ptr <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x80</span> <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">Paint_SetPixel</span><span class="token punctuation">(</span>x <span class="token operator">+</span> i<span class="token punctuation">,</span> y <span class="token operator">+</span> j<span class="token punctuation">,</span> Color_Foreground<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token function">Paint_SetPixel</span><span class="token punctuation">(</span>x <span class="token operator">+</span> i<span class="token punctuation">,</span> y <span class="token operator">+</span> j<span class="token punctuation">,</span> Color_Background<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ptr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>font<span class="token operator">-&gt;</span>Width <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ptr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此代码简单地实现了索引字模数组中的一个unsigned char类型的元素中的8位，将该8位绘制成像素点，此为字符显示的基本实现，</p><h2 id="4-任意汉字显示的实现-采用取模法"><a href="#4-任意汉字显示的实现-采用取模法" class="headerlink" title="4 任意汉字显示的实现(采用取模法)"></a>4 任意汉字显示的实现(采用取模法)</h2><p>本节将讲述如何实现任意汉字的显示。<br>需要准备以下工具:</p><ul><li>GBK字库</li><li>取模软件</li><li>二进制文件生成工具<br>如下图所示，且相关工具可从文末Github中直接获取得：<br><img src="http://pic.huangruimin.tech/20190520013605.png"></li></ul><p><strong>具体操作步骤如下:</strong></p><ul><li>将字库取模</li></ul><p>在工具栏处点“打开”按钮，打开gbk_ziku.txt文件，然后根据自己的需要，设置想要的取模方式，然后点工具栏上的“输出”按钮 并等待其完成，完成后会在取模软件所在路径生成了一个temp.txt文件。现在我是按照“宋体、点阵数为16、字重为4、取模为为16*16、对齐设置为左上、方向设置为横向取模，高位在左”的方式来取的字模，也就是我平时TFT液晶屏常用的一种字模。<br><img src="http://pic.huangruimin.tech/20190520012836.png"></p><p>打开temp.txt文件可知， 该文件包含了所有字库的点阵，且采用GBK编码排序：<br><img src="http://pic.huangruimin.tech/20190520013137.png"></p><ul><li>将取模的文件生成二进制文件</li></ul><p>将该temp.txt文件转换为二进制文件，供程序读取。在windows下进入CMD命令控制台，进入到相关文件所在的路径，接着，执行命令ziku.exe temp.txt命令，执行效果如下图所示，执行后将生成一个ziku.bin的文件：<br>  <img src="http://pic.huangruimin.tech/20190520015346.png"></p><ul><li>将二进制文件存入外部Flash，或Linux系统用户文件夹下：<br>得到ziku.bin文件后，可将该字库二进制文件存入外部Flash如W25Q16中(MCU)，或者Linux系统用户文件夹下(Linux)；其中，将该bin文件存放如外部Flash的方法为：</li></ul><blockquote><ul><li>单片机与电脑采用串口连接，单片机与W25Q16采用SPI方式连接。所以，我们只需要给单片机写一个接收串口数据再把数据通过SPI口传输到W25Q16中的程序即可。</li></ul></blockquote><blockquote><ul><li>使用FT232H芯片工具，该工具实现了USB转SPI，USB转I2C的功能，可直接通过PC的USB接口下载到带I2C或SPI接口的Flash或E2PROM中。</li></ul></blockquote><ul><li>检验二进制文件的可用性</li></ul><p>本文将只在Linux系统下进行检验，MCU环境下的检验同理：</p><p>该bin文件的检验程序如下所示(相关程序均已上传文章末尾的Github)：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token keyword">void</span> <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>FILE <span class="token operator">*</span>fd<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//字库所在目录</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> <span class="token punctuation">(</span>fd<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"./ziku.bin"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Open dir error\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"你"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//得到字模 </span><span class="token keyword">void</span> <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>code<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">uint8_t</span> GBKH<span class="token punctuation">,</span>GBKL<span class="token punctuation">;</span>                     <span class="token class-name">uint32_t</span> offset<span class="token punctuation">;</span><span class="token class-name">uint8_t</span>  character<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token class-name">uint8_t</span><span class="token operator">*</span> characterPtr<span class="token punctuation">;</span>    GBKH<span class="token operator">=</span><span class="token operator">*</span>code<span class="token punctuation">;</span>    GBKL<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>code<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>GBKH<span class="token operator">&gt;</span><span class="token number">0XFE</span><span class="token operator">||</span>GBKH<span class="token operator">&lt;</span><span class="token number">0X81</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    GBKH<span class="token operator">-=</span><span class="token number">0x81</span><span class="token punctuation">;</span>    GBKL<span class="token operator">-=</span><span class="token number">0x40</span><span class="token punctuation">;</span><span class="token comment">//获取字符在bin文件中的偏移量，一个字符占(16*16)/8=32字节。</span>    offset<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span><span class="token number">192</span><span class="token operator">*</span>GBKH<span class="token operator">+</span>GBKL<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">==</span><span class="token function">fseek</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span>offset<span class="token punctuation">,</span><span class="token constant">SEEK_SET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Fseek error\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token comment">//得到字符指针</span><span class="token function">fread</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>characterPtr <span class="token operator">=</span> character<span class="token punctuation">;</span><span class="token comment">//显示字符，16*16，一个字符占(16*16)/8=32字节。</span><span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>characterPtr <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">0x80</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">{</span>characterPtr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将以上程序保存为:fontTest.c，gcc编译，执行，结果如下图所示：<br><img src="http://pic.huangruimin.tech/20190521002021.png"><br>由执行结果可见，程序能够从二进制bin文件中提取有用信息，并且，该bin文件保存了GBK编码的所有汉字，将“你好”替换成其他任意汉字也是可从bin文件中提取出子模的，生成的bin文件是有效的。<br>接下来讲解程序中的几个注意事项:</p><ul><li>该程序源文件必须以GBK编码或GB2312编码保存(GBK编码兼容GB2312编码)，在notepad++中，保存方式如下图所示：<br><img src="http://pic.huangruimin.tech/20190521002857.png"></li><li>解释下如何获得内存中字符的偏移量：<blockquote><p>GBK编码：每个GBK码由2个字节组成：</p></blockquote></li></ul><blockquote><blockquote><p>第一个字节为0X81~0XF：<br>第二个字节分为两部分：</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>一是0X40-0X7E</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>二是0X80-0XFE</p></blockquote></blockquote></blockquote><p>例如汉字“瑞”的GBK编码为C8 F0，第一字节C8，位于0X81-0XFE之间，第二字节F0，位于0X40-0XFE之间</p><blockquote><p>第一个字节代表的意义称为区，那么GBK里面总共有126个区（0XFE-0X81+1=126）<br>第二个字节代表的意义就是每个区内有多少个汉字，算了一下，一共有190个（0XFE-0X80+0X7E-0X40+2=190）。</p></blockquote><p>那么，GBK一共存储了126X190=23940个汉字。</p><blockquote><blockquote><p>仔细看GBK编码第二个字节两部分中，0X40-0X7E和0X80-0XFE，也就是说它是从0X40~到0XFF，中间的0x7F和最后的0xFF没有用到。</p></blockquote></blockquote><blockquote><blockquote><p>但是为了能够线性查找，我们暂且认为这两个字节也存在，就是我们强制把每个区190个汉字当做每个区192个汉字，不过0X7F和0XFF上没有汉字。</p></blockquote></blockquote><p>定义GBKH代表第一个字节，GBKL代表第二个字节，字库的偏移量offset，那么其计算方法如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">   GBKH<span class="token operator">=</span><span class="token operator">*</span>code<span class="token punctuation">;</span>   GBKL<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>code<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>GBKH<span class="token operator">&gt;</span><span class="token number">0XFE</span><span class="token operator">||</span>GBKH<span class="token operator">&lt;</span><span class="token number">0X81</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   GBKH<span class="token operator">-=</span><span class="token number">0x81</span><span class="token punctuation">;</span>   GBKL<span class="token operator">-=</span><span class="token number">0x40</span><span class="token punctuation">;</span><span class="token comment">//字模大小为16*16/8=32，一个字模占32字节</span>   offset<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span><span class="token number">192</span><span class="token operator">*</span>GBKH<span class="token operator">+</span>GBKL<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现了在控制台窗口打印汉字字模，那么在TFTLCD，OLED，墨水屏等屏幕上，只要先实现了画点功能，那么，显示任意汉字也可以实现的了。</p><h2 id="5-任意汉字显示的实现-采用字库法"><a href="#5-任意汉字显示的实现-采用字库法" class="headerlink" title="5 任意汉字显示的实现(采用字库法)"></a>5 任意汉字显示的实现(采用字库法)</h2><p>最后再介绍一种显示汉字的方法，该方法采用Python实现，直接调用字体库，仅在Linux系统上可实现，下面将以树莓派为例，相关的操作如下：</p><p>首先安装好Pillow库以及必要液晶屏显示必要的SPI库，GPIO库等：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-pip<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-imaging<span class="token function">sudo</span> pip3 <span class="token function">install</span> spidev<span class="token function">sudo</span> pip3 <span class="token function">install</span> RPi.GPIO<span class="token function">sudo</span> pip3 <span class="token function">install</span> Pillow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装 Pillow 如果报错: ImportError: libopenjp2.so.7: cannot open shared object file: No<br>such file or directory，则先执行如下指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libopenjp2-7-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装必要的字体:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ttf-wqy-zenhei ttf-wqy-microhei<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来是调用微软雅黑字体进行显示的部分示例(python3)，详情代码参考文章末尾留下的Github:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> epd7in5b<span class="token keyword">import</span> time<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token punctuation">,</span>ImageDraw<span class="token punctuation">,</span>ImageFont<span class="token keyword">import</span> traceback<span class="token keyword">try</span><span class="token punctuation">:</span>    epd <span class="token operator">=</span> epd7in5b<span class="token punctuation">.</span>EPD<span class="token punctuation">(</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Clear..."</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token number">0xFF</span><span class="token punctuation">)</span>        <span class="token comment"># Drawing on the Horizontal image</span>    HBlackimage <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>epd7in5b<span class="token punctuation">.</span>EPD_WIDTH<span class="token punctuation">,</span> epd7in5b<span class="token punctuation">.</span>EPD_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>    HRedimage <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>epd7in5b<span class="token punctuation">.</span>EPD_WIDTH<span class="token punctuation">,</span> epd7in5b<span class="token punctuation">.</span>EPD_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>        <span class="token comment"># Horizontal</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Drawing"</span><span class="token punctuation">)</span>    drawblack <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>HBlackimage<span class="token punctuation">)</span>    drawred <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>HRedimage<span class="token punctuation">)</span>    font24 <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">'/usr/share/fonts/truetype/wqy/wqy-microhei.ttc'</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'hello world'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'7.5inch e-Paper B'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">u'微雪电子'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>        drawblack<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outline <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>        drawred<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>arc<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>chord<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>display<span class="token punctuation">(</span>epd<span class="token punctuation">.</span>getbuffer<span class="token punctuation">(</span>HBlackimage<span class="token punctuation">)</span><span class="token punctuation">,</span> epd<span class="token punctuation">.</span>getbuffer<span class="token punctuation">(</span>HRedimage<span class="token punctuation">)</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'traceback.format_exc():\n%s'</span><span class="token punctuation">,</span>traceback<span class="token punctuation">.</span>format_exc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该代码的精髓在于，先创建一段缓存，然后采用pillow库的相关方法通过字符串获取对应字库中字符的字模，将字模数据存入缓存中，然后将缓存数据显示到屏幕上，详情参考pillow库中的Image,ImageDraw,ImageFont方法对应的手册。</p><blockquote><p>注意，代码中的中文采用UTF-8编码，保存的时候，为防止乱码，必须以UTF-8编码保存(可采用notepad++工具保存为UTF-8编码)</p></blockquote><p>最后，放出相关代码的Github：<br><a href="https://github.com/RuiminHuang/fontDisplay">软件工具,字模bin文件校验代码</a><br><a href="https://github.com/RuiminHuang/e-Paper">刷屏代码示例</a></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IC和通用外设开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调试专用页面</title>
      <link href="/2017/01/01/diao-shi-zhuan-yong-ye-mian/"/>
      <url>/2017/01/01/diao-shi-zhuan-yong-ye-mian/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 信息技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
