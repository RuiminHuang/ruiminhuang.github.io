<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>RPi-OpenCV_OpenCV中HighGUI及相关上位机开发</title>
      <link href="/2022/09/15/rpi-opencv-opencv-zhong-highgui-ji-xiang-guan-shang-wei-ji-kai-fa/"/>
      <url>/2022/09/15/rpi-opencv-opencv-zhong-highgui-ji-xiang-guan-shang-wei-ji-kai-fa/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍OpenCV中自带组件HighGUI的简单使用。当我们在测试算法，查看算法效果的时候，需要用到可视化，动态调参的界面，也可能需要监听鼠标，键盘等的动作，这时，HighGUI就发挥大作用了，HighGUI作为OpenCV的图形化(GUI)组件，可以通过HighGUI开发一些简易的上位机。</p><h2 id="1-HighGUI所提供的接口类型"><a href="#1-HighGUI所提供的接口类型" class="headerlink" title="1 HighGUI所提供的接口类型"></a>1 HighGUI所提供的接口类型</h2><p>OpenCV的HighGUI提供了以下几种接口：</p><ul><li>创建多个窗口，在窗口中显示图像</li><li>监听鼠标相关的操作</li><li>创建按钮，滑块等简单交互组件，并获取其值</li></ul><p>下面将分别讲解该接口，最后通过一个综合案例了解该接口的使用。</p><h2 id="2-HighGUI窗口"><a href="#2-HighGUI窗口" class="headerlink" title="2 HighGUI窗口"></a>2 HighGUI窗口</h2><h3 id="2-1-namedWindow接口"><a href="#2-1-namedWindow接口" class="headerlink" title="2.1 namedWindow接口"></a>2.1 namedWindow接口</h3><p>函数原型：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token boolean">None</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span>winname<span class="token punctuation">[</span><span class="token punctuation">,</span> flags<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> cv<span class="token double-colon punctuation">::</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> winname<span class="token punctuation">,</span> <span class="token keyword">int</span> flags <span class="token operator">=</span> WINDOW_AUTOSIZE <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该函数可以传入一些参数(flags)来实现窗口的一些设定。</p><p>设置选项1：窗口大小</p><ul><li>WINDOW_NORMAL 1 代表允许拖动窗口变换窗口大小。</li><li>WINDOW_AUTOSIZE 0 默认根据屏幕跟图片的大小， 自动缩放。 不允许手动变化窗口大小。</li></ul><p>设置选项2：设置宽高比</p><ul><li>WINDOW_FREERATIO 256 不固定宽高比。</li><li>WINDOW_KEEPRATIO 0 默认固定宽高比， 也就是窗口拖拽缩放， 必须保持原来的宽高比。</li></ul><p>设置选项3：窗口GUI版本</p><ul><li>WINDOW_GUI_NORMAL 16 旧版窗口组件。 不支持statusbar跟toolbar。 就是窗口上方的状态栏，工具栏。</li><li>WINDOW_GUI_EXPANDED 0 默认新版本功能增强的GUI窗口。</li></ul><p>一般地，我们想设置可以自由拖动，又不固定宽高比的窗口，那我们可以这样写：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span>cv2<span class="token punctuation">.</span>WINDOW_NORMAL<span class="token operator">|</span>cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token operator">|</span>cv2<span class="token punctuation">.</span>WINDOW_GUI_EXPANDED<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token operator">|</span>WINDOW_GUI_EXPANDED<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-2-imshow接口"><a href="#2-2-imshow接口" class="headerlink" title="2.2 imshow接口"></a>2.2 imshow接口</h3><p>函数原型：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token boolean">None</span><span class="token operator">=</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>winname<span class="token punctuation">,</span> mat<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> cv<span class="token double-colon punctuation">::</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token keyword">const</span> String <span class="token operator">&amp;</span> winname<span class="token punctuation">,</span>InputArray mat <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这里，调用imshow函数时，如果”image_win”这个窗口之前并没有被声明，那么会先创建一个名字叫”image_win”的窗口，然后再更新这个窗口里面的图像。</p><p>该函数具体使用如下：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-窗口销毁"><a href="#2-3-窗口销毁" class="headerlink" title="2.3 窗口销毁"></a>2.3 窗口销毁</h3><p>该函数负责销毁窗口，但该函数对于小型项目而言，并不是很有必要，因为一般在程序结束时，会自动销毁窗口。该函数的具体使用如下：</p><p>python3</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>destroyWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>cpp</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">destroyWindow</span><span class="token punctuation">(</span><span class="token string">"image_win"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-HighGUI鼠标事件监听"><a href="#3-HighGUI鼠标事件监听" class="headerlink" title="3 HighGUI鼠标事件监听"></a>3 HighGUI鼠标事件监听</h2><h3 id="3-1-鼠标支持的事件"><a href="#3-1-鼠标支持的事件" class="headerlink" title="3.1 鼠标支持的事件"></a>3.1 鼠标支持的事件</h3><p>首先，鼠标支持以下事件：</p><ul><li>EVENT_MOUSEMOVE 鼠标移动 Mouse Move</li><li>EVENT_LBUTTONDOWN 鼠标左键点击 Left Button Down</li><li>EVENT_RBUTTONDOWN 鼠标右键点击 Right Button Down</li><li>EVENT_MBUTTONDOWN 鼠标中键点击 Middle Button Down</li><li>EVENT_LBUTTONUP 鼠标左键抬起 Left Button Up</li><li>EVENT_RBUTTONUP 鼠标右键抬起 Right Button Up</li><li>EVENT_MBUTTONUP 鼠标中键抬起 Middle Button Up</li><li>EVENT_LBUTTONDBLCLK 鼠标左键双击 Left Button Double Click</li><li>EVENT_RBUTTONDBLCLK 鼠标右键双击 Right Button Double Click</li><li>EVENT_MBUTTONDBLCLK 鼠标中键双击 Middle Button Double Click</li></ul><h3 id="3-2-鼠标支持的事件标志"><a href="#3-2-鼠标支持的事件标志" class="headerlink" title="3.2 鼠标支持的事件标志"></a>3.2 鼠标支持的事件标志</h3><ul><li>EVENT_FLAG_LBUTTON 左键正在按下</li><li>EVENT_FLAG_RBUTTON 右键正在被按下</li><li>EVENT_FLAG_MBUTTON 中键正在被按下</li><li>EVENT_FLAG_CTRLKEY CTRL键正在被按下</li><li>EVENT_FLAG_SHIFTKEY SHIFT键正在被按下</li><li>EVENT_FLAG_ALTKEY ALT键正在被按下</li></ul><h3 id="3-3-鼠标事件回调函数及其设置"><a href="#3-3-鼠标事件回调函数及其设置" class="headerlink" title="3.3 鼠标事件回调函数及其设置"></a>3.3 鼠标事件回调函数及其设置</h3><p>将通过一个案例来了解该函数的具体使用，在该案例中，只有当鼠标在移动，并且Ctrl和鼠标左键同时按下时，才打印出相关信息：</p><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#That is actually what callback function define</span><span class="token keyword">def</span> <span class="token function">onMouse</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE <span class="token keyword">and</span> flags <span class="token operator">==</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>EVENT_FLAG_LBUTTON<span class="token operator">|</span>cv2<span class="token punctuation">.</span>EVENT_FLAG_CTRLKEY <span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#Judged, then in this occasion, do something</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token comment"># Set the callback function</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> onMouse<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>cpp：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">//That is actually what callback function define</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">onMouse</span><span class="token punctuation">(</span> <span class="token keyword">int</span> event<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> flags<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token operator">==</span>EVENT_MOUSEMOVE<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>flags<span class="token operator">==</span><span class="token punctuation">(</span>EVENT_FLAG_LBUTTON<span class="token operator">|</span>EVENT_FLAG_CTRLKEY<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//Judged, then in this occasion, do something</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>flags<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">setMouseCallback</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> onMouse<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在回调函数中：</p><ul><li>event 鼠标事件类型，详见3.1中鼠标支持的事件</li><li>x 鼠标当前在窗口Windows下的x坐标</li><li>y 鼠标在当前窗口Windows下的y坐标</li><li>flags 鼠标事件发生过程值中的一些其他事件标志/状态，详见3.2中鼠标支持的事件标志</li><li>param 用户自定义的参数</li></ul><h2 id="4-HighGUI滑动条组件"><a href="#4-HighGUI滑动条组件" class="headerlink" title="4 HighGUI滑动条组件"></a>4 HighGUI滑动条组件</h2><p>将通过一个案例来演示如何使用滑动组件，在本案例中，首先通过简单案例演示滑动组件的基本使用，接着，来做一个彩色画布。</p><h3 id="4-1-python3实现"><a href="#4-1-python3实现" class="headerlink" title="4.1 python3实现"></a>4.1 python3实现</h3><p>简单案例，先演示如何使用滑动组件。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token comment"># 创建窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span class="token comment"># 定义全局变量</span>value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 定义回调函数</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> value    r_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">)</span>    g_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">)</span>    b_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">)</span>    value <span class="token operator">=</span> <span class="token punctuation">(</span>r_value<span class="token punctuation">,</span> g_value<span class="token punctuation">,</span> b_value<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Update Value, value ={}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 创建滑动组件</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span><span class="token comment"># 设置默认值</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token comment"># 等待按键按下</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 销毁窗口</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行后的GUI界面如下图所示：<br><img src="http://pic.huangruimin.tech/20191029113000.png"><br>下面进阶案例，演示如何实现可变色画布</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npcanvas <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 更新图片，在更新颜色回调函数中调用</span><span class="token keyword">def</span> <span class="token function">updateImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> color    canvas<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token comment"># 更新颜色回调函数</span><span class="token keyword">def</span> <span class="token function">updateColor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> color    r_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    g_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    b_value <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    color <span class="token operator">=</span> <span class="token punctuation">(</span>b_value<span class="token punctuation">,</span>g_value<span class="token punctuation">,</span>r_value<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Update Value, value={}'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">)</span>    updateImage<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 新建窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 创建滑条，并设置回调函数</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token comment"># 设置滑条初始化位置</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"进入RGB滑块实验， 键盘摁q退出程序"</span><span class="token punctuation">)</span><span class="token comment"># 首次初始化窗口的色块</span><span class="token comment"># 后面的更新 都是由getTrackbarPos产生变化而触发</span>updateImage<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">continue</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行后，运行结果如下图所示，拖动滑动条即可进行调色：<br><img src="http://pic.huangruimin.tech/20191029130546.png"></p><h3 id="4-2-cpp实现"><a href="#4-2-cpp实现" class="headerlink" title="4.2 cpp实现"></a>4.2 cpp实现</h3><p>其cpp实现如下所示，其中像素点的操作没有Python中Numpy的操作那么便捷，采用的是容器访问像素点。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WINDOW_NAME</span> <span class="token string">"image"</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> r_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">int</span> g_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">int</span> b_value <span class="token operator">=</span> <span class="token number">125</span><span class="token punctuation">;</span>Mat <span class="token function">canvas</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span>CV_8UC3<span class="token punctuation">,</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">updateColor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> row<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> row <span class="token operator">&lt;</span> canvas<span class="token punctuation">.</span>rows<span class="token punctuation">;</span> row<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> col <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> col <span class="token operator">&lt;</span> canvas<span class="token punctuation">.</span>cols<span class="token punctuation">;</span> col<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>b_value<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>g_value<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token punctuation">)</span>r_value<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Red"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>r_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Green"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>g_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"Channel_Blue"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b_value<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateColor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码执行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029151245.png"></p><h2 id="5-用滑条模拟按键"><a href="#5-用滑条模拟按键" class="headerlink" title="5 用滑条模拟按键"></a>5 用滑条模拟按键</h2><p>在OpenCV中，按键组件是不存在的，一种比较主要的实现按键的方法是采用滑条组件来实现按键。</p><p>首先演示其实现的Python代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_win'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Button Pressed!!'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Do Something'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        do_something<span class="token punctuation">(</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>setTrackbarPos<span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">,</span> <span class="token string">'image_win'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">,</span><span class="token string">'image_win'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其相应的实现效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029153207.png"><br>相应的，其cpp代码如下所示:</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WINDOW_NAME</span> <span class="token string">"image_win"</span></span><span class="token keyword">int</span> position <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Button Pressed"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"Do Something"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>position <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">do_something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setTrackbarPos</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">,</span>WINDOW_NAME<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">namedWindow</span><span class="token punctuation">(</span>WINDOW_NAME<span class="token punctuation">,</span> WINDOW_NORMAL<span class="token operator">|</span>WINDOW_FREERATIO<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">createTrackbar</span><span class="token punctuation">(</span><span class="token string">"button"</span><span class="token punctuation">,</span> WINDOW_NAME<span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实现效果同Python。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_10_Rootfs的单独编译和验证</title>
      <link href="/2021/10/15/hi3516dv300-10-rootfs-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/15/hi3516dv300-10-rootfs-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-内核启动后，就会去挂载根文件系统"><a href="#1-内核启动后，就会去挂载根文件系统" class="headerlink" title="1.内核启动后，就会去挂载根文件系统"></a>1.内核启动后，就会去挂载根文件系统</h2><ul><li><p>移植了应用程序，就往bin目录里面放</p></li><li><p>移植了库，就往lib目录里面放</p></li><li><p>要区分一个边界：哪些东西是一定要你去做的，哪些东西不一定是要你做的</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">14.1</span>、rootfs知识点回顾<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>rootfs的作用和意义，包含内容<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>rootfs的制作步骤：构建文件夹形式的rootfs，用mkfs工具制作成image<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>构建文件夹形式rootfs的关键步骤：基础文件夹、etc内配置文件、busybox移植、复制动态库<span class="token number">14.2</span>、分析Study16DV300开发板资料状况<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>官方SDK中相关文档和资料。分析结论：大量的有用资料在osdrv/Makefile中，但是你得能看懂。<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>官方SDK和配套SDK中，readme_cn.txt中几乎无有用信息<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>配套SDK中，make.sh脚本中有可用信息，值得详细分析<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>rootfs中的bin文件夹，存放应用程序，是要通过busybox生成的</p></li><li><p>rootfs中的lib文件夹，存放的是共享链接库</p></li><li><p>rootfs中的etc文件夹，是存放了一些文件的</p></li><li><p>在动态链接库(lib)中，可以来判断一下，相应的动态链接库是放在哪里？</p></li></ul><blockquote><p>放在：<br>并且，一般使用的是这个：a7_softfp_neon-vfpv4<br>它的动态链接库就放在：lib.tgz里面<br>里面就有很多.so文件，就是我们文件系统所需要的.so文件<br>这就是一个典型的交叉编译工具链里面的动态链接库的样子<br>busybox也是通过make menuconfig来生成.config文件的</p></blockquote><h2 id="2-自制根文件系统"><a href="#2-自制根文件系统" class="headerlink" title="2.自制根文件系统"></a>2.自制根文件系统</h2><p><img src="https://pic.huangruimin.tech/20220204212223.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">15</span>.自制rootfs实践<span class="token number">15.1</span>、参考资料<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>osdrv/Makefile<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>make.sh<span class="token number">15.2</span>、实践<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>参考核心课程1期中讲的理论和方法，完全可以为Study16DV300开发板自制一个最小rootfs。<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>步骤1：解压rootfs.tgz得到基础，已有etc内配置文件<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>步骤2：配置编译安装busybox，可参考make.sh中build_busybox函数<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>步骤3：复制动态库，在工具链的runtime_glibc/a7_softfp_neon-vfpv4目录中<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>步骤4：制作成image，可参考make.sh中make_rootfs函数<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>步骤5：烧录并启动测试<span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token parameter variable">-j8</span><span class="token function">make</span> <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token assign-left variable">CHIP</span><span class="token operator">=</span>hi3516dv300 <span class="token assign-left variable">MP_TYPE</span><span class="token operator">=</span>smp <span class="token assign-left variable">BOOT_MEDIA</span><span class="token operator">=</span>emmc <span class="token assign-left variable">OSDRV_CROSS_CFLAGS</span><span class="token operator">=</span><span class="token string">"-mcpu=cortex-a7 -mfloat-abi=softfp -mfpu=neon-vfpv4 -w"</span>  <span class="token assign-left variable">LIB_TYPE</span><span class="token operator">=</span>glibc <span class="token assign-left variable">RUNTIME_LIB</span><span class="token operator">=</span>runtime_glibc <span class="token assign-left variable">CROSS_SPECIFIED</span><span class="token operator">=</span>y <span class="token function">install</span> ./make_ext4fs <span class="token parameter variable">-l</span> 200M <span class="token parameter variable">-s</span> aston_rootfs_hi3516dv300.ext4 rootfs_glibc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>制作细节看下一节笔记：15-自制rootfs实践</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_9_Kernel的单独编译和验证</title>
      <link href="/2021/10/15/hi3516dv300-9-kernel-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/15/hi3516dv300-9-kernel-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Kernel的单独编译和验证"><a href="#1-Kernel的单独编译和验证" class="headerlink" title="1.Kernel的单独编译和验证"></a>1.Kernel的单独编译和验证</h2><h3 id="1-1-打补丁"><a href="#1-1-打补丁" class="headerlink" title="1.1 打补丁"></a>1.1 打补丁</h3><ul><li>tar.gz的压缩比例没有那么狠</li><li>tar.xz的压缩比例则更狠，先得用xz软件解压成gz</li></ul><p><img src="https://pic.huangruimin.tech/20211229204822.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">14</span>         <span class="token builtin class-name">cd</span> opensource/kernel<span class="token number">15</span>         <span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> linux-4.9.37.tar.gz<span class="token number">16</span>         <span class="token function">mv</span> linux-4.9.37 linux-4.9.y<span class="token number">17</span>         <span class="token builtin class-name">cd</span> linux-4.9.y<span class="token number">18</span>         patch <span class="token parameter variable">-p1</span> <span class="token operator">&lt;</span> <span class="token punctuation">..</span>/linux-4.9.37.patch<span class="token number">19</span>         <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token number">20</span>         <span class="token function">tar</span> <span class="token parameter variable">-czvf</span> linux-4.9.y.tgz linux-4.9.y<span class="token number">21</span>         <span class="token builtin class-name">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-编译Image"><a href="#1-2-编译Image" class="headerlink" title="1.2 编译Image"></a>1.2 编译Image</h3><h4 id="1-2-1-readme上的说明"><a href="#1-2-1-readme上的说明" class="headerlink" title="1.2.1 readme上的说明"></a>1.2.1 readme上的说明</h4><p><img src="https://pic.huangruimin.tech/20211229212759.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">46</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>单独编译kernel<span class="token punctuation">(</span>以hi3516dv300举例<span class="token punctuation">)</span>：<span class="token number">47</span>     注意：单独编译内核之前请先阅读osdrv/opensource/kernel下的readme_cn.txt说明。<span class="token number">48</span><span class="token number">49</span>     待进入内核源代码目录后，执行以下操作<span class="token number">50</span>     <span class="token function">cp</span> arch/arm/configs/hi3516dv300_smp_defconfig  .config<span class="token number">51</span>     <span class="token punctuation">(</span>emmc启动时执行如下操作：cp arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config<span class="token punctuation">)</span><span class="token number">52</span><span class="token number">53</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span class="token number">54</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- uImage<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-2-2-具体操作过程说明"><a href="#1-2-2-具体操作过程说明" class="headerlink" title="1.2.2 具体操作过程说明"></a>1.2.2 具体操作过程说明</h4><ul><li><p>首先，生成相应的.config文件，并且要对应是EMMC的才行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y<span class="token function">cp</span> arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>make menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其实这一步的menuconfig，也是在生成.config文件而已<br>注意这一步也是要先load那个.config文件</p></blockquote></li><li><p>编译Image</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- uImage <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>在刚刚的步骤中，只是把make menuconfig中选择为y的部分编译进去了</p></blockquote></li></ul><blockquote><p>实际上，在海思当中，有很多驱动是以模块的形式存在的，需要单独编译ko文件</p></blockquote><h3 id="1-3-编译模块"><a href="#1-3-编译模块" class="headerlink" title="1.3 编译模块"></a>1.3 编译模块</h3><blockquote><p>这一步，就是把配置为M的那些东西，也把它编译出来了<br>其实，也就是编译ko文件<br>编译好ko文件后，就把这些ko文件复制到根文件系统中去<br>当系统起来后，再通过imsmode的方式去加载它</p></blockquote><h4 id="1-3-1-readme中的说明文件"><a href="#1-3-1-readme中的说明文件" class="headerlink" title="1.3.1 readme中的说明文件"></a>1.3.1 readme中的说明文件</h4><p><img src="https://pic.huangruimin.tech/20211229222422.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">56</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>单独编译模块<span class="token punctuation">(</span>以hi3516dv300举例<span class="token punctuation">)</span>： <span class="token number">57</span>     待进入内核源代码目录后，执行以下操作 <span class="token number">58</span>     <span class="token function">cp</span> arch/arm/configs/hi3516dv300_smp_defconfig  .config <span class="token number">59</span>     <span class="token punctuation">(</span>emmc启动时执行如下操作：cp arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config<span class="token punctuation">)</span> <span class="token number">60</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig <span class="token number">61</span>     <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- modules<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-2-具体操作过程说明"><a href="#1-3-2-具体操作过程说明" class="headerlink" title="1.3.2 具体操作过程说明"></a>1.3.2 具体操作过程说明</h4><ul><li><p>首先，生成相应的.config文件，并且要对应是EMMC的才行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y<span class="token function">cp</span> arch/arm/configs/hi3516dv300_emmc_smp_defconfig  .config <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>make menuconfig</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其实这一步的menuconfig，也是在生成.config文件而已<br>注意这一步也是要先load那个.config文件</p></blockquote></li><li><p>编译模块</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- modules <span class="token parameter variable">-j8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="2烧录"><a href="#2烧录" class="headerlink" title="2烧录"></a>2烧录</h2><h3 id="2-1-Kernel的路径"><a href="#2-1-Kernel的路径" class="headerlink" title="2.1 Kernel的路径"></a>2.1 Kernel的路径</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/kernel/linux-4.9.y/arch/arm/boot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://pic.huangruimin.tech/20220218163130.png"></p><h3 id="2-2-烧写成功的截图"><a href="#2-2-烧写成功的截图" class="headerlink" title="2.2 烧写成功的截图"></a>2.2 烧写成功的截图</h3><p><img src="https://pic.huangruimin.tech/20211229224425.png"></p><h3 id="2-3-查看内核的编译时间"><a href="#2-3-查看内核的编译时间" class="headerlink" title="2.3 查看内核的编译时间"></a>2.3 查看内核的编译时间</h3><p><img src="https://pic.huangruimin.tech/20211229224803.png"></p><h3 id="2-4-查看具体加载了哪些模块"><a href="#2-4-查看具体加载了哪些模块" class="headerlink" title="2.4 查看具体加载了哪些模块"></a>2.4 查看具体加载了哪些模块</h3><p><img src="https://pic.huangruimin.tech/20211229225608.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_8_Uboot的单独编译和验证</title>
      <link href="/2021/10/14/hi3516dv300-8-uboot-de-dan-du-bian-yi-he-yan-zheng/"/>
      <url>/2021/10/14/hi3516dv300-8-uboot-de-dan-du-bian-yi-he-yan-zheng/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Uboot的单独编译和验证"><a href="#1-Uboot的单独编译和验证" class="headerlink" title="1.Uboot的单独编译和验证"></a>1.Uboot的单独编译和验证</h2><ul><li>参考文献1：SDK内osdrv中的readme</li><li>参考文献2：ReleaseDoc中的《Hi3516CV500╱Hi3516DV300╱Hi3516AV300 U-boot 移植应用开发指南.pdf》</li></ul><h2 id="2-编译"><a href="#2-编译" class="headerlink" title="2.编译"></a>2.编译</h2><h3 id="2-1-首先进入到Uboot源码路径下："><a href="#2-1-首先进入到Uboot源码路径下：" class="headerlink" title="2.1 首先进入到Uboot源码路径下："></a>2.1 首先进入到Uboot源码路径下：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-xzvf</span> u-boot-2016.11.tgz<span class="token builtin class-name">cd</span> u-boot-2016.11/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>其中这个Uboot是根据海思官方开发板移植过的，一般如果没有特殊的需求，Uboot就和官方的一样</p><h3 id="2-2-然后生成config文件"><a href="#2-2-然后生成config文件" class="headerlink" title="2.2 然后生成config文件"></a>2.2 然后生成config文件</h3><p>其中生成.config文件就有以下4种方法：</p><ul><li>这一条也是readme中的，对应EMMC的硬件版本：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_emmc_defconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>这一条是readme中写的，也是默认编译的SPI_Flash的，对EMMC硬件来说是不能用的：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_defconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>其中这一条是手册中写的，但用的是SPI_Flash版本的，对EMMC硬件来说是不能用的：<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- hi3516dv300_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>注意：使用下面这条命令时：make ARCH=arm CROSS_COMPILE=arm-himix200-linux- -j 8还会重新提示你进行选择配置<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> ./configs/hi3516dv300_emmc_defconfig ./.config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h3 id="2-3-执行menuconfig配置，当然默认不用配置"><a href="#2-3-执行menuconfig配置，当然默认不用配置" class="headerlink" title="2.3 执行menuconfig配置，当然默认不用配置"></a>2.3 执行menuconfig配置，当然默认不用配置</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>连续按2下ESC即可直接推出配置的界面</p><blockquote><p>注意这一步也是要先load那个.config文件</p></blockquote><blockquote><p>注意这一步也是在写.config文件的</p></blockquote><blockquote><p>这一步在默认情况下不用去配置</p></blockquote><h3 id="2-4-编译生成中间文件u-boot-bin"><a href="#2-4-编译生成中间文件u-boot-bin" class="headerlink" title="2.4 编译生成中间文件u-boot.bin"></a>2.4 编译生成中间文件u-boot.bin</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- <span class="token parameter variable">-j</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>但这里生成的只是中间件，很多厂商都选择把一些跟硬件相关的把它独立出来，这个原理跟设备树有点类似，也就是和硬件相关的配置还在下面的步骤中</p><h3 id="2-5-编译生成gzip文件"><a href="#2-5-编译生成gzip文件" class="headerlink" title="2.5 编译生成gzip文件"></a>2.5 编译生成gzip文件</h3><p>首先进入到路径：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/tools/pc/hi_gzip<span class="token function">make</span><span class="token builtin class-name">cd</span> bin<span class="token function">cp</span> ./gzip /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11/arch/arm/cpu/armv7/hi3516dv300/hw_compressed <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-6-配置表格文件"><a href="#2-6-配置表格文件" class="headerlink" title="2.6 配置表格文件"></a>2.6 配置表格文件</h3><ul><li>表格路径</li></ul><p><img src="https://pic.huangruimin.tech/20220217214541.png"></p><ul><li>设计思想：把Uboot配套的整个硬件的很多的这个值写到了Excel中</li></ul><blockquote><p>第一项，配置Uboot里面的PLL</p></blockquote><ul><li>配置好表格文件后，点击Generate reg bin file，生成reg_info.bin文件</li></ul><h3 id="2-7-拷贝相关文件"><a href="#2-7-拷贝相关文件" class="headerlink" title="2.7 拷贝相关文件"></a>2.7 拷贝相关文件</h3><ul><li>拷贝reg_info.bin到U-bot源码目录，重命名为.reg</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这里通过SSH工具拷贝reg_info.bin文件</p></blockquote><blockquote><p>然后进行重命名</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">mv</span> ./reg_info.bin ./.reg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>将生成的u-boot.bin复制到osdrv/tools/pc/uboot_tools/目录<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token function">cp</span> ./u-boot.bin <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/tools/pc/uboot_tools/ <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul><h3 id="2-8-编译生成u-boot-hi3516dv300-bin"><a href="#2-8-编译生成u-boot-hi3516dv300-bin" class="headerlink" title="2.8 编译生成u-boot-hi3516dv300.bin"></a>2.8 编译生成u-boot-hi3516dv300.bin</h3><ul><li><p>注意make的时候用的是u-boot-z.bin，但实际生成的是u-boot-hi3516dv300.bin</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/Hi3516DV300_Original/Hi3516CV500_SDK_V2.0.2.0/osdrv/opensource/uboot/u-boot-2016.11<span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>arm-himix200-linux- u-boot-z.bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>在当前Uboot源码路径下生成的u-boot-hi3516dv300.bin就是能够在单板上运行的uboot镜像</p></li></ul><h2 id="3-烧录并设置环境变量"><a href="#3-烧录并设置环境变量" class="headerlink" title="3 烧录并设置环境变量"></a>3 烧录并设置环境变量</h2><h3 id="3-1-烧写"><a href="#3-1-烧写" class="headerlink" title="3.1 烧写"></a>3.1 烧写</h3><ul><li><p>参考以前烧写实战</p></li><li><p>以前三星的，他的整个环境变量是放在跟Uboot独立的一个空间里面，当我们重新去烧写Uboot的时候，并不会覆盖之前的bootcmd和bootargs，所以以前对的是可以保存的</p></li><li><p>但海思的不是这么设计，它的环境变量整个是和Uboot在一起的，所以重新烧写Uboot时，我们这份Uboot里面的环境变量，会覆盖之前的，但是默认的环境变量又不对。所以要重新配置才行。</p></li><li><p>烧录之后是不能启动的，原因在于要设置bootcmd和bootargs</p></li><li><p>其中烧写的相关配置如下图所示：<br><img src="https://pic.huangruimin.tech/20211205202224.png"></p></li></ul><h3 id="3-2-设置换将变量"><a href="#3-2-设置换将变量" class="headerlink" title="3.2 设置换将变量"></a>3.2 设置换将变量</h3><ul><li><p>设置环境变量时，发现只认识setenv，并不认识set这个环境变量</p></li><li><p>也并不是每次都要重新设置环境变量</p></li><li><p>具体的环境变量如下：</p><blockquote><p>bootcmd ：Uboot 首先执行这句</p></blockquote></li></ul><blockquote><p>bootargs：Uboot 给Kernel传参</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">printenv</span>setenv bootcmd <span class="token string">"mmc read 0 0x81000000 0x2800 0x5000; bootm 0x81000000"</span>setenv bootargs <span class="token string">"mem=512M console=ttyAMA0,115200 root=/dev/mmcblk0p3 rootfstype=ext4 rw rootwait blkdevparts=mmcblk0:5M(boot),10M(kernel),500M(rootfs),200M(userdata),-(user)"</span>saveenv<span class="token function">printenv</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_7_开发板配套SDK解读</title>
      <link href="/2021/10/13/hi3516dv300-7-kai-fa-ban-pei-tao-sdk-jie-du/"/>
      <url>/2021/10/13/hi3516dv300-7-kai-fa-ban-pei-tao-sdk-jie-du/</url>
      
        <content type="html"><![CDATA[<h2 id="1、文件夹结构"><a href="#1、文件夹结构" class="headerlink" title="1、文件夹结构"></a>1、文件夹结构</h2><p><img src="https://pic.huangruimin.tech/20211224152259.png"><br>注意：这里有很多符号链接，因为这些文件夹都是链接到别的地方的</p><blockquote><p>这里有干货的文件夹，就只有osdrv与smp</p></blockquote><blockquote><p>make_ext4fs是编译的工具</p></blockquote><blockquote><p>烧录的时候有用到userdata，userdata里面有很多要用到的配置</p></blockquote><blockquote><p>很多芯片的官方，都想做成这样一键编译的形式，问题是，做好后，就不能动</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_6_官方SDK开发实战</title>
      <link href="/2021/10/12/hi3516dv300-6-guan-fang-sdk-kai-fa-shi-zhan/"/>
      <url>/2021/10/12/hi3516dv300-6-guan-fang-sdk-kai-fa-shi-zhan/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SDK脚本管理解析"><a href="#1-SDK脚本管理解析" class="headerlink" title="1. SDK脚本管理解析"></a>1. SDK脚本管理解析</h2><h3 id="1-1-sdk-unpack脚本解析"><a href="#1-1-sdk-unpack脚本解析" class="headerlink" title="1.1 sdk.unpack脚本解析"></a>1.1 sdk.unpack脚本解析</h3><ul><li>就是为了解压而已</li></ul><h3 id="1-2-scripts-common-sh脚本解析"><a href="#1-2-scripts-common-sh脚本解析" class="headerlink" title="1.2 scripts/common.sh脚本解析"></a>1.2 scripts/common.sh脚本解析</h3><ul><li>定义了很多函数，整个SDK管理的所在</li></ul><h3 id="1-3-osdrv-readme-cn-txt"><a href="#1-3-osdrv-readme-cn-txt" class="headerlink" title="1.3 osdrv/readme_cn.txt"></a>1.3 osdrv/readme_cn.txt</h3><ul><li>定义了怎么编译，包括一键编译，全部编译</li></ul><h2 id="2-如何安装交叉编译工具链"><a href="#2-如何安装交叉编译工具链" class="headerlink" title="2.如何安装交叉编译工具链"></a>2.如何安装交叉编译工具链</h2><p><img src="https://pic.huangruimin.tech/20211223141315.png"></p><blockquote><p>位于：/home/book/Hi3516DV300/arm-himix200-linux中</p></blockquote><ul><li><p>正确的安装命令：</p><blockquote><p>sudo source ./arm-himix200-linux.install</p></blockquote></li><li><p>如果遇到sudo: source: command not found，那么先执行：</p><blockquote><p>sudo su</p></blockquote></li><li><p>如下图所示：<br><img src="https://pic.huangruimin.tech/20211223144953.png"><br><img src="https://pic.huangruimin.tech/20211223145209.png"></p></li><li><p>要明白x86-arm的含义：</p><blockquote><p>x86表示的是宿主运行环境，arm表示目标运行环境</p></blockquote></li><li><p>最后安装的工具如下图所示：<br><img src="https://pic.huangruimin.tech/20211223150519.png"></p></li><li><p>/etc/profile：系统启动之初，就能启动它</p></li><li><p>.bach.src：其实是低一个等级的</p></li><li><p>最后检查下/etc/profile里面，其实是有export PATH=”/opt/hisi-linux/x86-arm/arm-himix200-linux/bin:$PATH”的，说明是添加到环境变量里面去了。</p></li><li><p>最后安装好后的情况如下输出所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">book@100ask:~$ <span class="token function">ls</span>Configuring_ubuntu.sh  Documents  examples.desktop  Music       Pictures  snap       tftpbootDesktop                Downloads  Hi3516DV300       nfs_rootfs  Public    Templates  Videosbook@100ask:~$ arm-himix200-linux-gcc <span class="token parameter variable">-v</span>Using built-in specs.<span class="token assign-left variable">COLLECT_GCC</span><span class="token operator">=</span>arm-himix200-linux-gcc<span class="token assign-left variable">COLLECT_LTO_WRAPPER</span><span class="token operator">=</span>/opt/hisi-linux/x86-arm/arm-himix200-linux/host_bin/<span class="token punctuation">..</span>/libexec/gcc/arm-linux-gnueabi/6.3.0/lto-wrapperTarget: arm-linux-gnueabiConfigured with: /home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/src/gcc-6.3.0/configure <span class="token parameter variable">--host</span><span class="token operator">=</span>i386-redhat-linux <span class="token parameter variable">--build</span><span class="token operator">=</span>i386-redhat-linux <span class="token parameter variable">--target</span><span class="token operator">=</span>arm-linux-gnueabi <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install --enable-threads --disable-libmudflap --disable-libssp --disable-libstdcxx-pch --with-gnu-as --with-gnu-ld --enable-languages<span class="token operator">=</span>c,c++ --enable-shared --enable-lto --enable-symvers<span class="token operator">=</span>gnu --enable-__cxa_atexit --disable-nls --enable-clocale<span class="token operator">=</span>gnu --enable-extra-hisi-multilibs --with-sysroot<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install/target --with-build-sysroot<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/install/target --with-gmp<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --with-mpfr<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --with-mpc<span class="token operator">=</span>/home/sying/SDK_CPU_UNIFIED/build/script/arm-himix200-linux/arm_himix200_build_dir/obj/host-libs/usr --enable-libgomp --disable-libitm --enable-poison-system-directories --with-pkgversion<span class="token operator">=</span><span class="token string">'HC&amp;C V1R3C00SPC200B005_20190606'</span> --disable-bootstrapThread model: posixgcc version <span class="token number">6.3</span>.0 <span class="token punctuation">(</span>HC<span class="token operator">&amp;</span>C V1R3C00SPC200B005_20190606<span class="token punctuation">)</span>book@100ask:~$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>解压过程中会有这种报错，所以，要重新配置一下：</p></li></ul><p><img src="https://pic.huangruimin.tech/20211223153942.png"></p><p><img src="https://pic.huangruimin.tech/20211223154131.png"></p><ul><li>注意，在解压之前，需要把芯片的型号给确定好，就是要在</li></ul><p><img src="https://pic.huangruimin.tech/20211223165806.png"><br><img src="https://pic.huangruimin.tech/20211223165831.png"></p><ul><li>接下来就是进行解压</li></ul><p><img src="https://pic.huangruimin.tech/20211223170123.png"></p><ul><li><p>注意查阅OSDRV文件夹下的readme</p></li><li><p>荣品给的那一份，其实是编译好的，并没有重新压缩回去</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_5_官方SDK管理脚本解析</title>
      <link href="/2021/10/11/hi3516dv300-5-guan-fang-sdk-guan-li-jiao-ben-jie-xi/"/>
      <url>/2021/10/11/hi3516dv300-5-guan-fang-sdk-guan-li-jiao-ben-jie-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Hi3516CV500-SDK-V2-0-2-1解析"><a href="#1-Hi3516CV500-SDK-V2-0-2-1解析" class="headerlink" title="1.Hi3516CV500_SDK_V2.0.2.1解析"></a>1.Hi3516CV500_SDK_V2.0.2.1解析</h2><p><img src="https://pic.huangruimin.tech/20211206212307.png"><br> 可以看出</p><ul><li>官方最早推出这个芯片的时候，使用的还是SPI Flash的</li><li>smp：表示对称多核心，Hi3516DV300是双核A7，两个都是A7，那么就叫做对称。</li><li>glibc：表示用的C库，表示是用的是GCC的C库，glibc表示的是比较完善的c库</li><li>随便打开一个看看，有不同的Uboot，Kernel，Rootfs，如下图：<br> <img src="https://pic.huangruimin.tech/20211206212811.png"></li></ul><blockquote><p>2k，64k，128表示的是：block(块)大小</p></blockquote><blockquote><p>4bit，24bit：表示的是总线的大小，是根文件系统制作的差异</p></blockquote><blockquote><p>后缀表示不同的根文件系统类型</p></blockquote><blockquote><p>如果目标板用的是SPI_Flash，那么直接用这里面的就行了，但是我们用的是EMMC，对我们没用。</p></blockquote><p><img src="https://pic.huangruimin.tech/20211206214147.png"></p><blockquote><p>这里的osal，全称是：Operating System Abstract Layer</p></blockquote><blockquote><p>就是把操作系统和上层之间，定义一层，把它们隔离开，这么做，就是为了很轻松地不依赖Linux，海思上层对接osal，lite-os上层也对接osal，这样维护起来就轻松了</p></blockquote><h2 id="2-SDK管理脚本解析"><a href="#2-SDK管理脚本解析" class="headerlink" title="2.SDK管理脚本解析"></a>2.SDK管理脚本解析</h2><h3 id="2-1-sdk-cleanup脚本解析"><a href="#2-1-sdk-cleanup脚本解析" class="headerlink" title="2.1 sdk.cleanup脚本解析"></a>2.1 sdk.cleanup脚本解析</h3><ul><li>就是为了恢复到原始状态<blockquote><p>run_command_progress_float就是为了以进度条的形式运行<br>smp表示的是对称多核<br>amp表示的是非对称多核<br>这里面主要做了两个事：</p><blockquote><ul><li>删除smp</li><li>删除osdrv</li></ul></blockquote></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_4_SDK资源简介</title>
      <link href="/2021/10/10/hi3516dv300-4-sdk-zi-yuan-jian-jie/"/>
      <url>/2021/10/10/hi3516dv300-4-sdk-zi-yuan-jian-jie/</url>
      
        <content type="html"><![CDATA[<h2 id="芯片资料的获取途径"><a href="#芯片资料的获取途径" class="headerlink" title="芯片资料的获取途径"></a>芯片资料的获取途径</h2><ul><li>国内：代理商，相对来说比较封闭</li><li>国外：最Open的是TI<blockquote><p>国内的芯片厂商相对来说比较封闭，必须要找到正规的代理商，还要以公司的名义和代理商签保密协议，代理商才会给你，跟市场的推广因素有关，正规的途径：通过你的公司，联系海思的代理商，从他那边去获取。</p></blockquote></li></ul><blockquote><p>如果公司有效益，经常出货，那么他可能会给你技术支持，但是如果没什么效益，那么他可能不太理你。</p></blockquote><blockquote><p>但是网上找到的SDK包，那么是没有保障的。</p></blockquote><blockquote><p>只是拿来出课程，那么么代理商可能不太理你</p></blockquote><h2 id="实际用哪个版本"><a href="#实际用哪个版本" class="headerlink" title="实际用哪个版本"></a>实际用哪个版本</h2><ul><li>尽量使用最新的，老一个版本也不会有太大问题，特别新也不是一个好事</li></ul><h2 id="SDK进行对比"><a href="#SDK进行对比" class="headerlink" title="SDK进行对比"></a>SDK进行对比</h2><ul><li>Hi3516DV300平台官方SDK<blockquote><p>SVP_PC做芯片内部的人脸识别，跑一些深度学习的功能</p></blockquote></li></ul><blockquote><p>toolchain是开发工具链</p></blockquote><blockquote><p>00.hardware-&gt;chip目录下是Hi3516DV300的封装</p></blockquote><blockquote><p>Hi3516CV500_Middleware_V2.0.2.0.tgz 是海思的轻量级GUI框架</p></blockquote><ul><li><p>Hi3518EV200平台官方SDK对比</p><blockquote><p>相似度是非常高的</p></blockquote></li><li><p>Study16DV300SDK对比</p><blockquote><p>这一份是来自于荣品电子</p></blockquote></li></ul><blockquote><p>荣品电子是比较早去做Hi3516DV300这芯片的板子，还有方案的</p></blockquote><blockquote><p>他们拿了海思的SDK，去适配他们的板子</p></blockquote><blockquote><p>朱有鹏又参考了荣品二次开发包</p></blockquote><ul><li>学习SDK方法<blockquote><p>修改GPIO，查看Kernel中GPIO源码<br>Step1：管理脚本，文档<br>Step2：Uboot，Kernel<br>Step3：mpp</p></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_3_烧录记录2</title>
      <link href="/2021/10/09/hi3516dv300-3-shao-lu-ji-lu-2/"/>
      <url>/2021/10/09/hi3516dv300-3-shao-lu-ji-lu-2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Uboot烧录设置"><a href="#1-Uboot烧录设置" class="headerlink" title="1 Uboot烧录设置"></a>1 Uboot烧录设置</h2><ul><li>注意一定要选中烧录EMMC模式</li><li>如果Uboot已经被清除掉了，那么，就不用重新上电了</li><li>如果Uboot没有被清除，那么，就点击下载后，重新上电</li><li>按照目前的情况来看，用串口来烧写kernel，rootfs，userdata也是可以的</li><li>烧录成功的结果如下图所示：<br><img src="https://pic.huangruimin.tech/20211205202224.png"></li></ul><h2 id="2-kernel-Rootfs-UserData烧录设置"><a href="#2-kernel-Rootfs-UserData烧录设置" class="headerlink" title="2 kernel Rootfs UserData烧录设置"></a>2 kernel Rootfs UserData烧录设置</h2><ul><li>首先，特别要注意的是，通过网络烧录的时候，要关闭Windows防火墙，关闭局域网的就行了</li></ul><p><img src="https://pic.huangruimin.tech/20220120014059.png"></p><p><img src="https://pic.huangruimin.tech/20220120013941.png"></p><ul><li>本质上是通过fastboot软件，通过网口来烧录的</li><li>先选中网口，并且关闭Windows的防火墙</li><li>服务器IP，注意是PC的IP，并且注意是哪个网卡</li><li>最主要的就是填对Server IP，Board Config的话，是可以不管</li><li>烧录到哪个分区，烧录长度多大，都通过分区表文件来解析了</li><li>特别要注意的是：当Uboot起来后，还要等网络起来，才能烧录Kernel，Rootfs，UserData</li><li>烧录成功的结果<br><img src="https://pic.huangruimin.tech/20211206150905.png"></li><li>烧录的过程接入如下所示：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">SerialPort has been connented, Please power off, <span class="token keyword">then</span> power on the device.If it doesn<span class="token string">'t work, please try to repower on.# ---- 36%# ---- 100%Boot download completed!     System startupUncompress Ok!U-Boot 2016.11 (Oct 18 2021 - 15:05:04 +0800)hi3516dv300Relocation Offset is: 0f6d2000Relocating to 8fed2000, new gd at 8fe31ef0, sp at 8fe31ed0MMC:   EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix set temp-phase 3scan elemnts: startp:13 endp:2Tuning SampleClock. mix set phase:[04/07] ele:[07/15] ** First descriptor is NOT a primary desc on 0:1 **MMC/SD Card:    MID:         0x15    Read Block:  512 Bytes    Write Block: 512 Bytes    Chip Size:   7456M Bytes (High Capacity)    Name:        "8GTF4"    Chip Type:   MMC    Version:     0.0    Speed:       100000000Hz    Bus Width:   4bithimci: 0 (eMMC)In:    serialOut:   serialErr:   serialNet:   eth0Warning: eth0 (eth0) using random MAC address - 32:ff:d7:fa:75:83start download process.Boot started successfully!waiting phy ready, it will take 8s.Send command:     setenv serverip 192.168.1.7[EOT](OK)Send command:     setenv ethaddr 00:ff:98:ab:cb:c7[EOT](OK)Send command:     setenv ipaddr 192.168.1.20[EOT](OK)Send command:     setenv netmask 255.255.255.0[EOT](OK)Send command:     setenv gatewayip 192.168.1.1[EOT](OK)Send command:     getinfo ddrfreegetinfo - print hardware informationUsage:getinfo bootmode - get start memeory type e.g. nand/spi etcgetinfo nand - get nand flash informationgetinfo spi - get spi flash informationgetinfo version - get system versiongetinfo - print hardware informationUsage:getinfo bootmode - get start memeory type e.g. nand/spi etcgetinfo nand - get nand flash informationgetinfo spi - get spi flash informationgetinfo version - get system version[EOT](ERROR)      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool&gt;Send command:     mw.b 0x81000000 0xFF 0x369a00[EOT](OK)Send command:     tftp 0x81000000 uImage_hi3516dv300_smpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>uImage_hi3516dv300_smp<span class="token string">'.Load address: 0x81000000Loading: *_################################################################################       #################################################################################       ############################################################################       ############################################################       592.8 KiB/sdoneBytes transferred = 3577924 (369844 hex)[EOT](OK)Send command:     crc32 81000000 369844crc32 for 81000000 ... 81369843 ==&gt; 243e7010[EOT](OK)Send command:     mmc write 0x0 0x81000000 0x2800 0x1b4dMMC write: dev # 0, block # 10240, count 6989 ... 6989 blocks written: OK[EOT](OK)Partition kernel burned successfully!      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool&gt;      Tftp server Download Home switched to &lt;E:\Program Files (x86)\HiTool-BVT-5.2.15\HiTool&gt;Send command:     tftp 0x81000000 rootfs_hi3516dv300.ext4.tmpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>rootfs_hi3516dv300.ext4.tmp<span class="token string">'.Load address: 0x81000000LoadingiB/sdoneBytes transferred = 134215720 (7fff828 hex)[EOT](OK)Send command:     crc32 81000000 7fff828crc32 for 81000000 ... 88fff827 ==&gt; 17e26214[EOT](OK)Send command:     mmc write.ext4sp 0x0 0x81000000 0x7800 0x3fff0MMC write ext4 sparse: dev # 0, block # 30720, count 262128 ... Writing at 30736 blk# --   0% complete.Writing at 39280 blk# --   1% complete.Writing at 71280 blk# --   7% complete.Writing at 74992 blk# --   8% complete.Writing at 78800 blk# --   9% complete.Writing at 83440 blk# --  10% complete.Writing at 92192 blk# --  11% complete.Writing at 93888 blk# --  12% complete.Writing at 99072 blk# --  13% complete.Writing at 107408 blk# --  14% complete.Writing at 109472 blk# --  15% complete.Writing at 115264 blk# --  16% complete.Writing at 119872 blk# --  17% complete.Writing at 125264 blk# --  18% complete.Writing at 131200 blk# --  19% complete.Writing at 136448 blk# --  20% complete.Writing at 140944 blk# --  21% complete.Writing at 146192 blk# --  22% complete.Writing at 151632 blk# --  23% complete.Writing at 157552 blk# --  24% complete.Writing at 162432 blk# --  25% complete.Writing at 177808 blk# --  28% complete.Writing at 184560 blk# --  29% complete.Writing at 188016 blk# --  30% complete.Writing at 193328 blk# --  31% complete.Writing at 198656 blk# --  32% complete.Writing at 204016 blk# --  33% complete.Writing at 209872 blk# --  34% complete.Writing at 217296 blk# --  35% complete.Writing at 219696 blk# --  36% complete.Writing at 236208 blk# --  39% complete.Writing at 248784 blk# --  41% complete.Writing at 252928 blk# --  42% complete.Writing at 270112 blk# --  45% complete.Writing at 281776 blk# --  47% complete.Writing at 293760 blk# --  50% complete.Writing at 306512 blk# --  52% complete.Writing at 319536 blk# --  55% complete.Writing at 337424 blk# --  58% complete.Writing at 343472 blk# --  59% complete.Writing at 363744 blk# --  63% complete.Writing at 370848 blk# --  64% complete.Writing at 393840 blk# --  69% complete.Writing at 413168 blk# --  72% complete.Writing at 414672 blk# --  73% complete.Writing at 422560 blk# --  74% complete.Writing at 425920 blk# --  75% complete.Writing at 431664 blk# --  76% complete.Writing at 435632 blk# --  77% complete.Writing at 454160 blk# --  80% complete.Writing at 456432 blk# --  81% complete.Writing at 465008 blk# --  82% complete.Writing at 467696 blk# --  83% complete.Writing at 472064 blk# --  84% complete.Writing at 476704 blk# --  85% complete.Writing at 499680 blk# --  89% complete.Writing at 515600 blk# --  92% complete.Writing at 518288 blk# --  93% complete.Writing at 523856 blk# --  94% complete.Writing at 531200 blk# --  95% complete.Writing at 534208 blk# --  96% complete.Writing at 539376 blk# --  97% complete.Writing at 550032 blk# --  99% complete.Writing at 554976 blk# -- 100% complete.sparse: 127 MB / 127 MB.[EOT](OK)Successfully burnt sparse file part 1 to the device.File process: 51%Send command:     tftp 0x81000000 rootfs_hi3516dv300.ext4.tmpHisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>rootfs_hi3516dv300.ext4.tmp<span class="token string">'.Load address: 0x81000000LoadingiB/sdoneBytes transferred = 131223900 (7d2515c hex)[EOT](OK)Send command:     crc32 81000000 7d2515ccrc32 for 81000000 ... 88d2515b ==&gt; f0bda6da[EOT](OK)Send command:     mmc write.ext4sp 0x0 0x81000000 0x477f0 0xba010MMC write ext4 sparse: dev # 0, block # 292848, count 761872 ... Writing at 292864 blk# --   0% complete.Writing at 308400 blk# --   1% complete.Writing at 323328 blk# --   2% complete.Writing at 338576 blk# --   3% complete.Writing at 369408 blk# --   5% complete.Writing at 394144 blk# --   6% complete.Writing at 419152 blk# --   8% complete.Writing at 436704 blk# --   9% complete.Writing at 452272 blk# --  10% complete.Writing at 467856 blk# --  11% complete.Writing at 483280 blk# --  12% complete.Writing at 498656 blk# --  13% complete.Writing at 514192 blk# --  14% complete.Writing at 529600 blk# --  15% complete.Writing at 554816 blk# --  17% complete.Writing at 570256 blk# --  18% complete.Writing at 589168 blk# --  19% complete.Writing at 609072 blk# --  20% complete.Writing at 624480 blk# --  21% complete.Writing at 632784 blk# --  22% complete.Writing at 648736 blk# --  23% complete.Writing at 664512 blk# --  24% complete.Writing at 679936 blk# --  25% complete.Writing at 695456 blk# --  26% complete.Writing at 707664 blk# --  27% complete.Writing at 723408 blk# --  28% complete.Writing at 739280 blk# --  29% complete.Writing at 751472 blk# --  30% complete.Writing at 779968 blk# --  31% complete.Writing at 780448 blk# --  32% complete.Writing at 795856 blk# --  33% complete.Writing at 812032 blk# --  34% complete.Writing at 1341456 blk# --  68% complete.Writing at 1816592 blk# -- 100% complete.sparse: 125 MB / 372 MB.[EOT](OK)Successfully burnt sparse file part 2 to the device.File process: 100%Partition rootfs burned successfully!      Tftp server Download Home switched to &lt;J:\IMG_For_HiTool\userdata_dv300\imx307_2l&gt;Send command:     mw.b 0x81000000 0xFF 0x5aa200[EOT](OK)Send command:     tftp 0x81000000 userdata-HDMI-2imx307.ext4Hisilicon ETH net controlereth0 : phy status change : LINK=DOWN : DUPLEX=FULL : SPEED=100Meth0 : phy status change : LINK=UP : DUPLEX=FULL : SPEED=100MUsing eth0 deviceTFTP from server 192.168.1.7; our IP address is 192.168.1.20Filename '</span>userdata-HDMI-2imx307.ext4'.Load address: 0x81000000Loading: *_<span class="token comment">#############################################################################</span>       <span class="token comment">###############################################################################</span>       <span class="token comment">############################################################################</span>       <span class="token comment">#############################################################################</span>       <span class="token comment">#############################################################################</span>       <span class="token comment">############################################################################</span>       <span class="token comment">################</span>       <span class="token number">927.7</span> KiB/s<span class="token keyword">done</span>Bytes transferred <span class="token operator">=</span> <span class="token number">5939408</span> <span class="token punctuation">(</span>5aa0d0 hex<span class="token punctuation">)</span><span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Send command:     crc32 <span class="token number">81000000</span> 5aa0d0crc32 <span class="token keyword">for</span> <span class="token number">81000000</span> <span class="token punctuation">..</span>. 815aa0cf <span class="token operator">==</span><span class="token operator">&gt;</span> d2561d2a<span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Send command:     mmc write.ext4sp 0x0 0x81000000 0x101800 0x64000MMC <span class="token function">write</span> ext4 sparse: dev <span class="token comment"># 0, block # 1054720, count 409600 ... </span>Writing at <span class="token number">1054736</span> blk<span class="token comment"># --   0% complete.</span>Writing at <span class="token number">1077808</span> blk<span class="token comment"># --   2% complete.</span>Writing at <span class="token number">1579008</span> blk<span class="token comment"># --  64% complete.</span>Writing at <span class="token number">1873920</span> blk<span class="token comment"># -- 100% complete.</span>sparse: <span class="token number">5</span> MB / <span class="token number">200</span> MB.<span class="token punctuation">[</span>EOT<span class="token punctuation">]</span><span class="token punctuation">(</span>OK<span class="token punctuation">)</span>Partition userdata burned successfully<span class="token operator">!</span>Partition burnt completed<span class="token operator">!</span>Send command:     resetreset success<span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这个，本质都是fastboot这一套</li><li>4个一起烧写也是可以的</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hi3516DV300_2_烧录记录1</title>
      <link href="/2021/10/08/hi3516dv300-2-shao-lu-ji-lu-1/"/>
      <url>/2021/10/08/hi3516dv300-2-shao-lu-ji-lu-1/</url>
      
        <content type="html"><![CDATA[<h2 id="1-分区及相关参数"><a href="#1-分区及相关参数" class="headerlink" title="1.分区及相关参数"></a>1.分区及相关参数</h2><ul><li>分区大小一般自己留有余量，分区大小，自己定，比实际镜像大小大一些就可以。</li><li>分区大小改了，相应的参数也要发生变化：</li></ul><blockquote><p>bootcmd：Uboot启动好了之后，Uboot会自动执行bootcmd这个环境变量，这个环境变量里面的主要内容就是告诉我们：kernel在什么地方，然后就可以读取内核到DDR里面去，然后再去启动内核。bootcmd如果设错了，uboot就找不到内核镜像，或找到的内核镜像是错的。</p></blockquote><blockquote><p>bootargs：是uboot给kernel的传参，影响的是内核启动的过程。这个如果不对，将来内核在启动的时候，可能启动到一半，就死掉了。</p></blockquote><ul><li><p>fastboot：Hitool内部也是用fastboot来烧录，但是封装好了，可以不用去管他，通过分区表文件来计算出具体参数。</p></li><li><p>启动并进入Uboot后的界面，注意要启动的那几秒按一下</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">System startupUncompress Ok<span class="token operator">!</span>U-Boot <span class="token number">2016.11</span> <span class="token punctuation">(</span>Oct <span class="token number">18</span> <span class="token number">2021</span> - <span class="token number">15</span>:05:04 +0800<span class="token punctuation">)</span>hi3516dv300Relocation Offset is: 0f6d2000Relocating to 8fed2000, new gd at 8fe31ef0, sp at 8fe31ed0MMC:EMMC/MMC/SD controller initialization.scan edges:2 p2f:6 f2p:1mix <span class="token builtin class-name">set</span> temp-phase <span class="token number">3</span>scan elemnts: startp:12 endp:120Tuning SampleClock. mix <span class="token builtin class-name">set</span> phase:<span class="token punctuation">[</span>04/07<span class="token punctuation">]</span> ele:<span class="token punctuation">[</span>06/15<span class="token punctuation">]</span>** First descriptor is NOT a primary desc on <span class="token number">0</span>:1 **MMC/SD Card:    MID:         0x15    Read Block:  <span class="token number">512</span> Bytes    Write Block: <span class="token number">512</span> Bytes    Chip Size:   7456M Bytes <span class="token punctuation">(</span>High Capacity<span class="token punctuation">)</span>    Name:        <span class="token string">"8GTF4"</span>    Chip Type:   MMC    Version:     <span class="token number">0.0</span>    Speed:       100000000Hz    Bus Width:   4bithimci: <span class="token number">0</span> <span class="token punctuation">(</span>eMMC<span class="token punctuation">)</span>In:    serialOut:   serialErr:   serialNet:   eth0Warning: eth0 <span class="token punctuation">(</span>eth0<span class="token punctuation">)</span> using random MAC address - ce:07:43:a5:2b:a5Writing to MMC<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token keyword">done</span>Hit any key to stop autoboot:  <span class="token number">0</span>hisilicon <span class="token comment">#</span>hisilicon <span class="token comment"># printenv</span><span class="token assign-left variable">arch</span><span class="token operator">=</span>arm<span class="token assign-left variable">baudrate</span><span class="token operator">=</span><span class="token number">115200</span><span class="token assign-left variable">board</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">board_name</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">bootargs</span><span class="token operator">=</span>mem<span class="token operator">=</span>512M <span class="token assign-left variable">console</span><span class="token operator">=</span>ttyAMA0,115200 <span class="token assign-left variable">root</span><span class="token operator">=</span>/dev/mmcblk0p3 <span class="token assign-left variable">rootfstype</span><span class="token operator">=</span>ext4 rw rootwait <span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token assign-left variable">bootcmd</span><span class="token operator">=</span>mmc <span class="token builtin class-name">read</span> <span class="token number">0</span> 0x81000000 0x2800 0x4000<span class="token punctuation">;</span>bootm 0x81000000<span class="token assign-left variable">bootdelay</span><span class="token operator">=</span><span class="token number">1</span><span class="token assign-left variable">cpu</span><span class="token operator">=</span>armv7<span class="token assign-left variable">ethact</span><span class="token operator">=</span>eth0<span class="token assign-left variable">soc</span><span class="token operator">=</span>hi3516dv300<span class="token assign-left variable">stderr</span><span class="token operator">=</span>serial<span class="token assign-left variable">stdin</span><span class="token operator">=</span>serial<span class="token assign-left variable">stdout</span><span class="token operator">=</span>serial<span class="token assign-left variable">vendor</span><span class="token operator">=</span>hisilicon<span class="token assign-left variable">verify</span><span class="token operator">=</span>nEnvironment size: <span class="token number">441</span>/262140 byteshisilicon <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="2-分析一下blkdevparts-分区表"><a href="#2-分析一下blkdevparts-分区表" class="headerlink" title="2.分析一下blkdevparts(分区表)"></a>2.分析一下blkdevparts(分区表)</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">blkdevparts</span><span class="token operator">=</span>mmcblk0:5M<span class="token punctuation">(</span>boot<span class="token punctuation">)</span>,10M<span class="token punctuation">(</span>kernel<span class="token punctuation">)</span>,500M<span class="token punctuation">(</span>rootfs<span class="token punctuation">)</span>,200M<span class="token punctuation">(</span>userdata<span class="token punctuation">)</span>,-<span class="token punctuation">(</span>user<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>其中-(user)表示的就是剩余的<br>mmcblk0表示的是第0个设备的设备文件名</p></blockquote><blockquote><p>分析一下分区表:</p><blockquote><p>首先一共5个分区(包括一个剩下的用户分区，后面需要去挂载这个分区)</p></blockquote></blockquote><h2 id="3-分析一下bootcmd"><a href="#3-分析一下bootcmd" class="headerlink" title="3.分析一下bootcmd"></a>3.分析一下bootcmd</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">bootcmd</span><span class="token operator">=</span>mmc <span class="token builtin class-name">read</span> <span class="token number">0</span> 0x81000000 0x2800 0x4000<span class="token punctuation">;</span>bootm 0x81000000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>mmc read 0 表示读取的第0个mmc设备</p></blockquote><blockquote><p>0x81000000 这个表示DDR的地址</p></blockquote><blockquote><p>0x2800 这个表示eMMC的地址，这就是从eMMC的这个地址读取kernel到DDR中去</p><blockquote><p>具体计算方法：<br>0x2800(hex mode)-&gt;10240(dec mode)<br>10240(dec mode) * 512(byte)= 5,242,880(byte)<br>5,242,880(byte) / 1024 = 5120(kb)<br>5120(kb) / 1024 = 5(M)</p></blockquote></blockquote><blockquote><p>0x4000 这个表示读取多长</p><blockquote><p>具体计算方法为：<br>0x4000(hex mode)-&gt;16,384(dec mode)<br>16,384(dec mode) * 512(byte)= 8,388,608(byte)<br>8,388,608(byte) / 1024 = 8,192(kb)<br>8,192(kb) / 1024 = 8(M)</p></blockquote></blockquote><p>这里实际上只读取了8M，是不对的，但不影响(因为实际的kernel只有3M)，正确的做法是在这里读取10M</p><blockquote><p>10 * 1024 * 1024 / 512 (dec mode) -&gt; 50000(hex mode)</p></blockquote><p>修改的方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setenv bootcmd <span class="token string">"mmc read 0 0x81000000 0x2800 0x5000; bootm 0x81000000"</span><span class="token function">printenv</span>saveenv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>寻找破坏原有的uboot的命令：<br>首先输入help<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hisilicon <span class="token comment"># help</span>?       - <span class="token builtin class-name">alias</span> <span class="token keyword">for</span> <span class="token string">'help'</span>base    - print or <span class="token builtin class-name">set</span> address offsetbdinfo  - print Board Info structureboot    - boot default, i.e., run <span class="token string">'bootcmd'</span>bootd   - boot default, i.e., run <span class="token string">'bootcmd'</span>bootelf - Boot from an ELF image <span class="token keyword">in</span> memorybootm   - boot application image from memorybootp   - boot image via network using BOOTP/TFTP protocolbootvx  - Boot vxWorks from an ELF imagecipher_test- CIPHER Encrypt And Decrypt Test<span class="token function">cmp</span>     - memory compareconinfo - print console devices and information<span class="token function">cp</span>      - memory copycrc32   - checksum calculationdcache  - <span class="token builtin class-name">enable</span> or disable data cacheddr     - ddr training <span class="token keyword">function</span>decjpg  - jpgd   - decode jpeg picture.decjpg <span class="token punctuation">[</span>format<span class="token punctuation">]</span>dhcp    - boot image via network using DHCP/TFTP protocoldm      - Driver model low level access<span class="token builtin class-name">echo</span>    - <span class="token builtin class-name">echo</span> args to consoleeditenv - edit environment variable<span class="token function">env</span>     - environment handling commandserase   - erase FLASH memory<span class="token builtin class-name">exit</span>    - <span class="token builtin class-name">exit</span> script<span class="token boolean">false</span>   - <span class="token keyword">do</span> nothing, unsuccessfullyfatinfo - print information about filesystemfatload - load binary <span class="token function">file</span> from a dos filesystemfatls   - list files <span class="token keyword">in</span> a directory <span class="token punctuation">(</span>default /<span class="token punctuation">)</span>fatsize - determine a <span class="token function">file</span><span class="token string">'s sizeflinfo  - print FLASH memory informationgetinfo - print hardware informationgo      - start application at address '</span>addr'go_cpu1 - Perform power on and unreset  CPU1_A7gzwrite - <span class="token function">unzip</span> and <span class="token function">write</span> memory to block device<span class="token builtin class-name">hash</span>    - Calcluate <span class="token builtin class-name">hash</span>hash_test- hash_test <span class="token punctuation">[</span>x<span class="token punctuation">]</span>:<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> SHA1<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> SHA256<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> HMAC-SHA1<span class="token punctuation">;</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> HMAC-SHA256<span class="token punctuation">;</span><span class="token builtin class-name">help</span>    - print <span class="token builtin class-name">command</span> description/usageicache  - <span class="token builtin class-name">enable</span> or disable instruction cacheiminfo  - print header information <span class="token keyword">for</span> application imageimxtract- extract a part of a multi-imageitest   - <span class="token builtin class-name">return</span> true/false on integer compareklad_test- KLAD Testloadb   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>kermit mode<span class="token punctuation">)</span>loads   - load S-Record <span class="token function">file</span> over serial lineloadx   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>xmodem mode<span class="token punctuation">)</span>loady   - load binary <span class="token function">file</span> over serial line <span class="token punctuation">(</span>ymodem mode<span class="token punctuation">)</span>loop    - infinite loop on address rangemd      - memory displaymii     - MII utility commandsmm      - memory modify <span class="token punctuation">(</span>auto-incrementing address<span class="token punctuation">)</span>mmc     - MMC sub systemmmcinfo - display MMC infomw      - memory <span class="token function">write</span> <span class="token punctuation">(</span>fill<span class="token punctuation">)</span>nfs     - boot image via network using NFS protocolnm      - memory modify <span class="token punctuation">(</span>constant address<span class="token punctuation">)</span>part    - disk partition related commands<span class="token function">ping</span>    - send ICMP ECHO_REQUEST to network <span class="token function">host</span>printenv- print environment variablesprotect - <span class="token builtin class-name">enable</span> or disable FLASH <span class="token function">write</span> protectionpxe     - commands to get and boot from pxe filesreset   - Perform RESET of the CPUrng_test- RNG Testrsa_enc_test- RSA PKCS1<span class="token comment"># V1_5 encrypt/decrypt Test</span>rsa_sign_test- RSA PKCS1<span class="token comment"># V1_5 Sign Test</span>run     - run commands <span class="token keyword">in</span> an environment variablesaveenv - save environment variables to persistent storagesetenv  - <span class="token builtin class-name">set</span> environment variablessetexpr - <span class="token builtin class-name">set</span> environment variable as the result of <span class="token builtin class-name">eval</span> expressionsetvobg - setvobg   - <span class="token builtin class-name">set</span> vo backgroud color.        - setvobg <span class="token punctuation">[</span>dev color<span class="token punctuation">]</span>showvar - print <span class="token builtin class-name">local</span> hushshell variables<span class="token function">sleep</span>   - delay execution <span class="token keyword">for</span> some <span class="token function">time</span><span class="token builtin class-name">source</span>  - run script from memorystartgx - startgx   - <span class="token function">open</span> graphics layer.        - startgx <span class="token punctuation">[</span>layer addr stride x y w h<span class="token punctuation">]</span>startvl - startvl   - <span class="token function">open</span> video layer.        - startvl <span class="token punctuation">[</span>layer addr stride x y w h<span class="token punctuation">]</span>startvo - startvo   - <span class="token function">open</span> vo device with a certain output interface.        - startvo <span class="token punctuation">[</span>dev intftype sync<span class="token punctuation">]</span>stopgx  - stopgx   - close graphics layer.        - stopgx <span class="token punctuation">[</span>layer<span class="token punctuation">]</span>stopvl  - stopvl   - close video layer.        - stopvl <span class="token punctuation">[</span>layer<span class="token punctuation">]</span>stopvo  - stopvo   - close interface of vo device.        - stopvo <span class="token punctuation">[</span>dev<span class="token punctuation">]</span>sysboot - <span class="token builtin class-name">command</span> to get and boot from syslinux files<span class="token builtin class-name">test</span>    - minimal <span class="token builtin class-name">test</span> like /bin/shtftpboot- boot image via network using TFTP protocol<span class="token boolean">true</span>    - <span class="token keyword">do</span> nothing, successfully<span class="token function">unzip</span>   - <span class="token function">unzip</span> a memory regionusb     - USB sub-systemusbboot - boot from USB deviceusbtftp - download or upload image using USB protocolversion - print monitor, compiler and linker versionhisilicon <span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>接着输入help mmc<pre class="line-numbers language-none"><code class="language-none">help mmcmmc - MMC sub systemUsage:mmc info - display info of the current MMC devicemmc reg [dev] - display register of the current MMC devicemmc read dev addr blk# cntmmc write dev addr blk# cntmmc erase blk# cntmmc rescanmmc part - lists available partition on current mmc devicemmc dev [dev] [part] - show or set current mmc device [partition]mmc list - lists available devicesmmc hwpartition [args...] - does hardware partitioning  arguments (sizes in 512-byte blocks):    [user [enh start cnt] [wrrel {on|off}]] - sets user data area attributes    [gp1|gp2|gp3|gp4 cnt [enh] [wrrel {on|off}]] - general purpose partition    [check|set|complete] - mode, complete set partitioning completed  WARNING: Partitioning is a write-once setting once it is set to complete.  Power cycling is required to initialize partitions after set to complete.mmc bootbus dev boot_bus_width reset_boot_bus_width boot_mode - Set the BOOT_BUS_WIDTH field of the specified devicemmc bootpart-resize &lt;dev&gt; &lt;boot part size MB&gt; &lt;RPMB part size MB&gt; - Change sizes of boot and RPMB partitions of specified devicemmc partconf dev boot_ack boot_partition partition_access - Change the bits of the PARTITION_CONFIG field of the specified devicemmc rst-function dev value - Change the RST_n_FUNCTION field of the specified device   WARNING: This is a write-once field and 0 / 1 / 2 are the only valid values.mmc setdsr &lt;value&gt; - set DSR register valuehisilicon #<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>最后进行擦除操作<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mmc <span class="token function">write</span> dev addr blk<span class="token comment"># cnt</span>mmc erase blk<span class="token comment"># cnt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>其中#表示从那个blk开始擦除，cnt表示擦除多少个blk<br>这里的cnt也是以512byte为单位的</p></blockquote></li></ul><blockquote><blockquote><p>这里擦除uboot是从0地址开始的，其中的blk#，那么也就是0了<br>假设是300K<br>300 * 1024 / 512 = 600 cnt</p></blockquote></blockquote><blockquote><p>所以就这样擦除：<br>这里保险起见，擦除1000个cnt<br>1000(dec)-&gt;03E8(hex)</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mmc erase <span class="token number">0</span> 0x03E8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>擦除后不会有任何反应，是因为uboot和kernel已经加载到DDR去运行了</p></blockquote><blockquote><p>现在去重启，串口就不会有输出了</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HI3516DV300_1_下载准备</title>
      <link href="/2021/10/07/hi3516dv300-1-xia-zai-zhun-bei/"/>
      <url>/2021/10/07/hi3516dv300-1-xia-zai-zhun-bei/</url>
      
        <content type="html"><![CDATA[<h2 id="烧录说明"><a href="#烧录说明" class="headerlink" title="烧录说明"></a>烧录说明</h2><ul><li>不同厂家的芯片，甚至是不同平台的，烧录都是有差别的</li><li>内部也是有代码，出厂只有一段内部代码，与功能无关</li></ul><h2 id="两个下载阶段"><a href="#两个下载阶段" class="headerlink" title="两个下载阶段"></a>两个下载阶段</h2><ul><li>裸机下载uboot.bin，使用HiTool软件，通过串口</li><li>基于uboot运行后的fastboot，使用HiTool或其他软件，通过网口或USB口</li></ul><h2 id="出厂默认镜像介绍"><a href="#出厂默认镜像介绍" class="headerlink" title="出厂默认镜像介绍"></a>出厂默认镜像介绍</h2><ul><li><p>在网盘里，共4个，等于是做了4个分区，好处是把配置独立于rootfs，避免每个产品烧录不同的rootfs<br><img src="https://pic.huangruimin.tech/20211204222045.png"></p></li><li><p>HiTool安装的核心是HiBurn软件，目前使用的是：HiTool-BVT-5.2.15，默认是已经自带了JRE</p></li><li><p>一开始不要点左上角的连接符号</p></li><li><p>里面集成了TFTP工具，也可以使用</p></li><li><p>选择Network后，在Board Config那个地方，一般是会通过串口，把这个Config信息设置到板端的，最好设置成和板端一样，如果没有设置成一样，一般来说，也是没关系的</p></li><li><p>Burn by Partition</p><blockquote><p>早期是不用EMMC的，用的是：SPI NAND/ NAND和SPI NOR，所以，现在应当是烧写EMMC</p></blockquote></li><li><p>Burn eMMC</p><blockquote><p>前面三个都是老的，千万别去用<br>应当选择的是这个：Burn eMMC<br>uboot分区，是二进制的，不需要选择文件系统<br>Kernel的uImage，也是二进制的，不需要选择文件系统<br>注意要设置开始地址和长度<br>可以直接打开XML文件进行配置</p></blockquote></li><li><p>Merge Image</p><blockquote><p>作用是把这几个镜像合并成1个镜像<br>这个是量产的时候使用的</p></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何为RPi交叉编译特定版本的支持v4l2的.ko以及.dtb</title>
      <link href="/2021/10/07/ru-he-wei-rpi-jiao-cha-bian-yi-te-ding-ban-ben-de-zhi-chi-v4l2-de.ko-yi-ji.dtb/"/>
      <url>/2021/10/07/ru-he-wei-rpi-jiao-cha-bian-yi-te-ding-ban-ben-de-zhi-chi-v4l2-de.ko-yi-ji.dtb/</url>
      
        <content type="html"><![CDATA[<h2 id="0-背景"><a href="#0-背景" class="headerlink" title="0 背景"></a>0 背景</h2><p>我在以前一个版本的64bit树莓派系统上，搭建了很多环境，现在，这个64bit的树莓派系统需要接入IMX385，目前只有v4l2这种方案(64bit的树莓派系统删除了一些库，树莓派原生相机也就不支持)。</p><p>但悲催的是，目前veye在Github提供的源码，只支持内核版本为5.10.92-v8+的树莓派，也就是只支持比较新版本的树莓派进行，然而我的树莓派系统内核版本为5.10.63-v8+，veye官方的源码也就不支持。</p><blockquote><p>解决方法一：更换内核版本为5.10.92-v8+的树莓派系统，但有点不太现实，我搭建了很多环境，特别是很多深度学习的推理环境，这样再折腾明显不现实。</p></blockquote><blockquote><p>解决方法二：交叉编译一个支持5.10.63-v8+的.ko以及.dtb，这个工作量会少很多，接下来就开始。</p></blockquote><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h2><blockquote><p> 开发环境准备，在虚拟机Ubuntu18.04中操作</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span> <span class="token function">bc</span> bison flex libssl-dev <span class="token function">make</span> libc6-dev libncurses5-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> crossbuild-essential-arm64<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>确认自己的树莓派上的piOS版本，以下动作在树莓派上面完成</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">uname</span> <span class="token parameter variable">-r</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223036.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/ko_dev<span class="token function">cp</span> /usr/share/doc/raspberrypi-bootloader/changelog.Debian.gz ./<span class="token function">vi</span> changelog.Debian<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223131.png"></p><blockquote><p>从下面的连接下载源码</p></blockquote><p><a href="http://github.com/raspberrypi/linux/tags">Github源码链接</a></p><p><img src="http://pic.huangruimin.tech/20220320223241.png"></p><blockquote><p>将获取到的源码放虚拟机上</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222937.png"></p><h2 id="2-给源代码打补丁"><a href="#2-给源代码打补丁" class="headerlink" title="2 给源代码打补丁"></a>2 给源代码打补丁</h2><blockquote><p>以下动作在虚拟机中进行，打补丁</p></blockquote><blockquote><p>进入到第一个需要打补丁的地方</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./drivers/media/i2c/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>先删掉要被替换的文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Kconfig<span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>将以下文件copy到虚拟机中</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222018.png"></p><blockquote><p>继续拷贝文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222304.png"></p><blockquote><p>进入到第二个需要打补丁的地方</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./arch/arm/boot/dts/overlays<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>删除需要被替换的文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">rm</span> <span class="token parameter variable">-rf</span> ./Makefile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>拷贝文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320222801.png"></p><blockquote><p>其中要去替换的Makefile中是多了以下内容</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">csimx307-dual-cm4.dtbo<span class="token punctuation">\</span>csimx307.dtbo<span class="token punctuation">\</span>cssc132-dual-cm4.dtbo<span class="token punctuation">\</span>cssc132.dtbo<span class="token punctuation">\</span>veye327-dual-cm4.dtbo<span class="token punctuation">\</span>veye327.dtbo<span class="token punctuation">\</span>veyecam2m-dual-cm4.dtbo<span class="token punctuation">\</span>veyecam2m.dtbo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-开始编译源码"><a href="#3-开始编译源码" class="headerlink" title="3 开始编译源码"></a>3 开始编译源码</h2><blockquote><p>首先是编译准备</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token assign-left variable">KERNEL</span><span class="token operator">=</span>kernel8<span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- bcm2711_defconfi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>然后是增加编译选项</p><blockquote><p>5.10版本kernel的路径是Device Drivers –&gt; Multimedia Support –&gt; Media ancillary drivers –&gt; Camera sensor devices</p></blockquote></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320223827.png"></p><blockquote><p>接着是开始编译内核，模块，设备树</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- Image modules dtbs <span class="token parameter variable">-j4</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="4-将编译结果导出"><a href="#4-将编译结果导出" class="headerlink" title="4 将编译结果导出"></a>4 将编译结果导出</h2><blockquote><p>导出模块文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./drivers/media/i2c/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以下为需要导出的文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224431.png"></p><blockquote><p>导出设备树二进制文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ./arch/arm/boot/dts/overlays<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以下为需要导出的二进制文件</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224801.png"></p><blockquote><p>最终导出的驱动模块文件，设备树二进制文件，放在PC的下列文件夹中</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320224908.png"></p><blockquote><p>需要将最终导出的文件放到树莓派的Veye V4L2源码的路径下</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Veye_Camera_V4L2/raspberrypi_v4l2-main/release/driver_bin/5.10.63-v8+<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320225151.png"></p><blockquote><p>然后通过脚本在树莓派上安装驱动模块以及设备树二进制文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Veye_Camera_V4L2/raspberrypi_v4l2-main/release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> ./install_driver.sh veyecam2m<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320225525.png"></p><blockquote><p>此时，重新开机还不能用，只有内核，以及驱动模块，还有设备树二进制文件都替换掉了，才有用，也就是下一步</p></blockquote><h2 id="5-将编译结果导出到TF卡"><a href="#5-将编译结果导出到TF卡" class="headerlink" title="5 将编译结果导出到TF卡"></a>5 将编译结果导出到TF卡</h2><blockquote><p>首先查看tf卡是否正常插入</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsblk <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>然后，建立挂载目录</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi<span class="token function">mkdir</span> mnt<span class="token function">mkdir</span> mnt/fat32<span class="token function">mkdir</span> mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>挂载文件</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi<span class="token function">sudo</span> <span class="token function">mount</span> /dev/sdb1 ./mnt/fat32<span class="token function">sudo</span> <span class="token function">mount</span> /dev/sdb2 ./mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>安装驱动模块到TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">env</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span> <span class="token function">make</span> <span class="token assign-left variable">ARCH</span><span class="token operator">=</span>arm64 <span class="token assign-left variable">CROSS_COMPILE</span><span class="token operator">=</span>aarch64-linux-gnu- <span class="token assign-left variable">INSTALL_MOD_PATH</span><span class="token operator">=</span><span class="token punctuation">..</span>/mnt/ext4 modules_install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>备份原版kernel</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/mnt/fat32<span class="token function">cp</span> ./kernel8.img ./kernel8_bak.img<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>安装kernel，以及设备树二进制文件到TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/Image <span class="token punctuation">..</span>/mnt/fat32/kernel8.img <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/broadcom/*.dtb <span class="token punctuation">..</span>/mnt/fat32/ <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/overlays/*.dtb* <span class="token punctuation">..</span>/mnt/fat32/overlays/ <span class="token parameter variable">-f</span><span class="token function">sudo</span> <span class="token function">cp</span> arch/arm64/boot/dts/overlays/README <span class="token punctuation">..</span>/mnt/fat32/overlays/ <span class="token parameter variable">-f</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>卸载挂载的TF卡</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/book/RPi/linux-oldstable_20211201<span class="token function">sudo</span> <span class="token function">umount</span> <span class="token punctuation">..</span>/mnt/fat32<span class="token function">sudo</span> <span class="token function">umount</span> <span class="token punctuation">..</span>/mnt/ext4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-虚拟机，主机弹出TF卡，插入到树莓派"><a href="#6-虚拟机，主机弹出TF卡，插入到树莓派" class="headerlink" title="6 虚拟机，主机弹出TF卡，插入到树莓派"></a>6 虚拟机，主机弹出TF卡，插入到树莓派</h2><blockquote><p>到这一步，即完成IMX385的V4L2的移植了</p></blockquote><p><img src="http://pic.huangruimin.tech/20220320230934.png"></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20220320231014.png"></p><p><img src="http://pic.huangruimin.tech/20220320231101.png"></p><p><img src="http://pic.huangruimin.tech/20220320231048.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>I2C转16路PWM</title>
      <link href="/2021/09/07/i2c-zhuan-16-lu-pwm/"/>
      <url>/2021/09/07/i2c-zhuan-16-lu-pwm/</url>
      
        <content type="html"><![CDATA[<h2 id="1-基本介绍"><a href="#1-基本介绍" class="headerlink" title="1 基本介绍"></a>1 基本介绍</h2><h3 id="1-1-该IC主要参数特征如下："><a href="#1-1-该IC主要参数特征如下：" class="headerlink" title="1.1 该IC主要参数特征如下："></a>1.1 该IC主要参数特征如下：</h3><ul><li>I2C接口，支持高达16路PWM输出，每路12位分辨率(4096级)</li><li>内置25MHz晶振，可不连接外部晶振，也可以连接外部晶振，最大50MHz</li><li>支持2.3V-5.5V电压，最大耐压值5.5V,逻辑电平3.3V</li><li>具有上电复位，以及软件复位等功能<br><img src="http://pic.huangruimin.tech/20190518024522.png"><br><strong>注</strong>：本教程侧重PCA9685的PWM输出，但PCA9685亦可用于WS2812等LED颜色控制等。</li></ul><h3 id="1-2-控制精度"><a href="#1-2-控制精度" class="headerlink" title="1.2 控制精度"></a>1.2 控制精度</h3><p>假设舵机为50HZ的控制频率，脉宽为0.5ms~2.5ms，12位分辨率(4096级)，相关精度计算如下：</p><ul><li><p>PWM周期：<br><img src="http://pic.huangruimin.tech/20190518130821.png"></p></li><li><p>时间分辨率：<br><img src="http://pic.huangruimin.tech/20190518130904.png"></p></li><li><p>最大脉宽时间：<br><img src="http://pic.huangruimin.tech/20190518130937.png"></p></li><li><p>最大脉宽时间可分成的份数：<br><img src="http://pic.huangruimin.tech/20190518131003.png"></p></li><li><p>0-180度的舵机，角度分辨率：<br><img src="http://pic.huangruimin.tech/20190518131028.png"></p></li></ul><h2 id="2-硬件参数"><a href="#2-硬件参数" class="headerlink" title="2 硬件参数"></a>2 硬件参数</h2><h3 id="2-1-封装及引脚排列"><a href="#2-1-封装及引脚排列" class="headerlink" title="2.1 封装及引脚排列"></a>2.1 封装及引脚排列</h3><p>PCA9685有两种封装：TSSOP28, HVQFN28，其相应的引脚排列如下图所示：<br><img src="http://pic.huangruimin.tech/20190518024735.png"><br>引脚功能描述如下图所示：<br><img src="http://pic.huangruimin.tech/20190518024833.png"><br><img src="http://pic.huangruimin.tech/20190518024855.png"></p><h3 id="2-2-器件地址"><a href="#2-2-器件地址" class="headerlink" title="2.2 器件地址"></a>2.2 器件地址</h3><p>PCA9685的器件地址是由引脚A0，A1，A2，A3，A4，A5共同决定，并且该引脚不可悬空，由于有6个引脚共同决定器件地址，因此，可以有64个器件地址，由于该IC上电便保留LED All Call address (E0h，1110 000)以及Software Reset address(06h，0000 0110)，实际仅有62个可用器件地址，因此，理论上，1个I2C接口可控制16*62=992路PWM，其引脚控制器件地址的示意图如下图所示：<br><img src="http://pic.huangruimin.tech/20190518025127.png"><br>默认情况下，若将A0-A5全部接地，则其器件地址为:0x40。</p><h3 id="2-3-寄存器及其地址"><a href="#2-3-寄存器及其地址" class="headerlink" title="2.3 寄存器及其地址"></a>2.3 寄存器及其地址</h3><p>默认情况下，上电复位后，寄存器地址的默认值均为0，寄存器地址及其用途见下图所示:<br><img src="http://pic.huangruimin.tech/20190518025235.png"><br><img src="http://pic.huangruimin.tech/20190518025305.png"><br>图中节选的部分寄存器地址中，主要关心以下寄存器：</p><ul><li>模式设置寄存器：MODE1，MODE2。</li><li>脉宽(占空比)设置寄存器：LED0_ON_L,LED0_ON_H,LED0_OFF_L,LED0_OFF_H……LED15……每一路PWM通道占用4个寄存器。</li><li>周期(频率)设置寄存器：PRE_SCALE。</li></ul><p>接下来介绍以上寄存器的使用及其注意事项。</p><h3 id="2-4-模式设置寄存器"><a href="#2-4-模式设置寄存器" class="headerlink" title="2.4 模式设置寄存器"></a>2.4 模式设置寄存器</h3><h4 id="2-4-1-MODE1寄存器"><a href="#2-4-1-MODE1寄存器" class="headerlink" title="2.4.1 MODE1寄存器"></a>2.4.1 MODE1寄存器</h4><p>首先介绍MODE1寄存器,如下图:<br><img src="http://pic.huangruimin.tech/20190518025438.png"><br>在使用该寄存器的时候要注意：</p><ul><li><p>如果未停止所有PWM输出就将其进入到睡眠模式，那么，所有输出通道在下一轮都将输出高电平。</p></li><li><p>睡眠后重新启动PWM的操作为:<br><img src="http://pic.huangruimin.tech/20190518025531.png"></p></li><li><p>注意，在设置PWM频率(写PRESCALE寄存器)的时候，要先设置为Sleep模式，请参考后面源码部分。</p></li></ul><h4 id="2-4-2-MODE2寄存器"><a href="#2-4-2-MODE2寄存器" class="headerlink" title="2.4.2 MODE2寄存器"></a>2.4.2 MODE2寄存器</h4><p>该寄存器的各位功能如下图所示:<br><img src="http://pic.huangruimin.tech/20190518025715.png"></p><h3 id="2-5-PWM通道寄存器及其占空比设置"><a href="#2-5-PWM通道寄存器及其占空比设置" class="headerlink" title="2.5 PWM通道寄存器及其占空比设置"></a>2.5 PWM通道寄存器及其占空比设置</h3><p>PWM通道寄存器如下图：<br><img src="http://pic.huangruimin.tech/20190518025806.png"><br>由图可知，对于每一个通道，有4个寄存器，每个寄存器图解如下图所示:<br><img src="http://pic.huangruimin.tech/20190518025850.png"><br>在设置PWM占空比的时候，首先，配置舵机的示例如下图所示(ON &lt; OFF的情况):<br><img src="http://pic.huangruimin.tech/20190518030017.png"><br>当特殊情况下，PWM周期大于定时器一次计数时,如下图所示(ON&gt;OFF的情况):<br><img src="http://pic.huangruimin.tech/20190518031556.png"></p><h3 id="2-6-PWM周期-频率-寄存器及其周期-频率-设置"><a href="#2-6-PWM周期-频率-寄存器及其周期-频率-设置" class="headerlink" title="2.6 PWM周期(频率)寄存器及其周期(频率)设置"></a>2.6 PWM周期(频率)寄存器及其周期(频率)设置</h3><p>接下来介绍配置PWM频率的寄存器:<br>一般情况下，在用内置晶振，为25MHZ，通过配置PRE_SCALE寄存器进行配置，配置的PRE_SCALE寄存器的值与PWM频率的关系如下图所示:<br><img src="http://pic.huangruimin.tech/20230826011112.png"><br>如果在舵机控制中，采用内置晶振，取osc_clock=25000000，update_rate=50(舵机控制频率50Hz)</p><h3 id="2-7-推荐硬件设计"><a href="#2-7-推荐硬件设计" class="headerlink" title="2.7 推荐硬件设计"></a>2.7 推荐硬件设计</h3><p>首先，OE引脚须接低电平以确保IC使能，如果连接LED灯，则推荐以下几种连接方式，如下图所示:<br><img src="http://pic.huangruimin.tech/20190518030252.png"></p><h2 id="3-软件设计"><a href="#3-软件设计" class="headerlink" title="3 软件设计"></a>3 软件设计</h2><h3 id="3-1-Micro-bit平台TypeScript版"><a href="#3-1-Micro-bit平台TypeScript版" class="headerlink" title="3.1 Micro:bit平台TypeScript版"></a>3.1 Micro:bit平台TypeScript版</h3><p>接下来进行软件设计部分讲解，由于本次开发采用Micro:bit底层开发，采用的是TypeScript(JavaScript的超类),所以暂提供该语言，提供基本操作方法及其思路，日后再更新C,cpp及其它平台(STM32,Linux树莓派，Arduino等)操作方法，源码如下，可结合DataSheet及以上教程理解：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** * 使用此文件来定义自定义函数和图形块。 * 想了解更详细的信息，请前往 https://makecode.microbit.org/blocks/custom */</span> <span class="token comment">/** * 自定义图形块 */</span><span class="token comment">//% weight=5 color=#0fbc11 icon="\uf113"</span>namespace Servo <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token constant">PCA9685_ADDRESS</span> <span class="token operator">=</span> <span class="token number">0x40</span>    <span class="token keyword">const</span> <span class="token constant">MODE1</span> <span class="token operator">=</span> <span class="token number">0x00</span>    <span class="token keyword">const</span> <span class="token constant">MODE2</span> <span class="token operator">=</span> <span class="token number">0x01</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR1</span> <span class="token operator">=</span> <span class="token number">0x02</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR2</span> <span class="token operator">=</span> <span class="token number">0x03</span>    <span class="token keyword">const</span> <span class="token constant">SUBADR3</span> <span class="token operator">=</span> <span class="token number">0x04</span>    <span class="token keyword">const</span> <span class="token constant">PRESCALE</span> <span class="token operator">=</span> <span class="token number">0xFE</span>    <span class="token keyword">const</span> <span class="token constant">LED0_ON_L</span> <span class="token operator">=</span> <span class="token number">0x06</span>    <span class="token keyword">const</span> <span class="token constant">LED0_ON_H</span> <span class="token operator">=</span> <span class="token number">0x07</span>    <span class="token keyword">const</span> <span class="token constant">LED0_OFF_L</span> <span class="token operator">=</span> <span class="token number">0x08</span>    <span class="token keyword">const</span> <span class="token constant">LED0_OFF_H</span> <span class="token operator">=</span> <span class="token number">0x09</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_ON_L</span> <span class="token operator">=</span> <span class="token number">0xFA</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_ON_H</span> <span class="token operator">=</span> <span class="token number">0xFB</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_OFF_L</span> <span class="token operator">=</span> <span class="token number">0xFC</span>    <span class="token keyword">const</span> <span class="token constant">ALL_LED_OFF_H</span> <span class="token operator">=</span> <span class="token number">0xFD</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHA_L</span> <span class="token operator">=</span> <span class="token number">2047</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHA_H</span> <span class="token operator">=</span> <span class="token number">4095</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHB_L</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHB_H</span> <span class="token operator">=</span> <span class="token number">2047</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHC_L</span> <span class="token operator">=</span> <span class="token number">1023</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHC_H</span> <span class="token operator">=</span> <span class="token number">3071</span>     <span class="token keyword">const</span> <span class="token constant">STP_CHD_L</span> <span class="token operator">=</span> <span class="token number">3071</span>    <span class="token keyword">const</span> <span class="token constant">STP_CHD_H</span> <span class="token operator">=</span> <span class="token number">1023</span>     <span class="token keyword">let</span> initialized <span class="token operator">=</span> <span class="token boolean">false</span>     <span class="token keyword">function</span> <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">addr</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">reg</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> buf <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">createBuffer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> reg        buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value        pins<span class="token punctuation">.</span><span class="token function">i2cWriteBuffer</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> buf<span class="token punctuation">)</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">i2cread</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">addr</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">reg</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        pins<span class="token punctuation">.</span><span class="token function">i2cWriteNumber</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> NumberFormat<span class="token punctuation">.</span>UInt8BE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> val <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">i2cReadNumber</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> NumberFormat<span class="token punctuation">.</span>UInt8BE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> val<span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span>        <span class="token function">setFreq</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4095</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> idx <span class="token operator">&lt;</span> <span class="token number">16</span><span class="token punctuation">;</span> idx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">setPwm</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        initialized <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">setFreq</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">freq</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token comment">// Constrain the frequency</span>        <span class="token keyword">let</span> prescaleval <span class="token operator">=</span> <span class="token number">25000000</span><span class="token punctuation">;</span>        prescaleval <span class="token operator">/=</span> <span class="token number">4096</span><span class="token punctuation">;</span>        prescaleval <span class="token operator">/=</span> freq<span class="token punctuation">;</span>        prescaleval <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> prescale <span class="token operator">=</span> prescaleval<span class="token punctuation">;</span> <span class="token comment">//Math.Floor(prescaleval + 0.5);</span>        <span class="token keyword">let</span> oldmode <span class="token operator">=</span> <span class="token function">i2cread</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> newmode <span class="token operator">=</span> <span class="token punctuation">(</span>oldmode <span class="token operator">&amp;</span> <span class="token number">0x7F</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x10</span><span class="token punctuation">;</span> <span class="token comment">// sleep</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> newmode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// go to sleep</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">PRESCALE</span><span class="token punctuation">,</span> prescale<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// set the prescaler</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> oldmode<span class="token punctuation">)</span><span class="token punctuation">;</span>        control<span class="token punctuation">.</span><span class="token function">waitMicros</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">i2cwrite</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> <span class="token constant">MODE1</span><span class="token punctuation">,</span> oldmode <span class="token operator">|</span> <span class="token number">0xa1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     <span class="token keyword">function</span> <span class="token function">setPwm</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">on</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">off</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>channel <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> channel <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">)</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> buf <span class="token operator">=</span> pins<span class="token punctuation">.</span><span class="token function">createBuffer</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">LED0_ON_L</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> channel<span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> on <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>on <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> off <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>off <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span>        pins<span class="token punctuation">.</span><span class="token function">i2cWriteBuffer</span><span class="token punctuation">(</span><span class="token constant">PCA9685_ADDRESS</span><span class="token punctuation">,</span> buf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token comment">/** * Servo Execute * @param degree [0-180] degree of servo; eg: 90, 0, 180*/</span>    <span class="token comment">//% blockId=setServo block="Servo channel|%channel|degree %degree"</span>    <span class="token comment">//% weight=85</span>    <span class="token comment">//% degree.min=0 degree.max=180</span>    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">Servo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span><span class="token literal-property property">degree</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialized<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">// 50hz: 20,000 us</span>        <span class="token keyword">let</span> v_us <span class="token operator">=</span> <span class="token punctuation">(</span>degree <span class="token operator">*</span> <span class="token number">1800</span> <span class="token operator">/</span> <span class="token number">180</span> <span class="token operator">+</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.6 ~ 2.4</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> v_us <span class="token operator">*</span> <span class="token number">4096</span> <span class="token operator">/</span> <span class="token number">20000</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment">/** * Servo Execute * @param pulse [500-2500] pulse of servo; eg: 1500, 500, 2500*/</span>    <span class="token comment">//% blockId=setServoPulse block="Servo channel|%channel|pulse %pulse"</span>    <span class="token comment">//% weight=85</span>    <span class="token comment">//% pulse.min=500 pulse.max=2500</span>    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">ServoPulse</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">channel</span><span class="token operator">:</span> number<span class="token punctuation">,</span><span class="token literal-property property">pulse</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initialized<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">initPCA9685</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token comment">// 50hz: 20,000 us</span>        <span class="token keyword">let</span> value <span class="token operator">=</span> pulse <span class="token operator">*</span> <span class="token number">4096</span> <span class="token operator">/</span> <span class="token number">20000</span><span class="token punctuation">;</span>        <span class="token function">setPwm</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上便是Micro:bit驱动PCA9685的源代码，注意源代码中的时间为us，而教程中的时间为ms。</p><h3 id="3-2-树莓派平台Python版"><a href="#3-2-树莓派平台Python版" class="headerlink" title="3.2 树莓派平台Python版"></a>3.2 树莓派平台Python版</h3><p>要运行该程序，首先选装python，安装好Python后，还需要安装树莓派平台的smbus库：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-smbus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>树莓派平台采用Python驱动PCA9685的Python代码如下所示:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span> <span class="token keyword">import</span> time<span class="token keyword">import</span> math<span class="token keyword">import</span> smbus <span class="token comment"># ============================================================================</span><span class="token comment"># Raspi PCA9685 16-Channel PWM Servo Driver</span><span class="token comment"># ============================================================================</span> <span class="token keyword">class</span> <span class="token class-name">PCA9685</span><span class="token punctuation">:</span>   <span class="token comment"># Registers/etc.</span>  __SUBADR1            <span class="token operator">=</span> <span class="token number">0x02</span>  __SUBADR2            <span class="token operator">=</span> <span class="token number">0x03</span>  __SUBADR3            <span class="token operator">=</span> <span class="token number">0x04</span>  __MODE1              <span class="token operator">=</span> <span class="token number">0x00</span>  __PRESCALE           <span class="token operator">=</span> <span class="token number">0xFE</span>  __LED0_ON_L          <span class="token operator">=</span> <span class="token number">0x06</span>  __LED0_ON_H          <span class="token operator">=</span> <span class="token number">0x07</span>  __LED0_OFF_L         <span class="token operator">=</span> <span class="token number">0x08</span>  __LED0_OFF_H         <span class="token operator">=</span> <span class="token number">0x09</span>  __ALLLED_ON_L        <span class="token operator">=</span> <span class="token number">0xFA</span>  __ALLLED_ON_H        <span class="token operator">=</span> <span class="token number">0xFB</span>  __ALLLED_OFF_L       <span class="token operator">=</span> <span class="token number">0xFC</span>  __ALLLED_OFF_H       <span class="token operator">=</span> <span class="token number">0xFD</span>   <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> address<span class="token operator">=</span><span class="token number">0x40</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    self<span class="token punctuation">.</span>bus <span class="token operator">=</span> smbus<span class="token punctuation">.</span>SMBus<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>address <span class="token operator">=</span> address    self<span class="token punctuation">.</span>debug <span class="token operator">=</span> debug    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Reseting PCA9685"</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Writes an 8-bit value to the specified register/address"</span>    self<span class="token punctuation">.</span>bus<span class="token punctuation">.</span>write_byte_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> reg<span class="token punctuation">,</span> value<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I2C: Write 0x%02X to register 0x%02X"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">read</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Read an unsigned byte from the I2C device"</span>    result <span class="token operator">=</span> self<span class="token punctuation">.</span>bus<span class="token punctuation">.</span>read_byte_data<span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> reg<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I2C: Device 0x%02X returned 0x%02X from reg 0x%02X"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>address<span class="token punctuation">,</span> result <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> reg<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result  <span class="token keyword">def</span> <span class="token function">setPWMFreq</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> freq<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets the PWM frequency"</span>    prescaleval <span class="token operator">=</span> <span class="token number">25000000.0</span>    <span class="token comment"># 25MHz</span>    prescaleval <span class="token operator">/=</span> <span class="token number">4096.0</span>       <span class="token comment"># 12-bit</span>    prescaleval <span class="token operator">/=</span> <span class="token builtin">float</span><span class="token punctuation">(</span>freq<span class="token punctuation">)</span>    prescaleval <span class="token operator">-=</span> <span class="token number">1.0</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Setting PWM frequency to %d Hz"</span> <span class="token operator">%</span> freq<span class="token punctuation">)</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Estimated pre-scale: %d"</span> <span class="token operator">%</span> prescaleval<span class="token punctuation">)</span>    prescale <span class="token operator">=</span> math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>prescaleval <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Final pre-scale: %d"</span> <span class="token operator">%</span> prescale<span class="token punctuation">)</span>     oldmode <span class="token operator">=</span> self<span class="token punctuation">.</span>read<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">)</span><span class="token punctuation">;</span>    newmode <span class="token operator">=</span> <span class="token punctuation">(</span>oldmode <span class="token operator">&amp;</span> <span class="token number">0x7F</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x10</span>        <span class="token comment"># sleep</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> newmode<span class="token punctuation">)</span>        <span class="token comment"># go to sleep</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__PRESCALE<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span>prescale<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> oldmode<span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__MODE1<span class="token punctuation">,</span> oldmode <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">)</span>   <span class="token keyword">def</span> <span class="token function">setPWM</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> on<span class="token punctuation">,</span> off<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets a single PWM channel"</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_ON_L<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> on <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_ON_H<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> on <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_OFF_L<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> off <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>write<span class="token punctuation">(</span>self<span class="token punctuation">.</span>__LED0_OFF_H<span class="token operator">+</span><span class="token number">4</span><span class="token operator">*</span>channel<span class="token punctuation">,</span> off <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"channel: %d  LED_ON: %d LED_OFF: %d"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>channel<span class="token punctuation">,</span>on<span class="token punctuation">,</span>off<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">setServoPulse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> pulse<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token string">"Sets the Servo Pulse,The PWM frequency must be 50HZ"</span>    pulse <span class="token operator">=</span> pulse<span class="token operator">*</span><span class="token number">4096</span><span class="token operator">/</span><span class="token number">20000</span>        <span class="token comment">#PWM frequency is 50HZ,the period is 20000us</span>    self<span class="token punctuation">.</span>setPWM<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pulse<span class="token punctuation">)</span> <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>   pwm <span class="token operator">=</span> PCA9685<span class="token punctuation">(</span><span class="token number">0x40</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  pwm<span class="token punctuation">.</span>setPWMFreq<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>  <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>   <span class="token comment"># setServoPulse(2,2500)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        pwm<span class="token punctuation">.</span>setServoPulse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>         time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span>             <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2500</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      pwm<span class="token punctuation">.</span>setServoPulse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span>       time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.02</span><span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存文件命名为: pca9685.py,命令行进入该文件所在的路径，运行该Python脚本:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> python pca9685.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行该命令后，便可控制舵机从0度转到180度，再从180度转到0度。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux采用4G模块上网_PPP拨号</title>
      <link href="/2020/11/05/linux-cai-yong-4g-mo-kuai-shang-wang-ppp-bo-hao/"/>
      <url>/2020/11/05/linux-cai-yong-4g-mo-kuai-shang-wang-ppp-bo-hao/</url>
      
        <content type="html"><![CDATA[<h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h2><p>本章将继续讲解Jetson Nano采用SIM7600 4G模块进行无线上网，紧接上一章NDIS拨号上网，本章将讲解PPP拨号上网，本教程同样适用于树莓派。</p><h2 id="2-准备工作"><a href="#2-准备工作" class="headerlink" title="2. 准备工作"></a>2. 准备工作</h2><p>接下来，将介绍Jetson Nano或Raspberry Pi采用NDIS驱动通过SIM7600 4G模块上网的过程。</p><h3 id="3-1-硬件准备"><a href="#3-1-硬件准备" class="headerlink" title="3.1 硬件准备"></a>3.1 硬件准备</h3><ul><li><a href="http://www.waveshare.net/shop/SIM7600CE-4G-HAT.htm">SIM7600CE 4G HAT</a>及其配件</li><li><a href="http://www.waveshare.net/shop/Jetson-Nano-Developer-Kit.htm">Jetson Nano</a>及其配件，或Raspberry Pi 及其配件</li><li>可上网的4G SIM卡</li></ul><h3 id="3-2-硬件连接"><a href="#3-2-硬件连接" class="headerlink" title="3.2 硬件连接"></a>3.2 硬件连接</h3><p>硬件连接如下图所示：<br><img src="http://pic.huangruimin.tech/20191115140317.png"></p><p>注意：</p><ul><li>若接到40Pin引脚上使用，则注意将SIM7600的Flight Mode，PWR引脚拉低，即需要设计初始化脚本，详情见相关产品页面，否则将进入飞行模式。</li><li>若树莓派通过USB线单独给SIM7600供电，则可能出现供电不稳定，导致SIM7600开机后关机的现象。</li><li>若仅仅使用拨号上网功能，则可以不接到Jetson Nano或Raspberry Pi的40Pin上。</li></ul><h2 id="4-正式开始"><a href="#4-正式开始" class="headerlink" title="4. 正式开始"></a>4. 正式开始</h2><h3 id="4-1-检查硬件连接，网络连接-该步骤必须检查并确认"><a href="#4-1-检查硬件连接，网络连接-该步骤必须检查并确认" class="headerlink" title="4.1 检查硬件连接，网络连接(该步骤必须检查并确认)"></a>4.1 检查硬件连接，网络连接(该步骤必须检查并确认)</h3><ul><li><p>长按SIM7600CE 4G HAT上的PWKKEY键，使得SIM7600CE 4G HAT开机，正常开机后，NET灯应当闪烁(若未闪烁，请检查SIM卡是否可用，或是否进入了飞行模式)。</p></li><li><p>检查Jetson Nano的Ubuntu系统或树莓派的Raspbian系统是否内置了高通USB串口驱动，非新版本镜像系统可能未内置该驱动，查看方式如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看Ubuntu版本</span><span class="token function">uname</span> <span class="token parameter variable">-a</span>lsb_release <span class="token parameter variable">-a</span><span class="token function">cat</span> /proc/version<span class="token comment"># 查看是否有高通USB虚拟串口驱动</span>lsusb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115144137.png"><br>如果能看到Qualcomm/Option字样，则说明内置了高通USB虚拟串口驱动</p></li><li><p>输入AT指令，设置为4G上网，查看网络连接状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span class="token comment"># 关闭ModemManager进程，以防止minicom调试AT串口时，显示没用的数据，若没有该进程，则不用关闭。</span><span class="token function">killall</span> ModemManager<span class="token comment"># 安装minicom串口工具</span><span class="token function">apt-get</span> <span class="token function">install</span> minicom<span class="token comment"># 查看串口设备，AT指令串口，为/dev/ttyUSB2</span><span class="token function">ls</span> /dev/ttyUSB*<span class="token comment"># 用minicom打开串口</span><span class="token function">sudo</span> minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2<span class="token comment"># 强制设置为4G上网</span>AT+CNMP<span class="token operator">=</span><span class="token number">38</span><span class="token comment"># 查询网络质量</span>AT+CSQ<span class="token comment"># 查询网络注册状</span>AT+CREG?<span class="token comment"># 查询网络运营商</span>AT+COPS?<span class="token comment"># 查询网络波段</span>AT+CPSI?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115170503.png"></p></li></ul><p>至此，SIM7600CE和Jetson Nano连接正常，网络连接正常。</p><h3 id="4-2-配置PPP拨号脚本并连接"><a href="#4-2-配置PPP拨号脚本并连接" class="headerlink" title="4.2 配置PPP拨号脚本并连接"></a>4.2 配置PPP拨号脚本并连接</h3><ul><li><p>首先：安装ppp拨号程序：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> pppd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>接着：切换到root用户</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>然后：修改拨号脚本文件，为了简便，直接将以下两个文件拷贝到Jetson Nano或树莓派：</p></li></ul><p><img src="http://pic.huangruimin.tech/20191119094531.png"></p><p>以上两个文件将在文章末尾给出。</p><ul><li>紧接着：再将以上两个文件复制(替换)到相关路径下：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 将chat放到/etc/ppp</span><span class="token function">cp</span> ./chat /etc/ppp<span class="token comment"># 将dial放到/etc/ppp/peers</span><span class="token function">cp</span> ./dial /etc/ppp/peers<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119181003.jpg"></p><ul><li>最后：执行拨号命令</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 开始拨号</span>pppd call dial<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119104536.png"><br>如下图所示，则为拨号成功的效果：<br><img src="http://pic.huangruimin.tech/20191119105516.png"></p><ul><li>测试：</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作，不要关闭拨号成功的终端，新开一个终端操作</span><span class="token comment"># 查看网口及其ip</span><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span class="token comment"># 为避免DNS解析不了，添加以下默认路由</span>route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token number">0.0</span>.0.0 ppp0<span class="token comment"># 通过ppp0上网测试</span><span class="token function">ping</span> <span class="token parameter variable">-I</span> ppp0 www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119110004.png"><br><img src="http://pic.huangruimin.tech/20191119110054.png"><br>如上图所示，如果采用ppp0网口ping通了百度，则采用ppp拨号上网成功。</p><ul><li>断开连接</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 注意使用root账户操作</span><span class="token comment"># 断开ppp连接</span><span class="token function">killall</span> pppd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="5-测速"><a href="#5-测速" class="headerlink" title="5 测速"></a>5 测速</h2><p>最后，对采用ppp拨号上网进行测速：</p><p><img src="http://pic.huangruimin.tech/20191119102754.png"></p><p>注意，以上数值仅供参考，不同地域，不同运营商，测速所得出的数据略有差距，在理想的情况下，在SIMCOM实验室测试，理想上行与下行速度为20Mbps。</p><h2 id="6-拨号相关文件"><a href="#6-拨号相关文件" class="headerlink" title="6 拨号相关文件"></a>6 拨号相关文件</h2><p><a href="http://pic.huangruimin.tech/chat%26dial.rar">chat&amp;dial.rar</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux采用4G模块上网_NDIS拨号</title>
      <link href="/2020/11/05/linux-cai-yong-4g-mo-kuai-shang-wang-ndis-bo-hao/"/>
      <url>/2020/11/05/linux-cai-yong-4g-mo-kuai-shang-wang-ndis-bo-hao/</url>
      
        <content type="html"><![CDATA[<h2 id="1-说明"><a href="#1-说明" class="headerlink" title="1.说明"></a>1.说明</h2><p>本章将介绍Jetson Nano如何采用SIM7600 4G模块进行无线上网，并描述其相关细节，本章将先讲解NDIS拨号。</p><h2 id="2-采用4G模块的上网方式有哪些？"><a href="#2-采用4G模块的上网方式有哪些？" class="headerlink" title="2.采用4G模块的上网方式有哪些？"></a>2.采用4G模块的上网方式有哪些？</h2><p>Jetson Nano 或Raspberry Pi通过SIM7600模组，可采用以下几种方式进行无线上网：</p><ul><li><p>采用AT指令使用封装好的TCP，MQTT，HTTP(S)</p><blockquote><p>该方式适用于资源比较紧张的微处理器，如MCU等，或适用于对数据量比较少的应用场景，如通过http(s),MQTT给服务器，云平台等上传传感器数据。<br>对于Jetson Nano，如果网络应用不复杂，数据量比较小时(比如传输传感器数据至服务器，接收服务器下发的控制指令)，采用AT指令即可快速使用功能。</p></blockquote></li><li><p>采用NDIS驱动上网</p><blockquote><p>该方式必须依赖于Linux系统，适用于需要采用Linux网络套接字编程开发的应用场景，将驱动加载到内核后，将SIM7600和Jetson Nano采用USB线连接，待SIM7600开机后，即可识别到wwan0网口，可通过该网口上网。<br>该方式底层依赖于SIM7600的USB虚拟串口。<br>该方式为官方推荐的上网方式，同样，建议采用该种方式进行拨号上网。</p></blockquote></li><li><p>采用ppp拨号上网</p><blockquote><p>该方式必须依赖于Linux系统，适用于需要采用Linux网络套接字编程开发的应用场景，配置并运行相关脚本后，将SIM7600和Jetson Nano采用USB线连接，待SIM7600开机后，即可识别到ppp0网口，可通过该网口上网。<br>该方式底层依赖于SIM7600的USB虚拟串口。</p></blockquote></li><li><p>采用wvdial拨号上网</p><blockquote><p>该方式的底层实现同ppp拨号上网，不再阐述。</p></blockquote></li></ul><h2 id="3-准备工作"><a href="#3-准备工作" class="headerlink" title="3. 准备工作"></a>3. 准备工作</h2><p>接下来，将介绍Jetson Nano或Raspberry Pi采用NDIS驱动通过SIM7600 4G模块上网的过程。</p><h3 id="3-1-硬件准备"><a href="#3-1-硬件准备" class="headerlink" title="3.1 硬件准备"></a>3.1 硬件准备</h3><ul><li><a href="http://www.waveshare.net/shop/SIM7600CE-4G-HAT.htm">SIM7600CE 4G HAT</a>及其配件</li><li><a href="http://www.waveshare.net/shop/Jetson-Nano-Developer-Kit.htm">Jetson Nano</a>(Jetson Nano及其配件)及其配件(或Raspberry Pi 及其配件)</li><li>可上网的4G SIM卡</li></ul><h3 id="3-2-硬件连接"><a href="#3-2-硬件连接" class="headerlink" title="3.2 硬件连接"></a>3.2 硬件连接</h3><p>硬件连接如下图所示：<br><img src="http://pic.huangruimin.tech/20191115140317.png"><br><strong>注意</strong></p><p>1.若接到40Pin引脚上使用，则注意将SIM7600的Flight Mode，PWR引脚拉低，即需要设计初始化脚本，详情见相关产品页面，否则将进入飞行模式。</p><p>2.若树莓派通过USB线单独给SIM7600供电，则可能出现供电不稳定，导致SIM7600开机后关机的现象。</p><p>3.若仅仅使用拨号上网功能，则可以不接到Jetson Nano或Raspberry Pi的40Pin上。</p><h2 id="4-正式开始"><a href="#4-正式开始" class="headerlink" title="4. 正式开始"></a>4. 正式开始</h2><h3 id="4-1-检查硬件连接，网络连接"><a href="#4-1-检查硬件连接，网络连接" class="headerlink" title="4.1 检查硬件连接，网络连接"></a>4.1 检查硬件连接，网络连接</h3><ul><li><p>长按SIM7600CE 4G HAT上的PWKKEY键，使得SIM7600CE 4G HAT开机，正常开机后，NET灯应当闪烁(若未闪烁，请检查SIM卡是否可用，或是否进入了飞行模式)。</p></li><li><p>检查Jetson Nano的Ubuntu系统或树莓派的Raspbian系统是否内置了高通USB串口驱动，非新版本镜像系统可能未内置该驱动，查看方式如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看Ubuntu版本</span><span class="token function">uname</span> <span class="token parameter variable">-a</span>lsb_release <span class="token parameter variable">-a</span><span class="token function">cat</span> /proc/version<span class="token comment"># 查看是否有高通USB虚拟串口驱动</span>lsusb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115144137.png"><br>如果能看到Qualcomm/Option字样，则说明内置了高通USB虚拟串口驱动</p></li><li><p>输入AT指令，设置为4G上网，查看网络连接状态</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 关闭ModemManager进程，以防止minicom调试AT串口时，显示没用的数据</span><span class="token function">sudo</span> <span class="token function">su</span><span class="token function">killall</span> ModemManager<span class="token comment"># 安装minicom串口工具</span><span class="token function">apt-get</span> <span class="token function">install</span> minicom<span class="token comment"># 查看串口设备，AT指令串口，为/dev/ttyUSB2</span><span class="token function">ls</span> /dev/ttyUSB*<span class="token comment"># 用minicom打开串口</span><span class="token function">sudo</span> minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2<span class="token comment"># 强制设置为4G上网</span>AT+CNMP<span class="token operator">=</span><span class="token number">38</span><span class="token comment"># 查询网络质量</span>AT+CSQ<span class="token comment"># 查询网络注册状</span>AT+CREG?<span class="token comment"># 查询网络运营商</span>AT+COPS?<span class="token comment"># 查询网络波段</span>AT+CPSI?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115170503.png"></p></li></ul><p>至此，SIM7600CE和Jetson Nano或Raspberry Pi硬件连接正常，网络连接正常。</p><h3 id="4-2-编译并安装驱动模块文件"><a href="#4-2-编译并安装驱动模块文件" class="headerlink" title="4.2 编译并安装驱动模块文件"></a>4.2 编译并安装驱动模块文件</h3><p>对于Jetson Nano的Ubuntu系统，默认没有simcom的用于wwan0网口的驱动模块文件，可用以下命令查看</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lsmod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115172607.png"></p><p>但是对于Raspberry Pi的Raspbian系统，默认是安装了高通的用于wwan0网口的驱动模块文件，如下图：<br><img src="http://pic.huangruimin.tech/20191119185038.png"><br>对于Raspberry Pi，需要先卸载该驱动，再安装上simcom的用于wwan0网口的驱动模块文件，卸载方式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">su</span>rmmod qmi_wwan<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191119185306.png"></p><p>在此基础上，执行后续步骤。</p><p>将编译以下驱动模块源程序：</p><p><img src="http://pic.huangruimin.tech/20191115175209.png"></p><p><strong>该源程序及其Makefile将在文章末尾出给出</strong></p><p>为了避免交叉编译的繁琐(交叉编译需要在虚拟机Ubuntu下编译Jetson Nano内核后，再编译驱动模块)，可直接将以上两个文件保存到Jetson Nano文件系统中，再编译，注意该过程需要使用超级用户，如下图所示：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115174747.png"></p><p>由上图可查看到，已编译成内核驱动模块文件。</p><p>接下来，将安装该驱动模块文件，注意需要使用超级用户：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">insmod simcom_wwan.kolsmod<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115175626.png"></p><p>此时，simcom_wwan驱动模块已安装上。</p><p>可查看到内核的打印信息：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">dmesg</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115180339.png"></p><p>Raspberry Pi编译及安装驱动模块的操作同Jetson Nano。</p><h3 id="4-3-开始拨号，并分配IP"><a href="#4-3-开始拨号，并分配IP" class="headerlink" title="4.3 开始拨号，并分配IP"></a>4.3 开始拨号，并分配IP</h3><p>此时，可看到已经出现wwan0网口：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115180615.png"></p><p>但是该网口并未分配IP地址，如需分配IP，需要</p><ul><li>首先开启网口</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> wwan0 up<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后拨号</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">minicom <span class="token parameter variable">-D</span> /dev/ttyUSB2AT<span class="token variable">$QCRMCALL</span><span class="token operator">=</span><span class="token number">1,1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115181625.png"></p><ul><li>最后，分配IP</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> <span class="token function">install</span> udhcpcudhcpc <span class="token parameter variable">-i</span> wwan0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115182613.png"></p><p>此时，已经分配到IP，可对该网口进行测试：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> <span class="token parameter variable">-a</span><span class="token function">ping</span> <span class="token parameter variable">-I</span> wwan0 www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20191115182856.png"></p><p>由上图可知，wwan0网口测试通过。</p><p>如果出现dns解析异常，输入以下命令可解决：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">route <span class="token function">add</span> <span class="token parameter variable">-net</span> <span class="token number">0.0</span>.0.0 wwan0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="5-测速"><a href="#5-测速" class="headerlink" title="5 测速"></a>5 测速</h2><p>最后，对采用NDIS拨号上网进行测速：</p><p><img src="http://pic.huangruimin.tech/20191115185342.png"><br>注意，以上数值仅供参考，不同地域，不同运营商，测速所得出的数据略有差距，在理想的情况下，在SIMCOM实验室测试，理想上行与下行速度为20Mbps。</p><h2 id="6-驱动源码"><a href="#6-驱动源码" class="headerlink" title="6 驱动源码"></a>6 驱动源码</h2><p>simcom_wwan.c&amp;Makefile：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">/* * Copyright (c) 2016 Xiaobin Wang &lt;xiaobin.wang@sim.com&gt; * * This program is free software; you can redistribute it and/or * modify it under the terms of the GNU General Public License * version 2 as published by the Free Software Foundation. */</span><span class="token comment">/* * history  * V1.00 - first release  -20160822*/</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/module.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/netdevice.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/ethtool.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/etherdevice.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/mii.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb/cdc.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;linux/usb/usbnet.h&gt;</span></span><span class="token comment">/* very simplistic detection of IPv4 or IPv6 headers */</span><span class="token keyword">static</span> bool <span class="token function">possibly_iphdr</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xd0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0x40</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* SIMCOM devices combine the "control" and "data" functions into a * single interface with all three endpoints: interrupt + bulk in and * out */</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_bind</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> rv <span class="token operator">=</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>  <span class="token comment">//struct usb_driver *subdriver = NULL;</span><span class="token class-name">atomic_t</span> <span class="token operator">*</span>pmcount <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">/* ignore any interface with additional descriptors */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>extralen<span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span>  <span class="token comment">/* Some makes devices where the interface descriptors and endpoint * configurations of two or more interfaces are identical, even * though the functions are completely different.  If set, then * driver_info-&gt;data is a bitmap of acceptable interface numbers * allowing us to bind to one such interface without binding to * all of them */</span><span class="token keyword">if</span> <span class="token punctuation">(</span>dev<span class="token operator">-&gt;</span>driver_info<span class="token operator">-&gt;</span>data <span class="token operator">&amp;&amp;</span>    <span class="token operator">!</span><span class="token function">test_bit</span><span class="token punctuation">(</span>intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>desc<span class="token punctuation">.</span>bInterfaceNumber<span class="token punctuation">,</span> <span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>driver_info<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">dev_info</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>intf<span class="token operator">-&gt;</span>dev<span class="token punctuation">,</span> <span class="token string">"not on our whitelist - ignored"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rv <span class="token operator">=</span> <span class="token operator">-</span>ENODEV<span class="token punctuation">;</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">atomic_set</span><span class="token punctuation">(</span>pmcount<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* collect all three endpoints */</span>rv <span class="token operator">=</span> <span class="token function">usbnet_get_endpoints</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rv <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token comment">/* require interrupt endpoint for subdriver */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dev<span class="token operator">-&gt;</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>rv <span class="token operator">=</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">/* can't let usbnet use the interrupt endpoint */</span>dev<span class="token operator">-&gt;</span>status <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"simcom usbnet bind here\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/*   * SIMCOM SIM7600 only support the RAW_IP mode, so the host net driver would   * remove the arp so the packets can transmit to the modem  */</span>  dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>flags <span class="token operator">|=</span> IFF_NOARP<span class="token punctuation">;</span>      <span class="token comment">/* make MAC addr easily distinguishable from an IP header */</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">possibly_iphdr</span><span class="token punctuation">(</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">|=</span> <span class="token number">0x02</span><span class="token punctuation">;</span><span class="token comment">/* set local assignment bit */</span>dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;=</span> <span class="token number">0xbf</span><span class="token punctuation">;</span><span class="token comment">/* clear "IP" bit */</span><span class="token punctuation">}</span>  <span class="token comment">/*   * SIMCOM SIM7600 need set line state  */</span>  <span class="token function">usb_control_msg</span><span class="token punctuation">(</span>      <span class="token function">interface_to_usbdev</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">usb_sndctrlpipe</span><span class="token punctuation">(</span><span class="token function">interface_to_usbdev</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token comment">//USB_CDC_REQ_SET_CONTROL_LINE_STATE</span>      <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token comment">//USB_DIR_OUT | USB_TYPE_CLASS| USB_RECIP_INTERFACE</span>      <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">//line state 1</span>      intf<span class="token operator">-&gt;</span>cur_altsetting<span class="token operator">-&gt;</span>desc<span class="token punctuation">.</span>bInterfaceNumber<span class="token punctuation">,</span>      <span class="token constant">NULL</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> rv<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">simcom_wwan_unbind</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usb_driver</span> <span class="token operator">*</span>subdriver <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>subdriver <span class="token operator">&amp;&amp;</span> subdriver<span class="token operator">-&gt;</span>disconnect<span class="token punctuation">)</span>subdriver<span class="token operator">-&gt;</span><span class="token function">disconnect</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span>dev<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_PM</span></span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_suspend</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">,</span> <span class="token class-name">pm_message_t</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev <span class="token operator">=</span> <span class="token function">usb_get_intfdata</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> ret<span class="token punctuation">;</span>ret <span class="token operator">=</span> <span class="token function">usbnet_suspend</span><span class="token punctuation">(</span>intf<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ret <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">goto</span> err<span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_resume</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usb_interface</span> <span class="token operator">*</span>intf<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev <span class="token operator">=</span> <span class="token function">usb_get_intfdata</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> ret <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>ret <span class="token operator">=</span> <span class="token function">usbnet_resume</span><span class="token punctuation">(</span>intf<span class="token punctuation">)</span><span class="token punctuation">;</span>err<span class="token operator">:</span><span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span><span class="token function">simcom_wwan_tx_fixup</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span>skb<span class="token punctuation">,</span> <span class="token class-name">gfp_t</span> flags<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//skip ethernet header </span>  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">skb_pull</span><span class="token punctuation">(</span>skb<span class="token punctuation">,</span> ETH_HLEN<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">return</span> skb<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span>  <span class="token punctuation">{</span>    <span class="token function">dev_err</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>dev<span class="token operator">-&gt;</span>intf<span class="token operator">-&gt;</span>dev<span class="token punctuation">,</span> <span class="token string">"Packet Dropped\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>skb <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>    <span class="token function">dev_kfree_skb_any</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">simcom_wwan_rx_fixup</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">usbnet</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">sk_buff</span> <span class="token operator">*</span>skb<span class="token punctuation">)</span><span class="token punctuation">{</span>  __be16 proto<span class="token punctuation">;</span>  <span class="token comment">/* This check is no longer done by usbnet */</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>len <span class="token operator">&lt;</span> dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>hard_header_len<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token number">0x40</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packetv4 coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>proto <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>ETH_P_IP<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">0x60</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packetv6 coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>proto <span class="token operator">=</span> <span class="token function">htons</span><span class="token punctuation">(</span>ETH_P_IPV6<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">0x00</span><span class="token operator">:</span><span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">"packet coming ,,,\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_multicast_ether_addr</span><span class="token punctuation">(</span>skb<span class="token operator">-&gt;</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">/* possibly bogus destination - rewrite just in case */</span><span class="token function">skb_reset_mac_header</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">goto</span> fix_dest<span class="token punctuation">;</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token comment">/* pass along other packets without modifications */</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">skb_headroom</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span> <span class="token operator">&lt;</span> ETH_HLEN<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">skb_push</span><span class="token punctuation">(</span>skb<span class="token punctuation">,</span> ETH_HLEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">skb_reset_mac_header</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_proto <span class="token operator">=</span> proto<span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_source<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ETH_ALEN<span class="token punctuation">)</span><span class="token punctuation">;</span>fix_dest<span class="token operator">:</span><span class="token function">memcpy</span><span class="token punctuation">(</span><span class="token function">eth_hdr</span><span class="token punctuation">(</span>skb<span class="token punctuation">)</span><span class="token operator">-&gt;</span>h_dest<span class="token punctuation">,</span> dev<span class="token operator">-&gt;</span>net<span class="token operator">-&gt;</span>dev_addr<span class="token punctuation">,</span> ETH_ALEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">driver_info</span>simcom_wwan_usbnet_driver_info <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>description<span class="token operator">=</span> <span class="token string">"SIMCOM wwan/QMI device"</span><span class="token punctuation">,</span><span class="token punctuation">.</span>flags<span class="token operator">=</span> FLAG_WWAN<span class="token punctuation">,</span><span class="token punctuation">.</span>bind  <span class="token operator">=</span> simcom_wwan_bind<span class="token punctuation">,</span><span class="token punctuation">.</span>unbind<span class="token operator">=</span> simcom_wwan_unbind<span class="token punctuation">,</span><span class="token punctuation">.</span>rx_fixup       <span class="token operator">=</span> simcom_wwan_rx_fixup<span class="token punctuation">,</span><span class="token punctuation">.</span>tx_fixup       <span class="token operator">=</span> simcom_wwan_tx_fixup<span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">usb_device_id</span> products<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token punctuation">{</span><span class="token function">USB_DEVICE</span><span class="token punctuation">(</span><span class="token number">0x1e0e</span><span class="token punctuation">,</span> <span class="token number">0x9025</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>driver_info <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>simcom_wwan_usbnet_driver_info <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function">USB_DEVICE</span><span class="token punctuation">(</span><span class="token number">0x1e0e</span><span class="token punctuation">,</span> <span class="token number">0x9001</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>driver_info <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>simcom_wwan_usbnet_driver_info <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token comment">/* END */</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">MODULE_DEVICE_TABLE</span><span class="token punctuation">(</span>usb<span class="token punctuation">,</span> products<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">usb_driver</span> simcom_wwan_usb_driver <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">.</span>name        <span class="token operator">=</span> <span class="token string">"simcom_wwan"</span><span class="token punctuation">,</span><span class="token punctuation">.</span>id_table      <span class="token operator">=</span> products<span class="token punctuation">,</span><span class="token punctuation">.</span>probe      <span class="token operator">=</span>usbnet_probe<span class="token punctuation">,</span><span class="token punctuation">.</span>disconnect    <span class="token operator">=</span> usbnet_disconnect<span class="token punctuation">,</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_PM</span></span><span class="token punctuation">.</span>suspend      <span class="token operator">=</span> simcom_wwan_suspend<span class="token punctuation">,</span><span class="token punctuation">.</span>resume      <span class="token operator">=</span>simcom_wwan_resume<span class="token punctuation">,</span><span class="token punctuation">.</span>reset_resume         <span class="token operator">=</span> simcom_wwan_resume<span class="token punctuation">,</span><span class="token punctuation">.</span>supports_autosuspend <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">int</span> __init <span class="token function">simcom_wwan_init</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">usb_register</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>simcom_wwan_usb_driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">module_init</span><span class="token punctuation">(</span>simcom_wwan_init<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> __exit <span class="token function">simcom_wwan_exit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">usb_deregister</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>simcom_wwan_usb_driver<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">module_exit</span><span class="token punctuation">(</span>simcom_wwan_exit<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_AUTHOR</span><span class="token punctuation">(</span><span class="token string">"Xiaobin Wang &lt;xiaobin.wang@sim.com&gt;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_DESCRIPTION</span><span class="token punctuation">(</span><span class="token string">"SIM7600 RMNET WWAN driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MODULE_LICENSE</span><span class="token punctuation">(</span><span class="token string">"GPL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake">obj-m:=simcom_wwan.o    simcom_wwanmodule-objs:=module    KDIR:=/lib/modules/$<span class="token punctuation">(</span>shell uname -r<span class="token punctuation">)</span>/build    MAKE:=make    default:$<span class="token punctuation">(</span>MAKE<span class="token punctuation">)</span> -C $<span class="token punctuation">(</span>KDIR<span class="token punctuation">)</span> SUBDIRS=$<span class="token punctuation">(</span>PWD<span class="token punctuation">)</span> modules    clean:$<span class="token punctuation">(</span>MAKE<span class="token punctuation">)</span> -C $<span class="token punctuation">(</span>KDIR<span class="token punctuation">)</span> SUBDIRS=$<span class="token punctuation">(</span>PWD<span class="token punctuation">)</span> clean <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>嵌入式系统中汉字字库编码集合</title>
      <link href="/2020/08/08/qian-ru-shi-xi-tong-zhong-han-zi-zi-ku-bian-ma-ji-he/"/>
      <url>/2020/08/08/qian-ru-shi-xi-tong-zhong-han-zi-zi-ku-bian-ma-ji-he/</url>
      
        <content type="html"><![CDATA[<h2 id="0-引言"><a href="#0-引言" class="headerlink" title="0 引言"></a>0 引言</h2><p>还记得通常在MCU驱动LCD，OLED是怎样显示汉字的吗？采用取字模工具，生成字模数组，然后要显示某个字符，直接索引这个字符的数组，然后对这个数组数据进行显示就行了，就像这样：<br><img src="http://pic.huangruimin.tech/20190519153008.png"></p><p>最近有开发一个物联网项目，将网络端的发过来的汉字显示到屏幕上，但问题来了，我还不知道网络端要发送具体哪些汉字，我是无法对具体的汉字取模，因此，得想办法先对所有汉字进行取模，或使用字库，于是就有了下文。</p><h2 id="1-字符编码"><a href="#1-字符编码" class="headerlink" title="1 字符编码"></a>1 字符编码</h2><p>先从字符编码说起:<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">参考阮一峰博客字符编码</a></p><ul><li>ASCII码：一共规定了128个字符的编码，这128个符号（包括32个不能打印出来的控制符号），只占用了一个字节的后面7位，最前面的一位统一规定为0。</li><li>非ASCII码：英语用128个符号编码就够了，但是用来表示其他语言，128个符号是不够的。</li></ul><blockquote><ul><li>GB2312，GBK，Unicode，UTF-8均为非ASCII编码</li></ul></blockquote><ul><li>Unicode码：如果有一种编码，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。这就是 Unicode，就像它的名字都表示的，这是一种所有符号的编码。</li></ul><blockquote><ul><li>注意：Unicode 只是一个符号集，它只规定了符号的二进制代码，却没有规定这个二进制代码应该如何存储</li></ul></blockquote><ul><li>UTF-8码:UTF-8 就是在互联网上使用最广的一种 Unicode 的实现方式，是Unicode 的实现方式之一。</li><li>GB2312,GBK：GB2312是常用汉字的专用编码，GBK是所有汉字的专用编码。</li></ul><blockquote><ul><li>注意：GB类的汉字编码与后文的 Unicode 和 UTF-8 是毫无关系的</li></ul></blockquote><h2 id="2-液晶屏汉字显示原理"><a href="#2-液晶屏汉字显示原理" class="headerlink" title="2 液晶屏汉字显示原理"></a>2 液晶屏汉字显示原理</h2><ul><li>ASCII字符显示，由于ASCII字符仅128个，可以实现对每个字符一一取模，且占用MCU的RAM不会过大，此处不再介绍ASCII字符的显示。</li></ul><blockquote><ul><li>为什么显示英文一般不用字库芯片？<br>英文的单词都是由26个字母构成了，加上大小写的区别和其它一些字符，也不过才95个。假如要显示8 * 16像素大小的字符，每一个字符需要16个字节的字库空间，95个字符即是95 * 16=570个字节。即占用570个字节的RAM。对于小型MCU几K字节的RAM来说，绰绰有余了。</li></ul></blockquote><blockquote><ul><li>为什么显示中文需要字库芯片？<br>显示中文的话，需要每一个字的字模，16*16像素大小的中文，每一个中文都要32个字节。GBK收录了中文两万多个，如果要都能显示，需要700多K字节的空间。所以，我们选择了把这些字库放在外部存储器当中，可选择2M的FLASH存储芯片W25Q16做为存储媒介。放个700多K的字库足够了，并且，同时放两种字体的字库都没问题。</li></ul></blockquote><ul><li>常规汉字显示，采用相关的汉字取字模工具(PCtoLCD2002完美版)，取出字模，相关参数设置如下所示：</li></ul><p><img src="http://pic.huangruimin.tech/20190519171854.png"></p><p>由于我采用的液晶屏是逐行显示的，不同的液晶屏采用不同的显示模式，需根据具体情况选择字模。<br>取出“你”字模后，将字模数据复制到notepad++,调整成设置好的16列，21行的样式，在将16进制数据转换成2进制数据,然后将0替换成空格，即可找出汉字“你”的原型。</p><p><img src="http://pic.huangruimin.tech/20190519173234.png"></p><ul><li>对于液晶屏而言，字符，图片的显示都是像素点的点阵显示，因此，只要将上述数组中的数据转换成点阵数据显示到液晶屏中即可，对于二进制位1的位数据，显示出该像素点，对于二进制位0的位数据，不显示该像素点，即可显示出该汉字(暂不考虑颜色显示)。</li></ul><h2 id="3-字符显示的实现"><a href="#3-字符显示的实现" class="headerlink" title="3 字符显示的实现"></a>3 字符显示的实现</h2><p>上面讲到了字符显示的原理，接下来将讲解字符显示的实现，相关代码不依赖于底层，具有很好的移植性,且在文章最后放出了Github链接，要实现该代码的功能，需要以下前提条件：</p><blockquote><ul><li>已经在液晶屏上实现了画点功能，该函数将直接调用该功能</li><li>液晶屏在显示时，逐行扫描，且需要高位在前(参考上一节相关参数设置，其它类型的屏幕可能有所不同)</li></ul></blockquote><p>注：由于代码过长，为不影响阅读，仅放部分关键代码，如有需求，更多请参考文末的Github</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> font<span class="token operator">-&gt;</span>Height<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> font<span class="token operator">-&gt;</span>Width<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">*</span>ptr <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">0x80</span> <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">Paint_SetPixel</span><span class="token punctuation">(</span>x <span class="token operator">+</span> i<span class="token punctuation">,</span> y <span class="token operator">+</span> j<span class="token punctuation">,</span> Color_Foreground<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token function">Paint_SetPixel</span><span class="token punctuation">(</span>x <span class="token operator">+</span> i<span class="token punctuation">,</span> y <span class="token operator">+</span> j<span class="token punctuation">,</span> Color_Background<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ptr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span>font<span class="token operator">-&gt;</span>Width <span class="token operator">%</span> <span class="token number">8</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>ptr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此代码简单地实现了索引字模数组中的一个unsigned char类型的元素中的8位，将该8位绘制成像素点，此为字符显示的基本实现，</p><h2 id="4-任意汉字显示的实现-采用取模法"><a href="#4-任意汉字显示的实现-采用取模法" class="headerlink" title="4 任意汉字显示的实现(采用取模法)"></a>4 任意汉字显示的实现(采用取模法)</h2><p>本节将讲述如何实现任意汉字的显示。<br>需要准备以下工具:</p><ul><li>GBK字库</li><li>取模软件</li><li>二进制文件生成工具<br>如下图所示，且相关工具可从文末Github中直接获取得：<br><img src="http://pic.huangruimin.tech/20190520013605.png"></li></ul><p><strong>具体操作步骤如下:</strong></p><ul><li>将字库取模</li></ul><p>在工具栏处点“打开”按钮，打开gbk_ziku.txt文件，然后根据自己的需要，设置想要的取模方式，然后点工具栏上的“输出”按钮 并等待其完成，完成后会在取模软件所在路径生成了一个temp.txt文件。现在我是按照“宋体、点阵数为16、字重为4、取模为为16*16、对齐设置为左上、方向设置为横向取模，高位在左”的方式来取的字模，也就是我平时TFT液晶屏常用的一种字模。<br><img src="http://pic.huangruimin.tech/20190520012836.png"></p><p>打开temp.txt文件可知， 该文件包含了所有字库的点阵，且采用GBK编码排序：<br><img src="http://pic.huangruimin.tech/20190520013137.png"></p><ul><li>将取模的文件生成二进制文件</li></ul><p>将该temp.txt文件转换为二进制文件，供程序读取。在windows下进入CMD命令控制台，进入到相关文件所在的路径，接着，执行命令ziku.exe temp.txt命令，执行效果如下图所示，执行后将生成一个ziku.bin的文件：<br>  <img src="http://pic.huangruimin.tech/20190520015346.png"></p><ul><li>将二进制文件存入外部Flash，或Linux系统用户文件夹下：<br>得到ziku.bin文件后，可将该字库二进制文件存入外部Flash如W25Q16中(MCU)，或者Linux系统用户文件夹下(Linux)；其中，将该bin文件存放如外部Flash的方法为：</li></ul><blockquote><ul><li>单片机与电脑采用串口连接，单片机与W25Q16采用SPI方式连接。所以，我们只需要给单片机写一个接收串口数据再把数据通过SPI口传输到W25Q16中的程序即可。</li></ul></blockquote><blockquote><ul><li>使用FT232H芯片工具，该工具实现了USB转SPI，USB转I2C的功能，可直接通过PC的USB接口下载到带I2C或SPI接口的Flash或E2PROM中。</li></ul></blockquote><ul><li>检验二进制文件的可用性</li></ul><p>本文将只在Linux系统下进行检验，MCU环境下的检验同理：</p><p>该bin文件的检验程序如下所示(相关程序均已上传文章末尾的Github)：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/types.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/stat.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fcntl.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span><span class="token keyword">void</span> <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>FILE <span class="token operator">*</span>fd<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">//字库所在目录</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> <span class="token punctuation">(</span>fd<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"./ziku.bin"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Open dir error\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"你"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"好"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token string">"！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fclose</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//得到字模 </span><span class="token keyword">void</span> <span class="token function">Get_GBK_DZK</span><span class="token punctuation">(</span><span class="token class-name">uint8_t</span> <span class="token operator">*</span>code<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token class-name">uint8_t</span> GBKH<span class="token punctuation">,</span>GBKL<span class="token punctuation">;</span>                     <span class="token class-name">uint32_t</span> offset<span class="token punctuation">;</span><span class="token class-name">uint8_t</span>  character<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token class-name">uint8_t</span><span class="token operator">*</span> characterPtr<span class="token punctuation">;</span>    GBKH<span class="token operator">=</span><span class="token operator">*</span>code<span class="token punctuation">;</span>    GBKL<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>code<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>GBKH<span class="token operator">&gt;</span><span class="token number">0XFE</span><span class="token operator">||</span>GBKH<span class="token operator">&lt;</span><span class="token number">0X81</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    GBKH<span class="token operator">-=</span><span class="token number">0x81</span><span class="token punctuation">;</span>    GBKL<span class="token operator">-=</span><span class="token number">0x40</span><span class="token punctuation">;</span><span class="token comment">//获取字符在bin文件中的偏移量，一个字符占(16*16)/8=32字节。</span>    offset<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span><span class="token number">192</span><span class="token operator">*</span>GBKH<span class="token operator">+</span>GBKL<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">==</span><span class="token function">fseek</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span>offset<span class="token punctuation">,</span><span class="token constant">SEEK_SET</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Fseek error\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token comment">//得到字符指针</span><span class="token function">fread</span><span class="token punctuation">(</span>character<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>characterPtr <span class="token operator">=</span> character<span class="token punctuation">;</span><span class="token comment">//显示字符，16*16，一个字符占(16*16)/8=32字节。</span><span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">16</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>characterPtr <span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">0x80</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">8</span> <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">{</span>characterPtr<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>将以上程序保存为:fontTest.c，gcc编译，执行，结果如下图所示：<br><img src="http://pic.huangruimin.tech/20190521002021.png"><br>由执行结果可见，程序能够从二进制bin文件中提取有用信息，并且，该bin文件保存了GBK编码的所有汉字，将“你好”替换成其他任意汉字也是可从bin文件中提取出子模的，生成的bin文件是有效的。<br>接下来讲解程序中的几个注意事项:</p><ul><li>该程序源文件必须以GBK编码或GB2312编码保存(GBK编码兼容GB2312编码)，在notepad++中，保存方式如下图所示：<br><img src="http://pic.huangruimin.tech/20190521002857.png"></li><li>解释下如何获得内存中字符的偏移量：<blockquote><p>GBK编码：每个GBK码由2个字节组成：</p></blockquote></li></ul><blockquote><blockquote><p>第一个字节为0X81~0XF：<br>第二个字节分为两部分：</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>一是0X40-0X7E</p></blockquote></blockquote></blockquote><blockquote><blockquote><blockquote><p>二是0X80-0XFE</p></blockquote></blockquote></blockquote><p>例如汉字“瑞”的GBK编码为C8 F0，第一字节C8，位于0X81-0XFE之间，第二字节F0，位于0X40-0XFE之间</p><blockquote><p>第一个字节代表的意义称为区，那么GBK里面总共有126个区（0XFE-0X81+1=126）<br>第二个字节代表的意义就是每个区内有多少个汉字，算了一下，一共有190个（0XFE-0X80+0X7E-0X40+2=190）。</p></blockquote><p>那么，GBK一共存储了126X190=23940个汉字。</p><blockquote><blockquote><p>仔细看GBK编码第二个字节两部分中，0X40-0X7E和0X80-0XFE，也就是说它是从0X40~到0XFF，中间的0x7F和最后的0xFF没有用到。</p></blockquote></blockquote><blockquote><blockquote><p>但是为了能够线性查找，我们暂且认为这两个字节也存在，就是我们强制把每个区190个汉字当做每个区192个汉字，不过0X7F和0XFF上没有汉字。</p></blockquote></blockquote><p>定义GBKH代表第一个字节，GBKL代表第二个字节，字库的偏移量offset，那么其计算方法如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">   GBKH<span class="token operator">=</span><span class="token operator">*</span>code<span class="token punctuation">;</span>   GBKL<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>code<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>GBKH<span class="token operator">&gt;</span><span class="token number">0XFE</span><span class="token operator">||</span>GBKH<span class="token operator">&lt;</span><span class="token number">0X81</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span>   GBKH<span class="token operator">-=</span><span class="token number">0x81</span><span class="token punctuation">;</span>   GBKL<span class="token operator">-=</span><span class="token number">0x40</span><span class="token punctuation">;</span><span class="token comment">//字模大小为16*16/8=32，一个字模占32字节</span>   offset<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token punctuation">)</span><span class="token number">192</span><span class="token operator">*</span>GBKH<span class="token operator">+</span>GBKL<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现了在控制台窗口打印汉字字模，那么在TFTLCD，OLED，墨水屏等屏幕上，只要先实现了画点功能，那么，显示任意汉字也可以实现的了。</p><h2 id="5-任意汉字显示的实现-采用字库法"><a href="#5-任意汉字显示的实现-采用字库法" class="headerlink" title="5 任意汉字显示的实现(采用字库法)"></a>5 任意汉字显示的实现(采用字库法)</h2><p>最后再介绍一种显示汉字的方法，该方法采用Python实现，直接调用字体库，仅在Linux系统上可实现，下面将以树莓派为例，相关的操作如下：</p><p>首先安装好Pillow库以及必要液晶屏显示必要的SPI库，GPIO库等：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-pip<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-imaging<span class="token function">sudo</span> pip3 <span class="token function">install</span> spidev<span class="token function">sudo</span> pip3 <span class="token function">install</span> RPi.GPIO<span class="token function">sudo</span> pip3 <span class="token function">install</span> Pillow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装 Pillow 如果报错: ImportError: libopenjp2.so.7: cannot open shared object file: No<br>such file or directory，则先执行如下指令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libopenjp2-7-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装必要的字体:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ttf-wqy-zenhei ttf-wqy-microhei<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来是调用微软雅黑字体进行显示的部分示例(python3)，详情代码参考文章末尾留下的Github:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/python</span><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token keyword">import</span> epd7in5b<span class="token keyword">import</span> time<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token punctuation">,</span>ImageDraw<span class="token punctuation">,</span>ImageFont<span class="token keyword">import</span> traceback<span class="token keyword">try</span><span class="token punctuation">:</span>    epd <span class="token operator">=</span> epd7in5b<span class="token punctuation">.</span>EPD<span class="token punctuation">(</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Clear..."</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>Clear<span class="token punctuation">(</span><span class="token number">0xFF</span><span class="token punctuation">)</span>        <span class="token comment"># Drawing on the Horizontal image</span>    HBlackimage <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>epd7in5b<span class="token punctuation">.</span>EPD_WIDTH<span class="token punctuation">,</span> epd7in5b<span class="token punctuation">.</span>EPD_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>    HRedimage <span class="token operator">=</span> Image<span class="token punctuation">.</span>new<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>epd7in5b<span class="token punctuation">.</span>EPD_WIDTH<span class="token punctuation">,</span> epd7in5b<span class="token punctuation">.</span>EPD_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>        <span class="token comment"># Horizontal</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Drawing"</span><span class="token punctuation">)</span>    drawblack <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>HBlackimage<span class="token punctuation">)</span>    drawred <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>HRedimage<span class="token punctuation">)</span>    font24 <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">'/usr/share/fonts/truetype/wqy/wqy-microhei.ttc'</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'hello world'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'7.5inch e-Paper B'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">u'微雪电子'</span><span class="token punctuation">,</span> font <span class="token operator">=</span> font24<span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>        drawblack<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawblack<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> outline <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>        drawred<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>line<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>arc<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    drawred<span class="token punctuation">.</span>chord<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>display<span class="token punctuation">(</span>epd<span class="token punctuation">.</span>getbuffer<span class="token punctuation">(</span>HBlackimage<span class="token punctuation">)</span><span class="token punctuation">,</span> epd<span class="token punctuation">.</span>getbuffer<span class="token punctuation">(</span>HRedimage<span class="token punctuation">)</span><span class="token punctuation">)</span>    epd<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'traceback.format_exc():\n%s'</span><span class="token punctuation">,</span>traceback<span class="token punctuation">.</span>format_exc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该代码的精髓在于，先创建一段缓存，然后采用pillow库的相关方法通过字符串获取对应字库中字符的字模，将字模数据存入缓存中，然后将缓存数据显示到屏幕上，详情参考pillow库中的Image,ImageDraw,ImageFont方法对应的手册。</p><blockquote><p>注意，代码中的中文采用UTF-8编码，保存的时候，为防止乱码，必须以UTF-8编码保存(可采用notepad++工具保存为UTF-8编码)</p></blockquote><p>最后，放出相关代码的Github：<br><a href="https://github.com/RuiminHuang/fontDisplay">软件工具,字模bin文件校验代码</a><br><a href="https://github.com/RuiminHuang/e-Paper">刷屏代码示例</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_10行代码为你的头像添加国旗</title>
      <link href="/2020/06/15/rpi-opencv-10-xing-dai-ma-wei-ni-de-tou-xiang-tian-jia-guo-qi/"/>
      <url>/2020/06/15/rpi-opencv-10-xing-dai-ma-wei-ni-de-tou-xiang-tian-jia-guo-qi/</url>
      
        <content type="html"><![CDATA[<p>在学完前面较为枯燥的概念后，接下来，是时候展现真正的技术了。由于OpenCV既是机器视觉库，也是图像处理库，给头像添加国旗，那自然是小菜一碟，如果用Python写的话，只要10行左右。</p><h2 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1 思路分析"></a>1 思路分析</h2><p>好比把大象装进冰箱要几步一样，为头像添加上国旗也是如此，先不讲通过什么语言实现，毕竟语言只是工具，OK，如果那，那为头像添加上国旗则需要以下几个步骤：</p><ul><li>Step1：读取头像和国旗图案。</li><li>Step2：把国旗叠加到头像上。</li><li>Step3：把叠加后的图片保存。</li></ul><p>把大象放进冰箱只要这么几步，但是具体把国旗叠加到头像上，需要考虑的一体细节:</p><ul><li>国旗必须缩放到合适大小，才能放到头像上。</li><li>国旗缩放后不能变形。<br>因此：<blockquote><p>就把国旗的宽度缩放至头像宽度的1/4，然后高度也按照同样的比例进行缩放。</p></blockquote></li></ul><p>核心问题已经解决了，剩下来就是工具自身实现的问题，在OpenCV中，读写图像，缩放图像，图像合成，图像显示，是比较基本的操作，现在，就开始驾驭工具，把大象放入冰箱，先从Python开始讲起：</p><h2 id="2-Python实现"><a href="#2-Python实现" class="headerlink" title="2 Python实现"></a>2 Python实现</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf8 -*-</span><span class="token keyword">import</span> cv2<span class="token comment"># Step1：读取头像和国旗图像。</span>img_head <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'head.jpg'</span><span class="token punctuation">)</span>img_flag <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'flag.jpg'</span><span class="token punctuation">)</span><span class="token comment"># Step2：把国旗叠加到头像上。</span><span class="token comment"># Step2.1：获取头像和国旗宽度</span>w_head<span class="token punctuation">,</span> h_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>w_flag<span class="token punctuation">,</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># Step2.2：根据宽度计算缩放比例</span>scale <span class="token operator">=</span> w_head <span class="token operator">/</span> w_flag <span class="token operator">/</span> <span class="token number">4</span><span class="token comment"># Step2.3：根据缩放比例缩放国旗</span>img_flag <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img_flag<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fx<span class="token operator">=</span>scale<span class="token punctuation">,</span> fy<span class="token operator">=</span>scale<span class="token punctuation">)</span><span class="token comment"># Step2.4：获取缩放后国旗的新尺寸</span>w_flag<span class="token punctuation">,</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># Step2.5：根据缩放后的尺寸叠加国旗到头像右下角</span><span class="token keyword">for</span> c <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img_head<span class="token punctuation">[</span>w_head <span class="token operator">-</span> w_flag<span class="token punctuation">:</span><span class="token punctuation">,</span> h_head <span class="token operator">-</span> h_flag<span class="token punctuation">:</span><span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> img_flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token comment"># Step3：保存叠加后的图像</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'new_head.jpg'</span><span class="token punctuation">,</span> img_head<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序执行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191028175608.png"></p><p>注释有说明步骤相关的思路及其实现。</p><h2 id="3-cpp实现"><a href="#3-cpp实现" class="headerlink" title="3 cpp实现"></a>3 cpp实现</h2><p>接下来，来看看cpp执行相关的代码</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//Step1：读取头像和国旗图像。</span>    Mat img_head <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"head.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat img_flag <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"flag.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat img_flag_resized<span class="token punctuation">;</span>    <span class="token comment">//Step2：把国旗叠加到头像上。</span>    <span class="token comment">//Step2.1：获取头像和国旗宽度</span>    <span class="token keyword">int</span> w_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    <span class="token keyword">int</span> h_head <span class="token operator">=</span> img_head<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token keyword">int</span> w_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    <span class="token keyword">int</span> h_flag <span class="token operator">=</span> img_flag<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token comment">//Step2.2：根据宽度计算缩放比例</span>    <span class="token keyword">double</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>w_head<span class="token operator">/</span>w_flag<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">;</span>    <span class="token comment">//Step2.3：根据缩放比例缩放国旗    </span>    <span class="token function">resize</span><span class="token punctuation">(</span>img_flag<span class="token punctuation">,</span>img_flag_resized<span class="token punctuation">,</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>scale<span class="token punctuation">,</span>scale<span class="token punctuation">,</span>INTER_NEAREST<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Step2.4：获取缩放后国旗的新尺寸</span>    w_flag <span class="token operator">=</span> img_flag_resized<span class="token punctuation">.</span>cols<span class="token punctuation">;</span>    h_flag <span class="token operator">=</span> img_flag_resized<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>    <span class="token comment">//Step2.5：根据缩放后的尺寸叠加国旗到头像右下角</span>    Mat imageROI<span class="token operator">=</span><span class="token function">img_head</span><span class="token punctuation">(</span><span class="token function">Rect</span><span class="token punctuation">(</span>w_head<span class="token operator">-</span>w_flag<span class="token punctuation">,</span>h_head<span class="token operator">-</span>h_flag<span class="token punctuation">,</span>w_flag<span class="token punctuation">,</span>h_flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    img_flag_resized<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>imageROI<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Step3：保存叠加后的图像</span>    <span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"new_head.jpg"</span><span class="token punctuation">,</span>img_head<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其CmakeList.txt为：</p><pre class="line-numbers language-cmake" data-language="cmake"><code class="language-cmake"><span class="token keyword">cmake_minimum_required</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token keyword">project</span><span class="token punctuation">(</span>07_National_Flag<span class="token punctuation">)</span><span class="token keyword">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span><span class="token keyword">add_executable</span><span class="token punctuation">(</span>07_National_Flag main.cpp<span class="token punctuation">)</span><span class="token keyword">target_link_libraries</span><span class="token punctuation">(</span>07_National_Flag <span class="token punctuation">${</span>OpenCV_LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行结果图下图所示：<br><img src="http://pic.huangruimin.tech/20191028194113.png"></p><p>其执行效果同Python。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_ROI、绘图等常用API</title>
      <link href="/2019/10/28/rpi-opencv-roi-hui-tu-deng-chang-yong-api/"/>
      <url>/2019/10/28/rpi-opencv-roi-hui-tu-deng-chang-yong-api/</url>
      
        <content type="html"><![CDATA[<p>本章接上一章之后，来介绍图像处理中的其它一些操作，主要包括ROI和绘图，这些操作在实际处理中也经常用到。</p><h2 id="1-ROI"><a href="#1-ROI" class="headerlink" title="1 ROI"></a>1 ROI</h2><p>ROI(Region Of Interest)是指需要处理的那一部分图像，本节将通过一个示例讲解通过鼠标选中图形ROI区域。</p><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>在Python中，主要涉及到selectROI函数，其函数原型如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">rect <span class="token operator">=</span> cv2<span class="token punctuation">.</span>selectROI<span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> showCrosshair<span class="token punctuation">,</span> fromCenter<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>“image” : winName 窗口名称</p></li><li><p>img : 目标想要裁剪的图像</p></li><li><p>showCrosshair : 是否显示网格</p></li></ul><blockquote><p>True：显示网格</p></blockquote><blockquote><p>False：只有矩形</p></blockquote><ul><li>fromCenter:</li></ul><blockquote><p>True：第一次选中的点为矩形的中心.</p></blockquote><blockquote><p>False：第一次选中的点为矩形的左上角.</p></blockquote><p>返回的是一个tuple值, 代表矩形区域. 分别代表矩形左上角坐标 (x, y) 与矩形宽度w跟高度h</p><blockquote><p>(x, y, w, h) = rect</p></blockquote><p>使用numpy切片功能的时候要注意, 第一维指的是行数, 第二维度指的是列数.</p><blockquote><p>imCrop = img[y : y+h, x:x+w]</p></blockquote><p>接下来，直接上源码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span><span class="token comment"># create a window</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span> cv2<span class="token punctuation">.</span>WINDOW_NORMAL <span class="token operator">|</span> cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image_roi'</span><span class="token punctuation">,</span> flags<span class="token operator">=</span> cv2<span class="token punctuation">.</span>WINDOW_NORMAL <span class="token operator">|</span> cv2<span class="token punctuation">.</span>WINDOW_FREERATIO<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span><span class="token comment"># whether to show crosschair </span>showCrosshair <span class="token operator">=</span> <span class="token boolean">True</span><span class="token comment"># if true, then from the center</span><span class="token comment"># if false, then from the left-top</span>fromCenter <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># then let use to choose the ROI </span>rect <span class="token operator">=</span> cv2<span class="token punctuation">.</span>selectROI<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> showCrosshair<span class="token punctuation">,</span> fromCenter<span class="token punctuation">)</span><span class="token comment"># get the ROI</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span> <span class="token operator">=</span> rect<span class="token comment"># Crop image</span>imCrop <span class="token operator">=</span> img<span class="token punctuation">[</span>y <span class="token punctuation">:</span> y<span class="token operator">+</span>h<span class="token punctuation">,</span> x<span class="token punctuation">:</span>x<span class="token operator">+</span>w<span class="token punctuation">]</span><span class="token comment"># Display cropped image</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image_roi'</span><span class="token punctuation">,</span> imCrop<span class="token punctuation">)</span><span class="token comment"># write image to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image_roi.png'</span><span class="token punctuation">,</span> imCrop<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果如下图所示：<br><img src="http://huangruimin.club//20190905024424.png"></p><p>运行程序后，按住鼠标左键选中ROI，按下Enter键裁剪得到需要的ROI区域，并显示到另一个窗口中，如果需要取消ROI区域选择，请按下C键。</p><h3 id="1-2-C"><a href="#1-2-C" class="headerlink" title="1.2 C++"></a>1.2 C++</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;opencv2/opencv.hpp&gt;#include&lt;opencv2/highgui/highgui.hpp&gt;#include&lt;opencv2/imgproc/imgproc.hpp&gt;using namespace std;using namespace cv;int main(){Mat img,imCrop;Rect rect;img = imread("color.jpg");// create a windownamedWindow("image", WINDOW_NORMAL | WINDOW_FREERATIO);namedWindow("image_roi", WINDOW_NORMAL | WINDOW_FREERATIO);imshow("image",img);// whether to show crosschair bool showCrosshair = true;// if true, then from the center// if false, then from the left-topbool fromCenter = false;// then let use to choose the ROI rect = selectROI("image", img, showCrosshair, fromCenter);// get the ROI and crop the imageimCrop = img(rect);// Display cropped imageimshow("image_roi",imCrop);// write image to local diskimwrite("image_roi.jpg", imCrop);waitKey(0);return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其C++源码运行效果同Python源码。</p><h2 id="2-绘图"><a href="#2-绘图" class="headerlink" title="2 绘图"></a>2 绘图</h2><p>接下来将讲解OpenCV中绘图的使用，在计算机视觉领域，使用绘图功能是一个非常高频的需求，例如，在颜色识别，人脸识别，物体识别中，识别到具体的物体，可以将其打印出来，也可以直接在原图中绘制一个圆形等，显而易见，后者效果更好。</p><p>注意，OpenCV可以绘制的图形，其实matplotlib也都可以，OpenCV之所以还提供一个绘图功能是因为OpenCV绘图是直接在原图上进行绘图的，并且使用的是默认的BGR色彩空间，所以，OpenCV默认的绘图功能会更加方便一些。</p><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><p>接下来首先介绍在OpenCV中常见的几何图形绘制与文本绘制，例如，直线，矩形，圆形，多边形，椭圆等。</p><ul><li>初始化画布</li></ul><p>在Python中，图像数据是通过numpy的ndarray存储的，首先，应当初始化一个ndarra数据结构用于存储图像：<br>具体处理如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">InitPaint</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    paint <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">"uint8"</span><span class="token punctuation">)</span>    paint<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    <span class="token keyword">return</span> paint<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>绘制直线</li></ul><p>函数的函数原型：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制矩形</li></ul><p>函数原型：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制圆形</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制多边形</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span> pts<span class="token operator">=</span><span class="token punctuation">[</span>points<span class="token punctuation">]</span><span class="token punctuation">,</span> isClosed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制椭圆</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>img<span class="token operator">=</span>canvas<span class="token punctuation">,</span>center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> startAngle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> endAngle<span class="token operator">=</span><span class="token number">360</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>绘制文字</li></ul><p>函数原型</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">font <span class="token operator">=</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXcv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>canvas<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"HelloWorld"</span><span class="token punctuation">,</span> org<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontFace<span class="token operator">=</span>font<span class="token punctuation">,</span> fontScale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lineType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>样例演示</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> npCOLOR_MAP <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">"blue"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"green"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"red"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"white"</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">def</span> <span class="token function">InitPaint</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"white"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    paint <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token string">"uint8"</span><span class="token punctuation">)</span>    paint<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> color    <span class="token keyword">return</span> paintpaint <span class="token operator">=</span> InitPaint<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> pt1<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"blue"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span> COLOR_MAP<span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>points <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">270</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">290</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>int32<span class="token punctuation">)</span>points <span class="token operator">=</span> points<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>paint<span class="token punctuation">,</span> pts<span class="token operator">=</span><span class="token punctuation">[</span>points<span class="token punctuation">]</span><span class="token punctuation">,</span> isClosed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span>COLOR_MAP<span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>ellipse<span class="token punctuation">(</span>img<span class="token operator">=</span>paint<span class="token punctuation">,</span>center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">,</span> axes<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> angle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> startAngle<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> endAngle<span class="token operator">=</span><span class="token number">360</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>font <span class="token operator">=</span> cv2<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXline <span class="token operator">=</span> cv2<span class="token punctuation">.</span>LINE_AAcv2<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token operator">=</span>paint<span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"Hello"</span><span class="token punctuation">,</span> org<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontFace<span class="token operator">=</span>font<span class="token punctuation">,</span> fontScale<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>thickness<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lineType<span class="token operator">=</span>line<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Paint'</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该程序运行后，将显示如下所示图像：</p><p><img src="http://huangruimin.club//20190905110410.png"></p><h3 id="2-2-C"><a href="#2-2-C" class="headerlink" title="2.2 C++"></a>2.2 C++</h3><p>其C++源码类似如下：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;#include&lt;opencv2/opencv.hpp&gt;#include&lt;opencv2/highgui/highgui.hpp&gt;#include&lt;opencv2/imgproc/imgproc.hpp&gt;using namespace std;using namespace cv;Mat InitPaint(int width, int height, Scalar color){Mat paint = Mat(width, height,CV_8UC3,color);return paint;}int main(){Mat paint = InitPaint(300,300,Scalar(255,255,255));line(paint, Point(0, 0), Point(300, 300), Scalar(0,255,0));circle(paint, Point(150, 150), 50, Scalar(0,255,0));circle(paint, Point(150, 150), 30, Scalar(255,0,0), -1);rectangle(paint, Point(10, 10), Point(60, 60),Scalar(0,0,255));Point points[1][4];points[0][0] = Point(100,50);    points[0][1] = Point(200,200);    points[0][2] = Point(270,200);    points[0][3] = Point(290,100);const Point* pts[] = {points[0]};int npt[] = {4}; polylines(paint, pts, npt,1,true, Scalar(0,0,255), 3);ellipse(paint,Point(256,256), Size(40,20), 0, 0, 360, Scalar(100, 200, 0), -1);int font = FONT_HERSHEY_SIMPLEX;int line = LINE_AA;putText(paint, "Hello", Point(10, 250), font, 2.0, Scalar(0, 0, 255), 1,line);imshow("Paint", paint);waitKey(0);return 0;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其C++源码运行效果同Python源码。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_IDE及图像存储的数据结构</title>
      <link href="/2019/10/24/rpi-opencv-ide-ji-tu-xiang-cun-chu-de-shu-ju-jie-gou/"/>
      <url>/2019/10/24/rpi-opencv-ide-ji-tu-xiang-cun-chu-de-shu-ju-jie-gou/</url>
      
        <content type="html"><![CDATA[<p>本章将首先讲解开发OpenCV的基本的IDE，以方便代码提示，同时方便阅读底层源码，接着，讲解图像存储的基本数据结构。</p><h2 id="1-IDE"><a href="#1-IDE" class="headerlink" title="1 IDE"></a>1 IDE</h2><p>之前两章开发OpenCV均未使用到IDE，比如开发Python的代码，用记事本即可写，需要时执行该脚本即可，当开发cpp的代码则需要先Cmake生成Makefile，再make编译，最后执行，为提高效率，首先介绍常用的IDE的相关配置，以及如何将OpenCV集成到该工程中。</p><p>说明：</p><ul><li>关于Python中，目前采用的是OpenCV4，为什么却是import cv2呢？</li></ul><blockquote><p>OpenCV1采用C语言编写，OpenCV2，OpenCV3，OpenCV4均采用cpp编写，在Python中，cv1指代底 层算法为C语言的OpenCV版本，cv2指代底层算法为C ++语言的版本，所以，在Python中，import cv2可能是OpenCV2,OpenCV3,OpenCV4等版本。</p></blockquote><ul><li>Python版本的OpenCV能不能看到底层的Python实现？</li></ul><blockquote><p>不能，因为底层实现为cpp，OpenCV仅仅提供了Python接口，同时OpenCV还提供了C#，java，Andriod等的接口。</p></blockquote><ul><li>cpp版本的OpenCV，推荐用什么IDE呢？</li></ul><blockquote><p>因为工程是通过Cmake构建的，首先应该选择支持构建Cmake工程的IDE，在Linux(Raspbian)平台下，推荐Qt Creator，除了采用Cmake构建OpenCV工程外，Qt Creator还支持采用qmake构建OpenCV工程；此外，Qt creator还支持底层接口函数跳转，方便跳转到对应的函数中，方便OpenCV的算法研究，算法移植等工作。</p></blockquote><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>若在树莓派平台采用Raspbian系统结合Python3开发OpenCV，由于Python仅提供相应的接口，无法查阅底层的实现，加上Python本身的简洁优雅，使用树莓派自带的Thonny Python IDE即可，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901022724.png"></p><p>点击Load，打开00_Test_OpenCV.py，点击Run，即可运行相应的Python脚本，此外，该IDE支持断点调试，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901023321.png"></p><h3 id="1-2-cpp"><a href="#1-2-cpp" class="headerlink" title="1.2 cpp"></a>1.2 cpp</h3><p>在cpp开发环境中，首选Qt Creator，方便添加依赖，同时支持跳转底层代码，开发与研究两不误；同时，结合Qt自带的UI界面，方便做成桌面应用；并且，支持添加树莓派自带bcm2835，wiringPi等库，方便进行底层开发；结合C ++的特点，向上支持应用开发，向下支持底层开发。</p><h4 id="1-2-1-安装Qt-Creator"><a href="#1-2-1-安装Qt-Creator" class="headerlink" title="1.2.1 安装Qt Creator"></a>1.2.1 安装Qt Creator</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> qt5-default<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> qtcreator<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装好之后，即可在菜单-&gt;编程界面中找到Qt Creator，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901012530.png"></p><h4 id="1-2-2-创建并运行Cmake项目"><a href="#1-2-2-创建并运行Cmake项目" class="headerlink" title="1.2.2 创建并运行Cmake项目"></a>1.2.2 创建并运行Cmake项目</h4><p>打开Qt Creator，新建工程，选择纯cpp项目：</p><p><img src="http://pic.huangruimin.tech/20190901014412.png"></p><p>选择合适的路径：</p><p><img src="http://pic.huangruimin.tech/20190901014532.png"></p><p>选择Cmake：</p><p><img src="http://pic.huangruimin.tech/20190901014622.png"></p><p>一般选择默认编译套件即可：</p><p><img src="http://pic.huangruimin.tech/20190901014720.png"></p><p>默认的工程中，已经包含了Cmakelists.txt和main.cpp文件，现在修改Cmakelists.txt和main.cpp文件为《树莓派OpenCV系列教程1：开发环境搭建》的内容，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901020105.png"><br><img src="http://pic.huangruimin.tech/20190901020016.png"></p><p>若Qt Creator提示有错误，一般Cmakelists.txt有误。</p><p>此时,点击Qt Creator左下角的绿色三角形，将运行程序，打开摄像头，并输出相关信息，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901021139.png"></p><p>程序设定了按下q键即可退出窗口，此时，按下q键即可退出。</p><h4 id="1-2-3-其它使用说明"><a href="#1-2-3-其它使用说明" class="headerlink" title="1.2.3 其它使用说明"></a>1.2.3 其它使用说明</h4><p>若想跳转到具体的函数，可按住Ctrl，再单击相应的函数即可，跳转到具体的函数之后，有相应的函数说明，方便查阅，如下图：</p><p><img src="http://pic.huangruimin.tech/20190901021813.png"></p><p>并且，Qt Creator支持编程提示，错误提示等功能，能大幅提高效率，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901022115.png"></p><h2 id="2-图像存储的数据结构"><a href="#2-图像存储的数据结构" class="headerlink" title="2 图像存储的数据结构"></a>2 图像存储的数据结构</h2><p>任何图像处理算法，都是从操作每个像素点开始的。即使我们不会使用OpenCV提供的图像处理算法，只要了解图像处理算法的基本原理，也可以写出具有相同功能的程序。接下来，我们首先讲解图像存储的基本数据结构，接着，讲解如何访问图像中的具体某个像素点，将分为Python3和cpp进行讲解。</p><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><h4 id="2-1-1-numpy基础"><a href="#2-1-1-numpy基础" class="headerlink" title="2.1.1 numpy基础"></a>2.1.1 numpy基础</h4><p>在Python中OpenCV图像读取(imread) 读入的数据格式是numpy的ndarray数据格式，此外，Python在数据计算领域火爆，numpy功不可没，所以，在讲解Python图像存储数据结构之前，有必要先讲解涉及到的numpy的相关操作：</p><h5 id="ndarray初始化数组"><a href="#ndarray初始化数组" class="headerlink" title="ndarray初始化数组"></a>ndarray初始化数组</h5><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># One-dimensional array</span>A1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># Two-dimensional array</span>A2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A1: \n%s'</span><span class="token operator">%</span>A1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2: \n%s'</span><span class="token operator">%</span>A2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A1<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>A2<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ndarray的属性"><a href="#ndarray的属性" class="headerlink" title="ndarray的属性"></a>ndarray的属性</h5><table><thead><tr><th>属性名称</th><th>含义</th></tr></thead><tbody><tr><td>ndarray.ndim</td><td>数组的维度,等于Rank</td></tr><tr><td>ndarray.shape</td><td>(行数, 列数)</td></tr><tr><td>ndarray.size</td><td>元素总个数 = 列数 * 行数</td></tr><tr><td>ndarray.dtype</td><td>数组元素数据类型</td></tr><tr><td>ndarray.itemsize</td><td>数组中每个元素,字节大小</td></tr></tbody></table><p>Python3：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.ndim = %d'</span> <span class="token operator">%</span> A2<span class="token punctuation">.</span>ndim<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.shape'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>A2<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.size = %d'</span> <span class="token operator">%</span> A2<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.dtype = %s'</span><span class="token operator">%</span>A2<span class="token punctuation">.</span>dtype<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A2.itemsize = %d'</span><span class="token operator">%</span>A2<span class="token punctuation">.</span>itemsize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A2<span class="token punctuation">.</span>ndim <span class="token operator">=</span> <span class="token number">2</span>A2<span class="token punctuation">.</span>shape<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>A2<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">6</span>A2<span class="token punctuation">.</span>dtype <span class="token operator">=</span> int64A2<span class="token punctuation">.</span>itemsize <span class="token operator">=</span> <span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="ndarray的切片操作"><a href="#ndarray的切片操作" class="headerlink" title="ndarray的切片操作"></a>ndarray的切片操作</h5><p>对数组进行切片操作，指的是获取数组的其中某一个子区域，具体切片操作，详情见如下图：</p><h6 id="一维数组的切片操作"><a href="#一维数组的切片操作" class="headerlink" title="一维数组的切片操作"></a>一维数组的切片操作</h6><p><img src="http://pic.huangruimin.tech/20190901214035.png"><br>其中：<br>A = np.arange(10)表示生成0到9，步长为1的一维数组。</p><p>A[0:3:1]是A[0:3]及A[:3]的完整写法，表示取一维数组A中索引从0到3(但不包含3)，步长为1的元素。</p><p>A[-1:5:-1]中：这里start=-1代表最后一个元素，表示取一维数组A中索引从最后一个到第5个(但不包含5)，步长为-1的元素。</p><p>A[ : : -1]表示将一维数组A中的元素逆序取出</p><p>同理：</p><p>A[ : : 1]表示将一维数组A中的元素顺序取出</p><h6 id="多维数组的切片操作"><a href="#多维数组的切片操作" class="headerlink" title="多维数组的切片操作"></a>多维数组的切片操作</h6><p>对于多维数组的切片操作，中间需要使用逗号进行分隔，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190901221239.png"></p><p>对于图像数据结构ndarray的切片操作，可参考上图。</p><h4 id="2-1-2-OpenCV中图像数据结构ndarray"><a href="#2-1-2-OpenCV中图像数据结构ndarray" class="headerlink" title="2.1.2 OpenCV中图像数据结构ndarray"></a>2.1.2 OpenCV中图像数据结构ndarray</h4><p>下图是OpenCV中BGR格式的数据结构：</p><p><img src="http://pic.huangruimin.tech/20190901221911.png"></p><p>第一维度 : Height 高度, 对应这张图片的 nRow行数</p><p>第二维度 : Width 宽度, 对应这张图片的nCol 列数</p><p>第三维度: Value BGR三通道的值.</p><p>BGR 分别代表：B: Blue 蓝色，G: Green 绿色，R: Red 红色</p><h4 id="2-1-3-从ndarray中取出像素点值"><a href="#2-1-3-从ndarray中取出像素点值" class="headerlink" title="2.1.3 从ndarray中取出像素点值"></a>2.1.3 从ndarray中取出像素点值</h4><p>注意，由于历史原因，OpenCV存储图像的数据结构采用的BGR格式，而非RGB，下面，将读取一幅图片，并把这幅图片的像素分片打印出来。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">102</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902000858.png"></p><p>通过对图像数据结构ndarray的切片操作，打印出了4个像素点的值，需要注意的是，每个点的像素值是以(B,G,R)的形式存储。</p><h3 id="2-2-cpp"><a href="#2-2-cpp" class="headerlink" title="2.2 cpp"></a>2.2 cpp</h3><p>与Python不同，在OpenCV4版本中(OpenCV1例外)，提供了Mat类作为图像容器，该对象利用了内存管理(非严格意义上的)，可以避免在退出程序前忘记释放内存造成的内存泄露。</p><p>总而言之，Mat就是一个类，由两个数据部分组成：矩阵头(包含矩阵尺寸、存储方法、存储地址等信息)和一个存储所有像素值的矩阵(根据所选存储方法的不同，矩阵可以是不同的维数)的指针。</p><h4 id="2-2-1-创建矩阵及输出矩阵的常用方法"><a href="#2-2-1-创建矩阵及输出矩阵的常用方法" class="headerlink" title="2.2.1 创建矩阵及输出矩阵的常用方法"></a>2.2.1 创建矩阵及输出矩阵的常用方法</h4><p>当使用拷贝构造函数，或对矩阵进行复制时，只复制信息头和矩阵指针，而不复制矩阵。</p><p>来看下面这段代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat A<span class="token punctuation">,</span>CA <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"1.jpg"</span>，CV_LOAD_IMAGE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat <span class="token function">B</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">;</span>C <span class="token operator">=</span> A<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在以上代码中，构造函数Mat B(A),赋值操作C=A,均只是复制矩阵A的信息头和矩阵指针，而不复制矩阵。</p><p>如果需要复制矩阵进行操作(实际不建议大量复制矩阵，因为图像一般比较占内存)，可使用以下操作：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat A<span class="token punctuation">,</span>B<span class="token punctuation">,</span>C<span class="token punctuation">;</span>A <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"1.jpg"</span>，CV_LOAD_IMAGE_COLOR<span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> A<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>A<span class="token punctuation">.</span><span class="token function">copyTo</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样一来，B和C均复制了A的图像矩阵。</p><p>此外，可直观地使用以下方法创建矩阵：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">Mat <span class="token function">M</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>CV_8UC3<span class="token punctuation">,</span><span class="token function">Scalar</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"M = "</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> <span class="token string">" "</span> <span class="token operator">&lt;&lt;</span> M <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>输出结果如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">M<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>下面将通过一个综合示例来演示创建矩阵及矩阵的输出方法：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"opencv2/core/core.hpp"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"opencv2/highgui/highgui.hpp"</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//Create</span>    Mat I <span class="token operator">=</span> <span class="token class-name">Mat</span><span class="token double-colon punctuation">::</span><span class="token function">eye</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> CV_64F<span class="token punctuation">)</span><span class="token punctuation">;</span>    I<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">at</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> CV_PI<span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"I=\n"</span> <span class="token operator">&lt;&lt;</span> I <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Mat r <span class="token operator">=</span> <span class="token function">Mat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> CV_8UC3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">randu</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Scalar</span><span class="token double-colon punctuation">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(OpenCV default Style)=\n"</span> <span class="token operator">&lt;&lt;</span> r <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Python Style)=\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_PYTHON<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Numpy Style)=\n"</span> <span class="token operator">&lt;&lt;</span>  <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_NUMPY<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(Comma Style)=\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_CSV<span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"(C Style)=\n"</span> <span class="token operator">&lt;&lt;</span>  <span class="token function">format</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> Formatter<span class="token double-colon punctuation">::</span>FMT_C<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";"</span> <span class="token operator">&lt;&lt;</span> endl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Point2f <span class="token function">p</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Two Dimension Point p =\n"</span> <span class="token operator">&lt;&lt;</span> p <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    Point3f <span class="token function">p3f</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Three Dimension Point p3f =\n"</span> <span class="token operator">&lt;&lt;</span> p3f <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    vector<span class="token operator">&lt;</span><span class="token keyword">float</span><span class="token operator">&gt;</span> v<span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Point based on vector shortvec =\n"</span> <span class="token operator">&lt;&lt;</span> <span class="token function">Mat</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token string">";\n"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token comment">//Create</span>    vector<span class="token operator">&lt;</span>Point2f<span class="token operator">&gt;</span> <span class="token function">points</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        points<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Point2f</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment">//Display</span>    cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Two Dimension points =\n"</span> <span class="token operator">&lt;&lt;</span> points<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相应的输出结果如下所示：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">I<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.141592653589793</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>OpenCV <span class="token keyword">default</span> Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">;</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">;</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Python Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>  <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Numpy Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>  <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span><span class="token char">'uint8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span>Comma Style<span class="token punctuation">)</span><span class="token operator">=</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">;</span><span class="token punctuation">(</span>C Style<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">{</span> <span class="token number">91</span><span class="token punctuation">,</span>   <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">205</span><span class="token punctuation">,</span> <span class="token number">236</span><span class="token punctuation">,</span>   <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">183</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">162</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>   <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Two Dimension Point p <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Three Dimension Point p3f <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Point based on vector shortvec <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>Two Dimension points <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-2-2-从Mat中取出像素点"><a href="#2-2-2-从Mat中取出像素点" class="headerlink" title="2.2.2 从Mat中取出像素点"></a>2.2.2 从Mat中取出像素点</h4><p>本节，将介绍cpp中常用的从Mat类的实例化对象中取出像素点的3种方法，并且，每种方法均对颜色空间进行缩减，即：</p><p>0~100范围的像素值为0；</p><p>100~200范围的像素值为100；</p><p>200~255范围的像素值为200。</p><p>并且，每种方法均统计了运行时间。</p><h5 id="用指针访问像素"><a href="#用指针访问像素" class="headerlink" title="用指针访问像素"></a>用指针访问像素</h5><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    Mat srcImage <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"srcImage"</span><span class="token punctuation">,</span>srcImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat dstImage<span class="token punctuation">;</span>    dstImage<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">.</span>rows<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span>cols<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> time0 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">colorReduce</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">,</span>dstImage<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    time0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time0<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">getTickFrequency</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"This function  waste time:"</span><span class="token operator">&lt;&lt;</span>time0<span class="token operator">&lt;&lt;</span><span class="token string">" second"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"dstImage"</span><span class="token punctuation">,</span>dstImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">{</span>    outputImage <span class="token operator">=</span> inputImage<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rowNumber <span class="token operator">=</span> outputImage<span class="token punctuation">.</span>rows<span class="token punctuation">;</span>        <span class="token comment">//Number of columns * Number of channels = number of elements per line</span>    <span class="token keyword">int</span> colNumber <span class="token operator">=</span> outputImage<span class="token punctuation">.</span>cols<span class="token operator">*</span>outputImage<span class="token punctuation">.</span><span class="token function">channels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> rowNumber<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token comment">//Get the first address of the i-th line</span>        uchar<span class="token operator">*</span> data <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">ptr</span><span class="token generic class-name"><span class="token operator">&lt;</span>uchar<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> colNumber<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            data<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在该程序中，先获取每一行的元素的个数，在双重遍历中，先获取第i行的首地址，然后通过指针获取第i的第j个元素，再对该元素进行处理。</p><p>该函数的运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902023319.png"></p><p>可见，遍历所有像素点并进行处理的时间为0.02秒左右</p><h5 id="用迭代器访问像素"><a href="#用迭代器访问像素" class="headerlink" title="用迭代器访问像素"></a>用迭代器访问像素</h5><p>用迭代器访问像素点的操作如下程序所示：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>    Mat srcImage <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"srcImage"</span><span class="token punctuation">,</span>srcImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    Mat dstImage<span class="token punctuation">;</span>    dstImage<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">.</span>rows<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span>cols<span class="token punctuation">,</span>srcImage<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> time0 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">static_cast</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">double</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">colorReduce</span><span class="token punctuation">(</span>srcImage<span class="token punctuation">,</span>dstImage<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    time0 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token function">getTickCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> time0<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">getTickFrequency</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"This function  waste time:"</span><span class="token operator">&lt;&lt;</span>time0<span class="token operator">&lt;&lt;</span><span class="token string">" second"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"dstImage"</span><span class="token punctuation">,</span>dstImage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">colorReduce</span><span class="token punctuation">(</span>Mat<span class="token operator">&amp;</span> inputImage<span class="token punctuation">,</span> Mat<span class="token operator">&amp;</span> outputImage<span class="token punctuation">,</span> <span class="token keyword">int</span> div<span class="token punctuation">)</span>  <span class="token punctuation">{</span>  outputImage <span class="token operator">=</span> inputImage<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Start position iterator</span>Mat_<span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator it <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">begin</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//End position iterator</span>Mat_<span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span>iterator itend <span class="token operator">=</span> outputImage<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">end</span><span class="token generic class-name"><span class="token operator">&lt;</span>Vec3b<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span>it <span class="token operator">!=</span> itend<span class="token punctuation">;</span><span class="token operator">++</span>it<span class="token punctuation">)</span>  <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span>  <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>it<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">/</span>div<span class="token operator">*</span>div<span class="token punctuation">;</span><span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该函数运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190902025830.png"></p><p>在该方法中，直接使用迭代器进行处理，采用迭代器访问相对于数组越界的可能性，还是非常安全的，经实测，该方法遍历所有像素点并进行处理的时间为0.04秒左右。</p><p>可见，采用迭代器访问像素点的方法比采用指针访问像素点的方法慢了近一倍，因此，为提高处理速度，建议采用指针访问像素点。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_图像与视频载入、显示、输出</title>
      <link href="/2019/09/24/rpi-opencv-tu-xiang-yu-shi-pin-zai-ru-xian-shi-shu-chu/"/>
      <url>/2019/09/24/rpi-opencv-tu-xiang-yu-shi-pin-zai-ru-xian-shi-shu-chu/</url>
      
        <content type="html"><![CDATA[<p>本章，在介绍了图像的基本数据结构之后，来学习图像的一些基本操作，包括图像的载入、显示、ROI、绘图、输出等，这些操作是后续进行图像处理的必备工具。</p><h2 id="1-图像的载入-显示，与输出"><a href="#1-图像的载入-显示，与输出" class="headerlink" title="1 图像的载入,显示，与输出"></a>1 图像的载入,显示，与输出</h2><h3 id="1-1-Python3"><a href="#1-1-Python3" class="headerlink" title="1.1 Python3"></a>1.1 Python3</h3><p>现在通过一个demo来认识Python3中图像的载入，显示，与输出操作：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># default read as BGR picture</span>img1 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">)</span><span class="token comment"># show it in the window</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image1'</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token comment"># write it to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image1.jpg'</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token comment"># read as grayscale picture</span>img2 <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'color.jpg'</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token comment"># show it in the window</span>cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image2'</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token comment"># write it to local disk</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">'image2.jpg'</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际运行效果如下图所示，在运行后，在python文件路径下可找到image1.jpg，image2.jpg文件，且image2.jpg是灰度图像。</p><p><img src="http://pic.huangruimin.tech/20190903024828.png"></p><h3 id="1-2-cpp"><a href="#1-2-cpp" class="headerlink" title="1.2 cpp"></a>1.2 cpp</h3><p>cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/core/core.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">{</span>Mat img1<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image1"</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"image1.jpg"</span><span class="token punctuation">,</span>img1<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat img2<span class="token operator">=</span><span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">"color.jpg"</span><span class="token punctuation">,</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">namedWindow</span><span class="token punctuation">(</span><span class="token string">"image2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"image2"</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span><span class="token string">"image2.jpg"</span><span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-视频，摄像头的载入，显示"><a href="#2-视频，摄像头的载入，显示" class="headerlink" title="2 视频，摄像头的载入，显示"></a>2 视频，摄像头的载入，显示</h2><h3 id="2-1-Python3"><a href="#2-1-Python3" class="headerlink" title="2.1 Python3"></a>2.1 Python3</h3><p>现在通过一个demo来理解Python3中视频，摄像头的载入与显示操作,且在该操作中，包含了摄像头的翻转，摄像头开窗定义等。</p><p>同时还包含了视频的载入，显示操作；注意，OpenCV只支持读取avi格式的视频，并且不包含音频。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2capCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> capCamera<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>capVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'demo.avi'</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> capVideo<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this video"</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># set the image width and height</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span class="token comment">## image flip setup</span><span class="token comment"># * horizontal flip:  flipCode = 1</span><span class="token comment"># * Vertical flip:  flipCode = 0</span><span class="token comment"># * horizontal &amp; Vertical flip:  flipCode = -1</span>flipCode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># handle for the camera</span>    ret<span class="token punctuation">,</span> FrameCamera <span class="token operator">=</span> capCamera<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    FrameCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>FrameCamera<span class="token punctuation">,</span> flipCode<span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'camera'</span><span class="token punctuation">,</span>FrameCamera<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        <span class="token comment"># handle for the video</span>    ret<span class="token punctuation">,</span> FrameVideo <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'video'</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span>        FramVideoGray <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>FrameVideo<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'grayVideo'</span><span class="token punctuation">,</span>FramVideoGray<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>        <span class="token comment"># handle for exit</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>capCamera<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实际运行效果如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190904020442.png"></p><h3 id="2-2-cpp"><a href="#2-2-cpp" class="headerlink" title="2.2 cpp"></a>2.2 cpp</h3><p>其cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>VideoCapture <span class="token function">capCamera</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>VideoCapture <span class="token function">capVideo</span><span class="token punctuation">(</span><span class="token string">"demo.avi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this video"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Mat FrameCamera<span class="token punctuation">,</span>FrameVideo<span class="token punctuation">;</span><span class="token comment">// image flip setup</span><span class="token comment">// horizontal flip:  flipCode = 1</span><span class="token comment">// Vertical flip:  flipCode = 0</span><span class="token comment">// horizontal &amp; Vertical flip:  flipCode = -1</span><span class="token keyword">int</span> flipCode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//read by operator "&gt;&gt;"</span>capCamera<span class="token operator">&gt;&gt;</span>FrameCamera<span class="token punctuation">;</span><span class="token function">flip</span><span class="token punctuation">(</span>FrameCamera<span class="token punctuation">,</span>FrameCamera<span class="token punctuation">,</span>flipCode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"camera"</span><span class="token punctuation">,</span>FrameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//read by function read</span><span class="token keyword">bool</span> ret <span class="token operator">=</span> capVideo<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"video"</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>FrameVideo<span class="token punctuation">,</span>FrameVideo<span class="token punctuation">,</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"grayVideo"</span><span class="token punctuation">,</span>FrameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capVideo<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">destroyAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-视频，摄像头的输出"><a href="#3-视频，摄像头的输出" class="headerlink" title="3 视频，摄像头的输出"></a>3 视频，摄像头的输出</h2><p>本节主要讲解视频，摄像头的输出，即，将视频流数据保存到本地。</p><p>OpenCV只支持生成avi格式的视频，且生成的视频文件不能大于2G，且不能添加音频。</p><h3 id="3-1-Python3"><a href="#3-1-Python3" class="headerlink" title="3.1 Python3"></a>3.1 Python3</h3><p>关于视频输出，主要用到VideoWriter对象，而视频的输入，主要用到VideoCapture对象，因此，视频的输出(视频录制)的主要过程就是将VideoCapture中读入的图片写入到VideoWriter当中，在给出demo程序之前，先给出VideoWrite的使用方法：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Encode the video format as MJPG</span>fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span><span class="token comment"># Config the framrate to 20 frame per second</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token comment"># Config the Window Size by camera</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span><span class="token comment"># Create the VideoWrite Object</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先，在写入视频的时候，必须先指定视频的编码格式，这里我们指定为MJPG格式。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着，须指定视频的帧率跟窗口大小。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Config the framrate to 20 frame per second</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token comment"># Config the Window Size by camera</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，初始化VideoWriter的时候，将这些参数传入到其中。并指定输出视频文件的名称。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Create the VideoWrite Object</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来，将给出源码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment">#--------------------------------</span><span class="token comment"># set for camera</span>capCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span><span class="token number">640</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span><span class="token number">480</span><span class="token punctuation">)</span><span class="token comment"># set for camera output</span>fourcc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span><span class="token comment"># fps = capCamera.get(cv2.CAP_PROP_FPS)</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span>outCamera <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputCamera.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token comment">#--------------------------------</span><span class="token comment">#--------------------------------</span><span class="token comment"># set for video</span>capVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'demo1.avi'</span><span class="token punctuation">)</span><span class="token comment"># set for video output</span>fourcc <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FOURCC<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fourcc<span class="token punctuation">)</span>fps <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FPS<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span>frameSize <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>frameSize<span class="token punctuation">)</span>outVideo <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outputVideo.avi'</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token comment">#--------------------------------</span>choose <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Please input C or V:\n"</span><span class="token punctuation">)</span><span class="token comment"># Process for camera</span><span class="token keyword">if</span> choose <span class="token operator">==</span> <span class="token string">'C'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span>frameCamera <span class="token operator">=</span> capCamera<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        outCamera<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frameCamera<span class="token punctuation">)</span>        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"frameCamera"</span><span class="token punctuation">,</span> frameCamera<span class="token punctuation">)</span>        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token comment"># Process for video</span><span class="token keyword">elif</span> choose <span class="token operator">==</span> <span class="token string">'V'</span><span class="token punctuation">:</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span>frameVideo <span class="token operator">=</span> capVideo<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret<span class="token punctuation">:</span>            outVideo<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"framVideo"</span><span class="token punctuation">,</span> frameVideo<span class="token punctuation">)</span>        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Please input right order"</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行该代码后，将首先提示用户输入选项C(Camera)或V(Video)：当输入C之后，将打开摄像头，录制视频，并将视频保存到本地；当输入V之后，将打开本地的视频，将本地的视频重新写入到本地。</p><h3 id="3-2-cpp"><a href="#3-2-cpp" class="headerlink" title="3.2 cpp"></a>3.2 cpp</h3><p>其cpp源码类似如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//set for camera</span><span class="token comment">//---------------------------------------</span>VideoCapture <span class="token function">capCamera</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capCamera<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> fourcc <span class="token operator">=</span> <span class="token class-name">VideoWriter</span><span class="token double-colon punctuation">::</span><span class="token function">fourcc</span><span class="token punctuation">(</span><span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'P'</span><span class="token punctuation">,</span><span class="token char">'G'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//double fps = capCamera.get(CAP_PROP_FPS);</span><span class="token keyword">double</span> fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token punctuation">;</span>Size frameSize <span class="token operator">=</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,%d\r\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capCamera<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VideoWriter outCamera<span class="token punctuation">;</span>outCamera<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"outputCamera.avi"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//---------------------------------------</span><span class="token comment">//set for video</span><span class="token comment">//---------------------------------------</span>VideoCapture <span class="token function">capVideo</span><span class="token punctuation">(</span><span class="token string">"demo.avi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this video"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>fourcc <span class="token operator">=</span> <span class="token class-name">VideoWriter</span><span class="token double-colon punctuation">::</span><span class="token function">fourcc</span><span class="token punctuation">(</span><span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'P'</span><span class="token punctuation">,</span><span class="token char">'G'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\r\n"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//fps = capCVideo.get(CAP_PROP_FPS);</span>fps <span class="token operator">=</span> <span class="token number">20.0</span><span class="token punctuation">;</span>frameSize <span class="token operator">=</span> <span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d,%d\r\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>capVideo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VideoWriter outVideo<span class="token punctuation">;</span>outVideo<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"outputVideo.avi"</span><span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span>fps<span class="token punctuation">,</span>frameSize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//---------------------------------------</span><span class="token keyword">char</span> choose<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please input C or V \r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>choose<span class="token punctuation">)</span><span class="token punctuation">;</span>Mat frameCamera<span class="token punctuation">,</span> frameVideo<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token char">'C'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span>capCamera<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>capCamera<span class="token operator">&gt;&gt;</span>frameCamera<span class="token punctuation">;</span>outCamera<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>frameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"frameCamera"</span><span class="token punctuation">,</span> frameCamera<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>choose <span class="token operator">==</span> <span class="token char">'V'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">while</span><span class="token punctuation">(</span>capVideo<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">bool</span> ret <span class="token operator">=</span> capVideo<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">{</span>outVideo<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"framVideo"</span><span class="token punctuation">,</span> frameVideo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Please input right order"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>capCamera<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>capVideo<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">destroyAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其cpp源码运行效果同Python源码。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_绘图板综合</title>
      <link href="/2019/03/03/rpi-opencv-hui-tu-ban-zong-he/"/>
      <url>/2019/03/03/rpi-opencv-hui-tu-ban-zong-he/</url>
      
        <content type="html"><![CDATA[<p>在上一节中，讲解了大量的概念，比较零散，于是，在这一节，将通过一个绘图板的综合项目将上一节的知识汇总起来，此外，之前的课程主要讲解OpenCV中一些基本操作，并未涉及OpenCV的精髓内容，因此，尽量早些完成相关操作的讲解，尽快进入算法讲解的环节中。</p><h2 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1.思路分析"></a>1.思路分析</h2><p>类似于液晶触摸的书写，我们来研究下如何实现绘图功能。</p><blockquote><p>本质上，绘图是绘制线条，曲线可以分解成很多直线，直线可以分解成很多点，因此，就先从绘制点开始。</p></blockquote><blockquote><p>绘制点时鼠标在移动，因此，要设置鼠标的回调函数，那当什么时候调用回调函数呢，显然，是鼠标左键按下并且鼠标在移动的时候。</p></blockquote><blockquote><p>因此，程序整体结构是：定义一个回调函数，这个回调函数用于画图；然后建立一个窗口，窗口绑定回调函数；最后将回调函数画的图显示在这个窗口上。</p></blockquote><p>想法有了，可以开始着手了。</p><h2 id="2-写出基本结构"><a href="#2-写出基本结构" class="headerlink" title="2.写出基本结构"></a>2.写出基本结构</h2><p>由于Python的便捷性，先采用Python实现，不用太顾及语法问题。</p><p>下面先调出第一个版本的源码。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 创建一个窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 创建一个黑色图像</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 定义一个回调函数，用于绘制图像</span><span class="token keyword">def</span> <span class="token function">draw_point</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 将回调函数绑定到窗口上</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span> draw_point<span class="token punctuation">)</span><span class="token comment"># 主循环显示图像</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 保存图像</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span> <span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个版本运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029181044.png"></p><h2 id="3-总结，改进"><a href="#3-总结，改进" class="headerlink" title="3.总结，改进"></a>3.总结，改进</h2><p>在上一版本中，鼠标按下后，只能画一个点，在此情况下，需要改进为鼠标按下后，就一直画点，于是，改进后，就有了以下代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">draw_circle</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>    <span class="token keyword">global</span> isMouseLBDown    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键按下</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mouse down"</span><span class="token punctuation">)</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">True</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONUP<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键抬起</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mouse up"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE<span class="token punctuation">:</span>        <span class="token comment"># 如果鼠标按下并且鼠标在移动</span>        <span class="token keyword">if</span> isMouseLBDown<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"drawing"</span><span class="token punctuation">)</span>            cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 创建一个黑色图像，并绑定窗口和鼠标回调函数  </span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>  cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 设置鼠标事件回调</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>draw_circle<span class="token punctuation">)</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>      <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token keyword">break</span>  cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>  img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20191029191417.png"></p><p>程序运行后，在黑窗中，按下鼠标左键，并且移动鼠标，即可绘制图案。</p><h2 id="3-再次总结，改进"><a href="#3-再次总结，改进" class="headerlink" title="3.再次总结，改进"></a>3.再次总结，改进</h2><p>经过一番改进，总算是能画图了，但是，画图过程中，如果画笔速度过快，那么，将会导致出现断点，并且使用上，不能调整画笔的颜色，画笔的宽度等一系列参数。为此做了以下改进：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2  <span class="token keyword">import</span> numpy <span class="token keyword">as</span> np  <span class="token comment"># 判断鼠标是否按下的标志</span>isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span><span class="token comment"># 画笔的颜色</span>circleColor <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 画笔的粗壮</span>circleRadius <span class="token operator">=</span> <span class="token number">5</span><span class="token comment"># 上一次的点</span>lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 定义鼠标函数，用于绘图</span><span class="token keyword">def</span> <span class="token function">draw_circle</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>flags<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>     <span class="token keyword">global</span> img    <span class="token keyword">global</span> isMouseLBDown    <span class="token keyword">global</span> color    <span class="token keyword">global</span> lastPoint    <span class="token keyword">if</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONDOWN<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键按下，按下就画圆，并且记录抬起按键之前的点</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">True</span>        cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>circleRadius<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> circleColor<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_LBUTTONUP<span class="token punctuation">:</span>        <span class="token comment"># 检测到鼠标左键抬起</span>        isMouseLBDown <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">elif</span> event <span class="token operator">==</span> cv2<span class="token punctuation">.</span>EVENT_MOUSEMOVE<span class="token punctuation">:</span>        <span class="token comment"># 如果鼠标左键按下，并且鼠标在移动,就画线</span>        <span class="token comment"># 并且记录按键抬起之前的点</span>        <span class="token keyword">if</span> isMouseLBDown<span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span> pt1<span class="token operator">=</span>lastPoint<span class="token punctuation">,</span> pt2<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span>circleColor<span class="token punctuation">,</span> thickness<span class="token operator">=</span>circleRadius<span class="token punctuation">)</span>            lastPoint <span class="token operator">=</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token comment"># 定义滑动条回调函数，用于更改颜色</span><span class="token keyword">def</span> <span class="token function">updateCircleColor</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> circleColor    <span class="token keyword">global</span> colorPreviewImg    r <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    g <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    b <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">)</span>    circleColor <span class="token operator">=</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span> g<span class="token punctuation">,</span> r<span class="token punctuation">)</span>    colorPreviewImg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> circleColor<span class="token comment"># 定义滑动条回调函数，用于更改线条的粗壮</span><span class="token keyword">def</span> <span class="token function">updateCircleRadius</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> circleRadius    <span class="token keyword">global</span> radiusPreview    circleRadius <span class="token operator">=</span> cv2<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">'Circle_Radius'</span><span class="token punctuation">,</span> <span class="token string">'image'</span><span class="token punctuation">)</span>    radiusPreview<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>radiusPreview<span class="token punctuation">,</span> center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>circleRadius <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> thickness<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 预览画布用的画布</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔颜色用的画布</span>colorPreviewImg <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>colorPreviewImg<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔粗壮用的画布</span>radiusPreview <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>radiusPreview<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token comment"># 预览画布用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔颜色用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'colorPreview'</span><span class="token punctuation">)</span><span class="token comment"># 预览画笔粗壮用的窗口</span>cv2<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'radiusPreview'</span><span class="token punctuation">)</span><span class="token comment"># 画画的鼠标回调，绑定在预览画布窗口上</span>cv2<span class="token punctuation">.</span>setMouseCallback<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>draw_circle<span class="token punctuation">)</span>  <span class="token comment"># 更改颜色用的滑条回调，绑定在预览画布用的窗口</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Red'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Green'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">120</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Channel_Blue'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>updateCircleColor<span class="token punctuation">)</span><span class="token comment"># 更改线条粗壮的滑条回调，绑定在预览画布用的窗口</span>cv2<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">'Circle_Radius'</span><span class="token punctuation">,</span><span class="token string">'image'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>updateCircleRadius<span class="token punctuation">)</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 画布</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>     <span class="token comment"># 画笔颜色</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'colorPreview'</span><span class="token punctuation">,</span> colorPreviewImg<span class="token punctuation">)</span>    <span class="token comment"># 画笔线条粗壮</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'radiusPreview'</span><span class="token punctuation">,</span> radiusPreview<span class="token punctuation">)</span>    <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token keyword">break</span>cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">"OpenCV_Paint.png"</span><span class="token punctuation">,</span>  img<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序运行效如下图所示，通过该程序，即可比较方便地绘图，并且，可调整画笔的颜色以及画笔的粗细：<br><img src="http://pic.huangruimin.tech/20191029195835.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_摄像头的基本使用</title>
      <link href="/2018/10/10/rpi-opencv-she-xiang-tou-de-ji-ben-shi-yong/"/>
      <url>/2018/10/10/rpi-opencv-she-xiang-tou-de-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍计算机视觉中最核心传感器-摄像头的基本使用，主要讲解了CSI摄像头，USB摄像头，网络摄像头的基本使用。</p><h2 id="1-CSI摄像头"><a href="#1-CSI摄像头" class="headerlink" title="1 CSI摄像头"></a>1 CSI摄像头</h2><p>首先将讲解CSI摄像头的使用：</p><p><img src="http://pic.huangruimin.tech/20190831153253.png"></p><h3 id="1-1-picamera"><a href="#1-1-picamera" class="headerlink" title="1.1 picamera"></a>1.1 picamera</h3><p>树莓派自带的摄像头为CSI摄像头，在树莓派平台中，发行版的Raspbian默认安装了树莓派平台的picamera:</p><p><a href="https://picamera.readthedocs.io/en/release-1.13/index.html">相关官方文档链接</a></p><p>执行该脚本将录制一段10秒的视频到本地：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> picameracamera <span class="token operator">=</span> picamera<span class="token punctuation">.</span>PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>start_recording<span class="token punctuation">(</span><span class="token string">'my_video.h264'</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>wait_recording<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>stop_recording<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但由于picamera输出的数据是RGB格式的，需要通过Numpy转换为BGR格式，代码如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token keyword">import</span> picamera<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">with</span> picamera<span class="token punctuation">.</span>PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> camera<span class="token punctuation">:</span>    camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span>    camera<span class="token punctuation">.</span>framerate <span class="token operator">=</span> <span class="token number">24</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    image <span class="token operator">=</span> np<span class="token punctuation">.</span>empty<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">240</span> <span class="token operator">*</span> <span class="token number">320</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>    <span class="token comment"># save as bgr format for OpenCV</span>    camera<span class="token punctuation">.</span>capture<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token string">'bgr'</span><span class="token punctuation">)</span>    image <span class="token operator">=</span> image<span class="token punctuation">.</span>reshape<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，picamera 也提供了PIRGBArray对象，用来保存RGB 图像数据,下面将在capture_continuous函数中，不断地把RGB转换成BGR图像，供OpenCV显示，以形成视频流。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> picamera<span class="token punctuation">.</span>array <span class="token keyword">import</span> PiRGBArray<span class="token keyword">from</span> picamera <span class="token keyword">import</span> PiCamera<span class="token keyword">import</span> time<span class="token keyword">import</span> cv2<span class="token comment"># initialize the camera and grab a reference to the raw camera capture</span>camera <span class="token operator">=</span> PiCamera<span class="token punctuation">(</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>resolution <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">480</span><span class="token punctuation">)</span>camera<span class="token punctuation">.</span>framerate <span class="token operator">=</span> <span class="token number">32</span>rawCapture <span class="token operator">=</span> PiRGBArray<span class="token punctuation">(</span>camera<span class="token punctuation">)</span><span class="token comment"># allow the camera to warmup</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token comment"># capture frames from the camera</span><span class="token keyword">for</span> frame <span class="token keyword">in</span> camera<span class="token punctuation">.</span>capture_continuous<span class="token punctuation">(</span>rawCapture<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">"bgr"</span><span class="token punctuation">,</span> use_video_port<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    image <span class="token operator">=</span> frame<span class="token punctuation">.</span>array    <span class="token comment"># show the frame</span>    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Frame"</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>    <span class="token comment"># prepare for net stream</span>    rawCapture<span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但由于picamera为树莓派或兼容树莓派平台专用的库，且仅能供树莓派使用，下面将介绍更为通用的使用方法。</p><h3 id="1-2-V4L2"><a href="#1-2-V4L2" class="headerlink" title="1.2 V4L2"></a>1.2 V4L2</h3><p>目前,CSI摄像头可通过picamera等库进行调用，但在Raspbian系统中，并不属于一个video设备而存在，若想将CSI摄像头作为一个视频设备文件使用，则要开启V4L2(Video for Linux 2)模块以开启：</p><p>开启方法如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在末尾添加一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcm2835-v4l2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时，CSI摄像头便成为了一个video设备，此时在中断执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-ltrh</span> /dev/video*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>便可查看到video设备，其中video0便是CSI摄像头：</p><p><img src="http://pic.huangruimin.tech/20190831152421.png"></p><p>该video设备可同时供Python与cpp调用，具体使用请参考《树莓派OpenCV系列教程1：开发环境搭建》的例程。</p><h2 id="2-USB摄像头"><a href="#2-USB摄像头" class="headerlink" title="2 USB摄像头"></a>2 USB摄像头</h2><p>树莓派除了支持CSI摄像头外，同样也支持USB摄像头：</p><p><img src="http://pic.huangruimin.tech/20190831153829.png"></p><p>若采用USB摄像头，若摄像头本身免驱，接入树莓派后，将直接识别的video设备，在/dev下可找到对应的video设备，在中断，输入命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ls</span> <span class="token parameter variable">-ltrh</span> /dev/video*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即可查询到新接入的video设备。</p><p>但使用Python，cpp使用摄像头，区分不同的摄像头时：</p><p>cpp：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>python：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>传入参数0代表使用CSI摄像头，传入其它参数代表使用其它video序号对应的USB摄像头。<br>具体使用请参考《1.OpenCV开发环境搭建》的例程。</p><h2 id="3-网络摄像头"><a href="#3-网络摄像头" class="headerlink" title="3 网络摄像头"></a>3 网络摄像头</h2><p>除了使用CSI摄像头，USB摄像头外，还可以将手机变成一个IP摄像头，具体方法如下：</p><p>在手机应用市场中，搜索这款名为IP摄像头的APP，图表如下：</p><p><img src="http://pic.huangruimin.tech/20190831160527.png"></p><p>安装好后，连接wifi，确保树莓派和手机处在同一局域网内，手机打开IP摄像头软件，同时点击打开IP摄像头服务器，即可将手机变成一个IP摄像头。如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190831161321.png"></p><p>此时,在浏览器中打开该IP地址，输入用户名:admin，密码:admin，即可浏览摄像头画面：</p><p><img src="http://pic.huangruimin.tech/20190831161042.png"></p><p>此时说明手机成为了一个IP摄像头，此摄像头可供OpenCV调用。</p><p>OpenCV调用IP摄像头的源程序如下：</p><h3 id="3-1-Python3"><a href="#3-1-Python3" class="headerlink" title="3.1 Python3"></a>3.1 Python3</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token triple-quoted-string string">'''Waveshare OpenCV Tutorial01_IP_Camera.pyA demo to show whether The OpenCV and IP camera is well installed'''</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OpenCV Version:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 0: use CSI camera,1：use USB camera</span>    ip_camera_url <span class="token operator">=</span> <span class="token string">'http://admin:admin@192.168.10.215:8081'</span>    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>ip_camera_url<span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span> FrameImage <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Camera Capture'</span><span class="token punctuation">,</span>FrameImage<span class="token punctuation">)</span>            <span class="token comment">#Press Q to quit</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>__doc__<span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Release resource</span>    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20190831172850.png"></p><h3 id="3-2-cpp"><a href="#3-2-cpp" class="headerlink" title="3.2 cpp"></a>3.2 cpp</h3><p>相应地，cpp程序读取网络摄像头的程序如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Waveshare OpenCV Tutorial"</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"00_Test_OpenCV"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"A demo to show whether The OpenCV and IP camera is well installed"</span> <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"OpenCV Version:"</span> <span class="token operator">&lt;&lt;</span> CV_VERSION <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token keyword">const</span> string ip_camera_url <span class="token operator">=</span> <span class="token string">"http://admin:admin@192.168.10.215:8081"</span><span class="token punctuation">;</span>VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span>ip_camera_url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mat FrameImage<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cap<span class="token operator">&gt;&gt;</span>FrameImage<span class="token punctuation">;</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Camera Capture"</span><span class="token punctuation">,</span>FrameImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Press Q to quit</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行效果如下图所示：<br><img src="http://pic.huangruimin.tech/20190831181427.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>RPi-OpenCV_开发环境搭建</title>
      <link href="/2018/10/07/rpi-opencv-kai-fa-huan-jing-da-jian/"/>
      <url>/2018/10/07/rpi-opencv-kai-fa-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<p>本章将介绍OpenCV开发环境的搭建，搭建的版本为OpenCV4.1.0，同时支持Python3和cpp，在搭建好后，将通过一个cpp和Python的Demo打开CSI摄像头来测试开发环境是否搭建完成。</p><h2 id="1-烧录系统"><a href="#1-烧录系统" class="headerlink" title="1 烧录系统"></a>1 烧录系统</h2><p>本教程采用的镜像是树莓派官方2019年7月10日发布的发行版镜像，代号Buster，如下图所示：<br><img src="http://pic.huangruimin.tech/20190821152022.png"></p><h2 id="2-基本设置"><a href="#2-基本设置" class="headerlink" title="2 基本设置"></a>2 基本设置</h2><h3 id="2-1-把目录扩展到整个TF卡"><a href="#2-1-把目录扩展到整个TF卡" class="headerlink" title="2.1 把目录扩展到整个TF卡"></a>2.1 把目录扩展到整个TF卡</h3><p>本次搭建OpenCV开发环境，至少选择16G的TF卡，为了充分利用TF的存储空间，需要将TF卡空间扩展到整个TF卡。<br>在命令行输入命令，进入树莓派配置界面，用上下左右切换光标位置。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> raspi-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="http://pic.huangruimin.tech/20190830130336.png"><br><img src="http://pic.huangruimin.tech/20190830130406.png"></p><h3 id="2-2-开启摄像头"><a href="#2-2-开启摄像头" class="headerlink" title="2.2 开启摄像头"></a>2.2 开启摄像头</h3><p>作为开源计算机视觉库，主要进行图像处理，对摄像头图像数据进行处理是主要需求，因此，开启摄像头是很有必要的。</p><h4 id="2-2-1-启用摄像头"><a href="#2-2-1-启用摄像头" class="headerlink" title="2.2.1 启用摄像头"></a>2.2.1 启用摄像头</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> raspi-config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>进入Interfacing Options-&gt;Camera-&gt;Yes，即可启用摄像头。<br>检测摄像头是否正常，可以使用以下命令进行检测：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">raspivid <span class="token parameter variable">-t</span> <span class="token number">0</span> <span class="token parameter variable">-cs</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-2-2-准备视频流设备"><a href="#2-2-2-准备视频流设备" class="headerlink" title="2.2.2 准备视频流设备"></a>2.2.2 准备视频流设备</h4><p>在OpenCV中，若要读取摄像头数据，需要开启v4l2(video for linux 2)，开启后，摄像头设备文件为/dev/video0，OpenCV将从该文件中读取视频流文件。</p><p>开启方法如下:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vim</span> /etc/modules<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在末尾添加一行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">bcm2835-v4l2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-3-更换软件源"><a href="#2-3-更换软件源" class="headerlink" title="2.3 更换软件源"></a>2.3 更换软件源</h3><p>鉴于国内网络环境下载各大镜像，软件包速度慢的问题，需要更换软件源，以防下载慢，且在本教程中，统一更换为清华源。</p><h4 id="2-3-1-更换树莓派软件源"><a href="#2-3-1-更换树莓派软件源" class="headerlink" title="2.3.1 更换树莓派软件源"></a>2.3.1 更换树莓派软件源</h4><p>包括系统源与系统更新源，操作方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 编辑 `/etc/apt/sources.list` 文件，删除原文件所有内容，用以下内容取代：</span>deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contribdeb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main non-free contrib<span class="token comment"># 编辑 `/etc/apt/sources.list.d/raspi.list` 文件，删除原文件所有内容，用以下内容取代：</span>deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main ui<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如下图所示：<br><img src="http://pic.huangruimin.tech/20190830132453.png"><br><img src="http://pic.huangruimin.tech/20190830132542.png"></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">清华软件源Raspbian官方说明</a></p><h4 id="2-3-2-更换pip软件源"><a href="#2-3-2-更换pip软件源" class="headerlink" title="2.3.2 更换pip软件源"></a>2.3.2 更换pip软件源</h4><p>为加速Python pip安装速度，特更改Python软件源，操作方法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pip <span class="token parameter variable">-U</span>pip config <span class="token builtin class-name">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/">清华软件源Pypi官方说明</a></p><h3 id="2-4-重启"><a href="#2-4-重启" class="headerlink" title="2.4 重启"></a>2.4 重启</h3><p>以上步骤均完成之后，需要进行重启才生效，重启命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-安装OpenCV所需要的库"><a href="#3-安装OpenCV所需要的库" class="headerlink" title="3 安装OpenCV所需要的库"></a>3 安装OpenCV所需要的库</h2><h3 id="3-1-安装numpy"><a href="#3-1-安装numpy" class="headerlink" title="3.1 安装numpy"></a>3.1 安装numpy</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> pip3 <span class="token function">install</span> numpy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-2-安装OpenCV所需的依赖"><a href="#3-2-安装OpenCV所需的依赖" class="headerlink" title="3.2 安装OpenCV所需的依赖"></a>3.2 安装OpenCV所需的依赖</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> build-essential <span class="token function">git</span> cmake pkg-config <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libjpeg8-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libtiff5-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libjasper-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libpng12-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libavcodec-dev libavformat-dev libswscale-dev libv4l-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libgtk2.0-dev <span class="token parameter variable">-y</span><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libatlas-base-dev gfortran <span class="token parameter variable">-y</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-下载OpenCV"><a href="#4-下载OpenCV" class="headerlink" title="4 下载OpenCV"></a>4 下载OpenCV</h2><p>本次安装的OpenCV版本为OpenCV 4.1.0，<a href="https://opencv.org/releases/">官方链接地址</a></p><p>需要下载包括OpenCV与OpenCV_Contrib两个仓库</p><p>OpenCV_4.1.0仓库：<a href="https://github.com/opencv/opencv/tree/4.1.0">Github地址</a></p><p>OpenCV_Contrib_4.1.0仓库：<a href="https://github.com/opencv/opencv_contrib/tree/4.1.0">Github地址</a></p><p>鉴于下载速度慢，建议采用Git Bash下载：</p><p>下载命令如下，注意添加–recursive及-b 4.1.0</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4.1</span>.0 <span class="token parameter variable">--recursive</span> https://github.com/opencv/opencv.git<span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token number">4.1</span>.0 <span class="token parameter variable">--recursive</span> https://github.com/opencv/opencv_contrib.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下载后，建议采用Fillzilla或者U盘等方法把文件传输到树莓派中。</p><p><img src="http://pic.huangruimin.tech/20190830153146.png"></p><p>当然，也可以直接在树莓派命令行窗口执行以上命令进行下载，但请确保网络稳定。</p><h2 id="5-配置Cmake"><a href="#5-配置Cmake" class="headerlink" title="5 配置Cmake"></a>5 配置Cmake</h2><p>Cmake是一款跨平台的编译工具，经过配置，可输出适配于树莓派平台的Makefile</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /home/pi/Downloads/opencv-4.1.0<span class="token function">mkdir</span> build<span class="token builtin class-name">cd</span> build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>配置Cmake，执行以下命令：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cmake <span class="token parameter variable">-D</span> <span class="token assign-left variable">CMAKE_BUILD_TYPE</span><span class="token operator">=</span>RELEASE <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">CMAKE_INSTALL_PREFIX</span><span class="token operator">=</span>/usr/local <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">INSTALL_C_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">INSTALL_PYTHON_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">OPENCV_EXTRA_MODULES_PATH</span><span class="token operator">=</span>/home/pi/Downloads/opencv-4.1.0/opencv_contrib-3.4.0/modules <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">BUILD_EXAMPLES</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">WITH_LIBV4L</span><span class="token operator">=</span>ON <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON3_EXECUTABLE</span><span class="token operator">=</span>/usr/bin/python3.7 <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON_INCLUDE_DIR</span><span class="token operator">=</span>/usr/include/python3.7 <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON_LIBRARY</span><span class="token operator">=</span>/usr/lib/arm-linux-gnueabihf/libpython3.7m.so <span class="token punctuation">\</span><span class="token parameter variable">-D</span> <span class="token assign-left variable">PYTHON3_NUMPY_INCLUDE_DIRS</span><span class="token operator">=</span>/usr/lib/python3/dist-packages/numpy/core/include <span class="token punctuation">\</span><span class="token punctuation">..</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，以上命令需要根据您具体的软件环境进行修改，否则很可能报错。<br>其中：</p><ul><li>CMAKE_BUILD_TYPE=RELEASE \ 代表编译类型为发行版本</li><li>CMAKE_INSTALL_PREFIX=/usr/local \ 安装路径</li><li>INSTALL_C_EXAMPLES=ON \ C demo</li><li>INSTALL_PYTHON_EXAMPLES=ON \ Python demo</li><li>OPENCV_EXTRA_MODULES_PATH=/home/pi/Downloads/opencv-4.1.0/opencv_contrib-3.4.0/modules \ OpenCV Contrib路径</li><li>BUILD_EXAMPLES=ON \ 编译demo</li><li>WITH_LIBV4L=ON \ 开启Video for Linux</li><li>PYTHON3_EXECUTABLE=/usr/bin/python3.7 \ Python3路径</li><li>PYTHON_INCLUDE_DIR=/usr/include/python3.7 \ Python3 include文件夹</li><li>PYTHON_LIBRARY=/usr/lib/arm-linux-gnueabihf/libpython3.7m.so \ Python3库</li><li>PYTHON3_NUMPY_INCLUDE_DIRS=/usr/lib/python3/dist-packages/numpy/core/include \ Python3 Numpy安装路径</li><li>..</li></ul><p>如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190829173935.png"></p><p>cmake 配置完成后的界面如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190829172645.png"></p><p>注意：cmake执行时间一般在15分钟左右。</p><h2 id="6-编译"><a href="#6-编译" class="headerlink" title="6 编译"></a>6 编译</h2><p>在Cmake生成Makefile之后，便可进行编译：<br>输入并执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">make</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>即开始进行编译，编译过程如下图所示：<br><img src="http://pic.huangruimin.tech/20190829203241.png"></p><p>注意：make编译时间比较长，一般编译时间在5小时左右。</p><h2 id="7-安装"><a href="#7-安装" class="headerlink" title="7 安装"></a>7 安装</h2><p>输入以下命令即可进行安装：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">make</span> insall<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>注意：install安装时间一般在1分钟左右。</p><h2 id="8-测试是否安装完成"><a href="#8-测试是否安装完成" class="headerlink" title="8 测试是否安装完成"></a>8 测试是否安装完成</h2><p>测试包括Python及cpp的测试，用到了摄像头及简单的OpenCV处理函数。</p><h3 id="8-1-Python3："><a href="#8-1-Python3：" class="headerlink" title="8.1 Python3："></a>8.1 Python3：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span><span class="token triple-quoted-string string">'''Waveshare OpenCV Tutorial00_Test_OpenCV.pyA demo to show whether The OpenCV and CSI camera is well installed'''</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"OpenCV Version:{}"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># 0: use CSI camera,1：use USB camera</span>    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"can't open this camera"</span><span class="token punctuation">)</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        ret<span class="token punctuation">,</span> FrameImage <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token comment"># change to gray image</span>            GrayImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>FrameImage<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>            <span class="token comment"># blur the image </span>            BlurImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>blur<span class="token punctuation">(</span>GrayImage<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment"># use canny to detect contour</span>            CannyImage <span class="token operator">=</span> cv2<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>BlurImage<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span>            <span class="token comment"># show the image</span>            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Camera Capture'</span><span class="token punctuation">,</span>CannyImage<span class="token punctuation">)</span>            <span class="token comment">#Press Q to quit</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>__doc__<span class="token punctuation">)</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Release resource</span>    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行该Python脚本的情况如下：<br><img src="http://pic.huangruimin.tech/20190830201403.png"></p><h3 id="8-2-cpp："><a href="#8-2-cpp：" class="headerlink" title="8.2 cpp："></a>8.2 cpp：</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/opencv.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/highgui/highgui.hpp&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;opencv2/imgproc/imgproc.hpp&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">using</span> <span class="token keyword">namespace</span> cv<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Waveshare OpenCV Tutorial"</span><span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"00_Test_OpenCV"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"A demo to show whether The OpenCV and CSI camera is well installed"</span> <span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"OpenCV Version:"</span> <span class="token operator">&lt;&lt;</span> CV_VERSION <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span><span class="token comment">// 0: use CSI camera,1：use USB camera</span>VideoCapture <span class="token function">cap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cap<span class="token punctuation">.</span><span class="token function">isOpened</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cout<span class="token operator">&lt;&lt;</span><span class="token string">"can't open this camera"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mat FrameImage<span class="token punctuation">,</span>GrayImage<span class="token punctuation">,</span>BlurImage<span class="token punctuation">,</span>CannyImage<span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cap<span class="token operator">&gt;&gt;</span>FrameImage<span class="token punctuation">;</span><span class="token comment">//Change to gray image</span><span class="token function">cvtColor</span><span class="token punctuation">(</span>FrameImage<span class="token punctuation">,</span>GrayImage<span class="token punctuation">,</span>COLOR_BGR2GRAY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//blur the image</span><span class="token function">blur</span><span class="token punctuation">(</span>GrayImage<span class="token punctuation">,</span>BlurImage<span class="token punctuation">,</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//use canny to detect contour</span><span class="token function">Canny</span><span class="token punctuation">(</span>BlurImage<span class="token punctuation">,</span>CannyImage<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//show the image</span><span class="token function">imshow</span><span class="token punctuation">(</span><span class="token string">"Camera Capture"</span><span class="token punctuation">,</span>CannyImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Press Q to quit</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token function">waitKey</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">'q'</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CMakeLists.txt：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">cmake_minimum_required</span><span class="token punctuation">(</span>VERSION <span class="token number">3.0</span><span class="token punctuation">)</span><span class="token function">project</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV<span class="token punctuation">)</span><span class="token function">find_package</span><span class="token punctuation">(</span>OpenCV REQUIRED<span class="token punctuation">)</span><span class="token function">add_executable</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV <span class="token number">00</span>_Test_OpenCV<span class="token punctuation">.</span>cpp<span class="token punctuation">)</span><span class="token function">target_link_libraries</span><span class="token punctuation">(</span><span class="token number">00</span>_Test_OpenCV $<span class="token punctuation">{</span>OpenCV_LIBS<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译并运行：<br><img src="http://pic.huangruimin.tech/20190830201919.png"></p><h2 id="9-结语"><a href="#9-结语" class="headerlink" title="9 结语"></a>9 结语</h2><p>若中途有安装失败，或多次尝试安装失败，或者想在搭建环境的时候节省时间，可直接使用我们提供的镜像，在我们提供的镜像中，除了已安装OpenCV4.1.0之外，还安装了TensorFlow和Keras，如下图所示：</p><p><img src="http://pic.huangruimin.tech/20190830204006.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>调试专用页面</title>
      <link href="/2018/09/07/diao-shi-zhuan-yong-ye-mian/"/>
      <url>/2018/09/07/diao-shi-zhuan-yong-ye-mian/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
